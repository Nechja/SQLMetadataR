[
  {
    "object_type": "table",
    "name": "actor",
    "description": "Performers who appear in films",
    "domain": "Content",
    "business_owner": "Content Management Team",
    "primary_keys": [
      "actor_id"
    ],
    "row_count": 200,
    "column_count": 4,
    "business_rules": {},
    "column_names": [
      "actor_id",
      "first_name",
      "last_name",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "film_actor",
        "relationship": "film_actor.actor_id \u2192 actor.actor_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from actor",
        "query": "SELECT * FROM actor LIMIT 10;"
      },
      {
        "description": "Filter actor by actor_id",
        "query": "SELECT * FROM actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order actor by actor_id",
        "query": "SELECT * FROM actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Select all data from film_actor",
        "query": "SELECT * FROM film_actor LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM actor;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "domain_terms": {
      "actor": [
        "performer",
        "star",
        "cast member"
      ]
    },
    "text_representation": "Table: actor\n\nDescription: Performers who appear in films\nDomain: Content\nBusiness Owner: Content Management Team\nPrimary Keys: actor_id\nRow Count: 200\n\nColumns:\n- actor_id (numeric): Unique identifier for each actor\n- first_name (VARCHAR(45)): Actor's first name\n- last_name (VARCHAR(45)): Actor's last name\n- last_update (TIMESTAMP): Last time the actor record was updated\n\nRelated Tables:\n- film_actor (one_to_one): film_actor.actor_id \u2192 actor.actor_id\n\nAlternative Terms:\n- actor: performer, star, cast member\n"
  },
  {
    "object_type": "table",
    "name": "address",
    "description": "Table containing address data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "address_id"
    ],
    "row_count": 603,
    "column_count": 8,
    "business_rules": {},
    "column_names": [
      "address_id",
      "address",
      "address2",
      "district",
      "city_id",
      "postal_code",
      "phone",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "city",
        "relationship": "address.city_id \u2192 city.city_id",
        "type": "many_to_one"
      },
      {
        "table": "customer",
        "relationship": "customer.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "relationship": "staff.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "relationship": "store.address_id \u2192 address.address_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from address",
        "query": "SELECT * FROM address LIMIT 10;"
      },
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      },
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: address\n\nDescription: Table containing address data\nPrimary Keys: address_id\nRow Count: 603\n\nColumns:\n- address_id (INT): address_id (INT)\n- address (VARCHAR(50)): address (VARCHAR(50))\n- address2 (VARCHAR(50)): address2 (VARCHAR(50))\n- district (VARCHAR(20)): district (VARCHAR(20))\n- city_id (INT): city_id (INT)\n- postal_code (VARCHAR(10)): postal_code (VARCHAR(10))\n- phone (VARCHAR(20)): phone (VARCHAR(20))\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- city (many_to_one): address.city_id \u2192 city.city_id\n- customer (many_to_one): customer.address_id \u2192 address.address_id\n- staff (many_to_one): staff.address_id \u2192 address.address_id\n- store (many_to_one): store.address_id \u2192 address.address_id\n"
  },
  {
    "object_type": "table",
    "name": "category",
    "description": "Table containing category data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "category_id"
    ],
    "row_count": 16,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "category_id",
      "name",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "film_category",
        "relationship": "film_category.category_id \u2192 category.category_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from category",
        "query": "SELECT * FROM category LIMIT 10;"
      },
      {
        "description": "Filter category by category_id",
        "query": "SELECT * FROM category WHERE category_id = 1 LIMIT 10;"
      },
      {
        "description": "Order category by category_id",
        "query": "SELECT * FROM category ORDER BY category_id DESC LIMIT 10;"
      },
      {
        "description": "Select all data from film_category",
        "query": "SELECT * FROM film_category LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: category\n\nDescription: Table containing category data\nPrimary Keys: category_id\nRow Count: 16\n\nColumns:\n- category_id (SMALLINT): category_id (SMALLINT)\n- name (VARCHAR(25)): name (VARCHAR(25))\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- film_category (one_to_one): film_category.category_id \u2192 category.category_id\n"
  },
  {
    "object_type": "table",
    "name": "city",
    "description": "Table containing city data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "city_id"
    ],
    "row_count": 600,
    "column_count": 4,
    "business_rules": {},
    "column_names": [
      "city_id",
      "city",
      "country_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "address",
        "relationship": "address.city_id \u2192 city.city_id",
        "type": "many_to_one"
      },
      {
        "table": "country",
        "relationship": "city.country_id \u2192 country.country_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from city",
        "query": "SELECT * FROM city LIMIT 10;"
      },
      {
        "description": "Filter city by city_id",
        "query": "SELECT * FROM city WHERE city_id = 1 LIMIT 10;"
      },
      {
        "description": "Order city by city_id",
        "query": "SELECT * FROM city ORDER BY city_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for city",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: city\n\nDescription: Table containing city data\nPrimary Keys: city_id\nRow Count: 600\n\nColumns:\n- city_id (INT): city_id (INT)\n- city (VARCHAR(50)): city (VARCHAR(50))\n- country_id (SMALLINT): country_id (SMALLINT)\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- address (many_to_one): address.city_id \u2192 city.city_id\n- country (many_to_one): city.country_id \u2192 country.country_id\n"
  },
  {
    "object_type": "table",
    "name": "country",
    "description": "Table containing country data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "country_id"
    ],
    "row_count": 109,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "country_id",
      "country",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "city",
        "relationship": "city.country_id \u2192 country.country_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from country",
        "query": "SELECT * FROM country LIMIT 10;"
      },
      {
        "description": "Filter country by country_id",
        "query": "SELECT * FROM country WHERE country_id = 1 LIMIT 10;"
      },
      {
        "description": "Order country by country_id",
        "query": "SELECT * FROM country ORDER BY country_id DESC LIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: country\n\nDescription: Table containing country data\nPrimary Keys: country_id\nRow Count: 109\n\nColumns:\n- country_id (SMALLINT): country_id (SMALLINT)\n- country (VARCHAR(50)): country (VARCHAR(50))\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- city (many_to_one): city.country_id \u2192 country.country_id\n"
  },
  {
    "object_type": "table",
    "name": "customer",
    "description": "Individuals who rent DVDs from the store",
    "domain": "Customer Management",
    "business_owner": "Customer Service",
    "primary_keys": [
      "customer_id"
    ],
    "row_count": 599,
    "column_count": 9,
    "business_rules": {
      "active_status": "Inactive customers cannot rent films",
      "late_fee": "Customers with outstanding late fees cannot rent additional films"
    },
    "column_names": [
      "customer_id",
      "store_id",
      "first_name",
      "last_name",
      "email",
      "address_id",
      "active",
      "create_date",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "address",
        "relationship": "customer.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "relationship": "customer.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "payment",
        "relationship": "payment.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "relationship": "rental.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from customer",
        "query": "SELECT * FROM customer LIMIT 10;"
      },
      {
        "description": "Filter customer by customer_id",
        "query": "SELECT * FROM customer WHERE customer_id = 1 LIMIT 10;"
      },
      {
        "description": "Order customer by customer_id",
        "query": "SELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for customer",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "domain_terms": {
      "customer": [
        "client",
        "member",
        "renter"
      ],
      "active": [
        "current",
        "valid"
      ]
    },
    "text_representation": "Table: customer\n\nDescription: Individuals who rent DVDs from the store\nDomain: Customer Management\nBusiness Owner: Customer Service\nPrimary Keys: customer_id\nRow Count: 599\n\nColumns:\n- customer_id (INT): Unique identifier for each customer\n- store_id (INT): Store location where customer is registered\n- first_name (VARCHAR(45)): Customer's first name\n- last_name (VARCHAR(45)): Customer's last name\n- email (VARCHAR(50)): Customer's email address for notifications\n- address_id (INT): Reference to customer's address\n- active (CHAR(1)): Whether the customer account is active (1) or inactive (0)\n- create_date (TIMESTAMP): Date when the customer account was created\n- last_update (TIMESTAMP): Last time customer information was updated\n\nBusiness Rules:\n- active_status: Inactive customers cannot rent films\n- late_fee: Customers with outstanding late fees cannot rent additional films\n\nRelated Tables:\n- address (many_to_one): customer.address_id \u2192 address.address_id\n- store (many_to_one): customer.store_id \u2192 store.store_id\n- payment (many_to_one): payment.customer_id \u2192 customer.customer_id\n- rental (many_to_one): rental.customer_id \u2192 customer.customer_id\n\nAlternative Terms:\n- customer: client, member, renter\n- active: current, valid\n"
  },
  {
    "object_type": "table",
    "name": "film",
    "description": "Movies available for rental in DVD format",
    "domain": "Inventory",
    "business_owner": "Content Management Team",
    "primary_keys": [
      "film_id"
    ],
    "row_count": 1000,
    "column_count": 13,
    "business_rules": {
      "rental_pricing": "Rental rate must be less than replacement cost",
      "rating_restriction": "NC-17 films cannot be rented to customers under 18"
    },
    "column_names": [
      "film_id",
      "title",
      "description",
      "release_year",
      "language_id",
      "original_language_id",
      "rental_duration",
      "rental_rate",
      "length",
      "replacement_cost",
      "rating",
      "special_features",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "language",
        "relationship": "film.original_language_id \u2192 language.language_id",
        "type": "many_to_one"
      },
      {
        "table": "language",
        "relationship": "film.language_id \u2192 language.language_id",
        "type": "many_to_one"
      },
      {
        "table": "film_actor",
        "relationship": "film_actor.film_id \u2192 film.film_id",
        "type": "one_to_one"
      },
      {
        "table": "film_category",
        "relationship": "film_category.film_id \u2192 film.film_id",
        "type": "one_to_one"
      },
      {
        "table": "inventory",
        "relationship": "inventory.film_id \u2192 film.film_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from film",
        "query": "SELECT * FROM film LIMIT 10;"
      },
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Select all data from film_actor",
        "query": "SELECT * FROM film_actor LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Select all data from film_category",
        "query": "SELECT * FROM film_category LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Select all data from film_text",
        "query": "SELECT * FROM film_text LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {
      "film": [
        "movie",
        "title",
        "DVD"
      ],
      "rental_rate": [
        "price",
        "cost",
        "fee"
      ]
    },
    "text_representation": "Table: film\n\nDescription: Movies available for rental in DVD format\nDomain: Inventory\nBusiness Owner: Content Management Team\nPrimary Keys: film_id\nRow Count: 1000\n\nColumns:\n- film_id (INT): Unique identifier for each film\n- title (VARCHAR(255)): The title of the film as it appears on the DVD cover\n- description (BLOB SUB_TYPE TEXT): Brief plot summary of the film\n- release_year (VARCHAR(4)): Year the film was released in theaters\n- language_id (SMALLINT): Original language of the film\n- original_language_id (SMALLINT): original_language_id (SMALLINT)\n- rental_duration (SMALLINT): Standard rental period in days\n- rental_rate (DECIMAL(4,2)): Standard rental cost in dollars\n- length (SMALLINT): Runtime of the film in minutes\n- replacement_cost (DECIMAL(5,2)): Cost to replace the DVD if damaged\n- rating (VARCHAR(10)): Film rating (G, PG, PG-13, R, NC-17)\n- special_features (VARCHAR(100)): Special features included on the DVD\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nBusiness Rules:\n- rental_pricing: Rental rate must be less than replacement cost\n- rating_restriction: NC-17 films cannot be rented to customers under 18\n\nRelated Tables:\n- language (many_to_one): film.original_language_id \u2192 language.language_id\n- language (many_to_one): film.language_id \u2192 language.language_id\n- film_actor (one_to_one): film_actor.film_id \u2192 film.film_id\n- film_category (one_to_one): film_category.film_id \u2192 film.film_id\n- inventory (many_to_one): inventory.film_id \u2192 film.film_id\n\nAlternative Terms:\n- film: movie, title, DVD\n- rental_rate: price, cost, fee\n"
  },
  {
    "object_type": "table",
    "name": "film_actor",
    "description": "Table containing film_actor data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "actor_id",
      "film_id"
    ],
    "row_count": 5462,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "actor_id",
      "film_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "film",
        "relationship": "film_actor.film_id \u2192 film.film_id",
        "type": "one_to_one"
      },
      {
        "table": "actor",
        "relationship": "film_actor.actor_id \u2192 actor.actor_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from film_actor",
        "query": "SELECT * FROM film_actor LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: film_actor\n\nDescription: Table containing film_actor data\nPrimary Keys: actor_id, film_id\nRow Count: 5462\n\nColumns:\n- actor_id (INT): actor_id (INT)\n- film_id (INT): film_id (INT)\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- film (one_to_one): film_actor.film_id \u2192 film.film_id\n- actor (one_to_one): film_actor.actor_id \u2192 actor.actor_id\n"
  },
  {
    "object_type": "table",
    "name": "film_category",
    "description": "Table containing film_category data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "film_id",
      "category_id"
    ],
    "row_count": 1000,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "film_id",
      "category_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "category",
        "relationship": "film_category.category_id \u2192 category.category_id",
        "type": "one_to_one"
      },
      {
        "table": "film",
        "relationship": "film_category.film_id \u2192 film.film_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from film_category",
        "query": "SELECT * FROM film_category LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: film_category\n\nDescription: Table containing film_category data\nPrimary Keys: film_id, category_id\nRow Count: 1000\n\nColumns:\n- film_id (INT): film_id (INT)\n- category_id (SMALLINT): category_id (SMALLINT)\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- category (one_to_one): film_category.category_id \u2192 category.category_id\n- film (one_to_one): film_category.film_id \u2192 film.film_id\n"
  },
  {
    "object_type": "table",
    "name": "film_text",
    "description": "Table containing film_text data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "film_id"
    ],
    "row_count": 0,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "film_id",
      "title",
      "description"
    ],
    "related_tables": [],
    "query_examples": [
      {
        "description": "Select all data from film_text",
        "query": "SELECT * FROM film_text LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: film_text\n\nDescription: Table containing film_text data\nPrimary Keys: film_id\nRow Count: 0\n\nColumns:\n- film_id (SMALLINT): film_id (SMALLINT)\n- title (VARCHAR(255)): title (VARCHAR(255))\n- description (BLOB SUB_TYPE TEXT): description (BLOB SUB_TYPE TEXT)\n"
  },
  {
    "object_type": "table",
    "name": "inventory",
    "description": "Table containing inventory data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "inventory_id"
    ],
    "row_count": 4581,
    "column_count": 4,
    "business_rules": {},
    "column_names": [
      "inventory_id",
      "film_id",
      "store_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "film",
        "relationship": "inventory.film_id \u2192 film.film_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "relationship": "inventory.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "relationship": "rental.inventory_id \u2192 inventory.inventory_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from inventory",
        "query": "SELECT * FROM inventory LIMIT 10;"
      },
      {
        "description": "Filter inventory by inventory_id",
        "query": "SELECT * FROM inventory WHERE inventory_id = 1 LIMIT 10;"
      },
      {
        "description": "Order inventory by inventory_id",
        "query": "SELECT * FROM inventory ORDER BY inventory_id DESC LIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for inventory",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(inventory_id) as average,\n    SUM(inventory_id) as total,\n    MIN(inventory_id) as minimum,\n    MAX(inventory_id) as maximum\nFROM inventory;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from inventory",
        "query": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with inventory and rental",
        "query": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: inventory\n\nDescription: Table containing inventory data\nPrimary Keys: inventory_id\nRow Count: 4581\n\nColumns:\n- inventory_id (INT): inventory_id (INT)\n- film_id (INT): film_id (INT)\n- store_id (INT): store_id (INT)\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- film (many_to_one): inventory.film_id \u2192 film.film_id\n- store (many_to_one): inventory.store_id \u2192 store.store_id\n- rental (many_to_one): rental.inventory_id \u2192 inventory.inventory_id\n"
  },
  {
    "object_type": "table",
    "name": "language",
    "description": "Table containing language data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "language_id"
    ],
    "row_count": 6,
    "column_count": 3,
    "business_rules": {},
    "column_names": [
      "language_id",
      "name",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "film",
        "relationship": "film.original_language_id \u2192 language.language_id",
        "type": "many_to_one"
      },
      {
        "table": "film",
        "relationship": "film.language_id \u2192 language.language_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from language",
        "query": "SELECT * FROM language LIMIT 10;"
      },
      {
        "description": "Filter language by language_id",
        "query": "SELECT * FROM language WHERE language_id = 1 LIMIT 10;"
      },
      {
        "description": "Order language by language_id",
        "query": "SELECT * FROM language ORDER BY language_id DESC LIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: language\n\nDescription: Table containing language data\nPrimary Keys: language_id\nRow Count: 6\n\nColumns:\n- language_id (SMALLINT): language_id (SMALLINT)\n- name (CHAR(20)): name (CHAR(20))\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- film (many_to_one): film.original_language_id \u2192 language.language_id\n- film (many_to_one): film.language_id \u2192 language.language_id\n"
  },
  {
    "object_type": "table",
    "name": "payment",
    "description": "Financial transactions for rentals and late fees",
    "domain": "Finance",
    "business_owner": "Accounting Team",
    "primary_keys": [
      "payment_id"
    ],
    "row_count": 16049,
    "column_count": 7,
    "business_rules": {
      "refund_policy": "Refunds must be processed within 30 days of the original payment"
    },
    "column_names": [
      "payment_id",
      "customer_id",
      "staff_id",
      "rental_id",
      "amount",
      "payment_date",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "staff",
        "relationship": "payment.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      },
      {
        "table": "customer",
        "relationship": "payment.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "relationship": "payment.rental_id \u2192 rental.rental_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from payment",
        "query": "SELECT * FROM payment LIMIT 10;"
      },
      {
        "description": "Filter payment by payment_id",
        "query": "SELECT * FROM payment WHERE payment_id = 1 LIMIT 10;"
      },
      {
        "description": "Order payment by payment_id",
        "query": "SELECT * FROM payment ORDER BY payment_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for payment",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(payment_id) as average,\n    SUM(payment_id) as total,\n    MIN(payment_id) as minimum,\n    MAX(payment_id) as maximum\nFROM payment;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from rental",
        "query": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with rental and payment",
        "query": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {
      "payment": [
        "transaction",
        "charge",
        "receipt"
      ],
      "amount": [
        "payment amount",
        "charge",
        "fee"
      ]
    },
    "text_representation": "Table: payment\n\nDescription: Financial transactions for rentals and late fees\nDomain: Finance\nBusiness Owner: Accounting Team\nPrimary Keys: payment_id\nRow Count: 16049\n\nColumns:\n- payment_id (INT): Unique identifier for each payment\n- customer_id (INT): Customer who made the payment\n- staff_id (SMALLINT): Staff member who processed the payment\n- rental_id (INT): Associated rental transaction (if applicable)\n- amount (DECIMAL(5,2)): Payment amount in dollars\n- payment_date (TIMESTAMP): Date and time when the payment was made\n- last_update (TIMESTAMP): Last time the payment record was updated\n\nBusiness Rules:\n- refund_policy: Refunds must be processed within 30 days of the original payment\n\nRelated Tables:\n- staff (many_to_one): payment.staff_id \u2192 staff.staff_id\n- customer (many_to_one): payment.customer_id \u2192 customer.customer_id\n- rental (many_to_one): payment.rental_id \u2192 rental.rental_id\n\nAlternative Terms:\n- payment: transaction, charge, receipt\n- amount: payment amount, charge, fee\n"
  },
  {
    "object_type": "table",
    "name": "rental",
    "description": "Records of DVDs rented by customers",
    "domain": "Transactions",
    "business_owner": "Operations Team",
    "primary_keys": [
      "rental_id"
    ],
    "row_count": 16044,
    "column_count": 7,
    "business_rules": {
      "return_policy": "DVDs must be returned within the rental duration period",
      "late_fee_calculation": "Late fees are calculated based on days past the due date"
    },
    "column_names": [
      "rental_id",
      "rental_date",
      "inventory_id",
      "customer_id",
      "return_date",
      "staff_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "payment",
        "relationship": "payment.rental_id \u2192 rental.rental_id",
        "type": "many_to_one"
      },
      {
        "table": "customer",
        "relationship": "rental.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      },
      {
        "table": "inventory",
        "relationship": "rental.inventory_id \u2192 inventory.inventory_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "relationship": "rental.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from rental",
        "query": "SELECT * FROM rental LIMIT 10;"
      },
      {
        "description": "Filter rental by rental_id",
        "query": "SELECT * FROM rental WHERE rental_id = 1 LIMIT 10;"
      },
      {
        "description": "Order rental by rental_id",
        "query": "SELECT * FROM rental ORDER BY rental_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with rental",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for rental",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(rental_id) as average,\n    SUM(rental_id) as total,\n    MIN(rental_id) as minimum,\n    MAX(rental_id) as maximum\nFROM rental;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from inventory",
        "query": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with inventory and rental",
        "query": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from rental",
        "query": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with rental and payment",
        "query": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "domain_terms": {
      "rental": [
        "loan",
        "checkout",
        "borrowing"
      ],
      "return_date": [
        "returned on",
        "check-in date"
      ]
    },
    "text_representation": "Table: rental\n\nDescription: Records of DVDs rented by customers\nDomain: Transactions\nBusiness Owner: Operations Team\nPrimary Keys: rental_id\nRow Count: 16044\n\nColumns:\n- rental_id (INT): Unique identifier for each rental transaction\n- rental_date (TIMESTAMP): Date and time when the DVD was rented\n- inventory_id (INT): Specific copy of the film that was rented\n- customer_id (INT): Customer who rented the film\n- return_date (TIMESTAMP): Date and time when the DVD was returned (null if not yet returned)\n- staff_id (SMALLINT): Staff member who processed the rental\n- last_update (TIMESTAMP): Last time the rental record was updated\n\nBusiness Rules:\n- return_policy: DVDs must be returned within the rental duration period\n- late_fee_calculation: Late fees are calculated based on days past the due date\n\nRelated Tables:\n- payment (many_to_one): payment.rental_id \u2192 rental.rental_id\n- customer (many_to_one): rental.customer_id \u2192 customer.customer_id\n- inventory (many_to_one): rental.inventory_id \u2192 inventory.inventory_id\n- staff (many_to_one): rental.staff_id \u2192 staff.staff_id\n\nAlternative Terms:\n- rental: loan, checkout, borrowing\n- return_date: returned on, check-in date\n"
  },
  {
    "object_type": "table",
    "name": "staff",
    "description": "Employees who work at the DVD rental stores",
    "domain": "Human Resources",
    "business_owner": "HR Team",
    "primary_keys": [
      "staff_id"
    ],
    "row_count": 2,
    "column_count": 11,
    "business_rules": {
      "manager_assignment": "Each store must have one designated manager"
    },
    "column_names": [
      "staff_id",
      "first_name",
      "last_name",
      "address_id",
      "picture",
      "email",
      "store_id",
      "active",
      "username",
      "password",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "payment",
        "relationship": "payment.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "relationship": "rental.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      },
      {
        "table": "address",
        "relationship": "staff.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "relationship": "staff.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "relationship": "store.manager_staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from staff",
        "query": "SELECT * FROM staff LIMIT 10;"
      },
      {
        "description": "Filter staff by staff_id",
        "query": "SELECT * FROM staff WHERE staff_id = 1 LIMIT 10;"
      },
      {
        "description": "Order staff by staff_id",
        "query": "SELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {
      "staff": [
        "employee",
        "team member",
        "associate"
      ],
      "active": [
        "employed",
        "current"
      ]
    },
    "text_representation": "Table: staff\n\nDescription: Employees who work at the DVD rental stores\nDomain: Human Resources\nBusiness Owner: HR Team\nPrimary Keys: staff_id\nRow Count: 2\n\nColumns:\n- staff_id (SMALLINT): Unique identifier for each staff member\n- first_name (VARCHAR(45)): Staff member's first name\n- last_name (VARCHAR(45)): Staff member's last name\n- address_id (INT): Reference to staff member's address\n- picture (BLOB): picture (BLOB)\n- email (VARCHAR(50)): Staff member's email address\n- store_id (INT): Store location where staff member works\n- active (SMALLINT): Whether the staff member is currently employed (1) or not (0)\n- username (VARCHAR(16)): Username for system login\n- password (VARCHAR(40)): Encrypted password for system login\n- last_update (TIMESTAMP): Last time the staff record was updated\n\nBusiness Rules:\n- manager_assignment: Each store must have one designated manager\n\nRelated Tables:\n- payment (many_to_one): payment.staff_id \u2192 staff.staff_id\n- rental (many_to_one): rental.staff_id \u2192 staff.staff_id\n- address (many_to_one): staff.address_id \u2192 address.address_id\n- store (many_to_one): staff.store_id \u2192 store.store_id\n- store (many_to_one): store.manager_staff_id \u2192 staff.staff_id\n\nAlternative Terms:\n- staff: employee, team member, associate\n- active: employed, current\n"
  },
  {
    "object_type": "table",
    "name": "store",
    "description": "Table containing store data",
    "domain": "",
    "business_owner": "",
    "primary_keys": [
      "store_id"
    ],
    "row_count": 2,
    "column_count": 4,
    "business_rules": {},
    "column_names": [
      "store_id",
      "manager_staff_id",
      "address_id",
      "last_update"
    ],
    "related_tables": [
      {
        "table": "customer",
        "relationship": "customer.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "inventory",
        "relationship": "inventory.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "relationship": "staff.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "address",
        "relationship": "store.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "relationship": "store.manager_staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Select all data from store",
        "query": "SELECT * FROM store LIMIT 10;"
      },
      {
        "description": "Filter store by store_id",
        "query": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;"
      },
      {
        "description": "Order store by store_id",
        "query": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for store",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "domain_terms": {},
    "text_representation": "Table: store\n\nDescription: Table containing store data\nPrimary Keys: store_id\nRow Count: 2\n\nColumns:\n- store_id (INT): store_id (INT)\n- manager_staff_id (SMALLINT): manager_staff_id (SMALLINT)\n- address_id (INT): address_id (INT)\n- last_update (TIMESTAMP): last_update (TIMESTAMP)\n\nRelated Tables:\n- customer (many_to_one): customer.store_id \u2192 store.store_id\n- inventory (many_to_one): inventory.store_id \u2192 store.store_id\n- staff (many_to_one): staff.store_id \u2192 store.store_id\n- address (many_to_one): store.address_id \u2192 address.address_id\n- staff (many_to_one): store.manager_staff_id \u2192 staff.staff_id\n"
  },
  {
    "object_type": "column",
    "name": "actor_id",
    "full_name": "actor.actor_id",
    "table_name": "actor",
    "description": "Unique identifier for each actor",
    "data_type": "numeric",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 200,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 200,
      "avg": 100.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film_actor",
        "column": "actor_id",
        "relationship": "film_actor.actor_id \u2192 actor.actor_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter actor by actor_id",
        "query": "SELECT * FROM actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order actor by actor_id",
        "query": "SELECT * FROM actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM actor;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: actor.actor_id\n\nDescription: Unique identifier for each actor\nTable: actor - Performers who appear in films\nData Type: numeric\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 200\n- Null Values: 0\n- Range: 1 to 200\n- Average: 100.5\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film_actor.actor_id (one_to_one): film_actor.actor_id \u2192 actor.actor_id\n"
  },
  {
    "object_type": "column",
    "name": "first_name",
    "full_name": "actor.first_name",
    "table_name": "actor",
    "description": "Actor's first name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 128,
      "sample_values": [
        "PENELOPE",
        "NICK",
        "ED",
        "JENNIFER",
        "JOHNNY",
        "BETTE",
        "GRACE",
        "MATTHEW",
        "JOE",
        "CHRISTIAN"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: actor.first_name\n\nDescription: Actor's first name\nTable: actor - Performers who appear in films\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 128\n- Null Values: 0\n- Sample Values: PENELOPE, NICK, ED, JENNIFER, JOHNNY\n"
  },
  {
    "object_type": "column",
    "name": "last_name",
    "full_name": "actor.last_name",
    "table_name": "actor",
    "description": "Actor's last name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 121,
      "sample_values": [
        "AKROYD",
        "ALLEN",
        "ASTAIRE",
        "BACALL",
        "BAILEY",
        "BALE",
        "BALL",
        "BARRYMORE",
        "BASINGER",
        "BENING"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: actor.last_name\n\nDescription: Actor's last name\nTable: actor - Performers who appear in films\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 121\n- Null Values: 0\n- Sample Values: AKROYD, ALLEN, ASTAIRE, BACALL, BAILEY\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "actor.last_update",
    "table_name": "actor",
    "description": "Last time the actor record was updated",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 3,
      "sample_values": [
        "2020-12-23 07:12:29",
        "2020-12-23 07:12:30",
        "2020-12-23 07:12:31"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: actor.last_update\n\nDescription: Last time the actor record was updated\nTable: actor - Performers who appear in films\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 3\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:29, 2020-12-23 07:12:30, 2020-12-23 07:12:31\n"
  },
  {
    "object_type": "column",
    "name": "address_id",
    "full_name": "address.address_id",
    "table_name": "address",
    "description": "address_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 603,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 605,
      "avg": 302.71973466003317
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "customer",
        "column": "address_id",
        "relationship": "customer.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "column": "address_id",
        "relationship": "staff.address_id \u2192 address.address_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "column": "address_id",
        "relationship": "store.address_id \u2192 address.address_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: address.address_id\n\nDescription: address_id (INT)\nTable: address - Table containing address data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 603\n- Null Values: 0\n- Range: 1 to 605\n- Average: 302.71973466003317\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- customer.address_id (many_to_one): customer.address_id \u2192 address.address_id\n- staff.address_id (many_to_one): staff.address_id \u2192 address.address_id\n- store.address_id (many_to_one): store.address_id \u2192 address.address_id\n"
  },
  {
    "object_type": "column",
    "name": "address",
    "full_name": "address.address",
    "table_name": "address",
    "description": "address (VARCHAR(50))",
    "data_type": "VARCHAR(50)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 603,
      "sample_values": [
        "47 MySakila Drive",
        "28 MySQL Boulevard",
        "23 Workhaven Lane",
        "1411 Lillydale Drive",
        "1913 Hanoi Way",
        "1121 Loja Avenue",
        "692 Joliet Street",
        "1566 Inegl Manor",
        "53 Idfu Parkway",
        "1795 Santiago de Compostela Way"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Select all data from address",
        "query": "SELECT * FROM address LIMIT 10;"
      },
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      },
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: address.address\n\nDescription: address (VARCHAR(50))\nTable: address - Table containing address data\nData Type: VARCHAR(50)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 603\n- Null Values: 0\n- Sample Values: 47 MySakila Drive, 28 MySQL Boulevard, 23 Workhaven Lane, 1411 Lillydale Drive, 1913 Hanoi Way\n"
  },
  {
    "object_type": "column",
    "name": "address2",
    "full_name": "address.address2",
    "table_name": "address",
    "description": "address2 (VARCHAR(50))",
    "data_type": "VARCHAR(50)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 603,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: address.address2\n\nDescription: address2 (VARCHAR(50))\nTable: address - Table containing address data\nData Type: VARCHAR(50)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 603\n"
  },
  {
    "object_type": "column",
    "name": "district",
    "full_name": "address.district",
    "table_name": "address",
    "description": "district (VARCHAR(20))",
    "data_type": "VARCHAR(20)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        " "
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: address.district\n\nDescription: district (VARCHAR(20))\nTable: address - Table containing address data\nData Type: VARCHAR(20)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values:  \n"
  },
  {
    "object_type": "column",
    "name": "city_id",
    "full_name": "address.city_id",
    "table_name": "address",
    "description": "city_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 600,
      "avg": 300.5257048092869
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "city",
        "column": "city_id",
        "relationship": "address.city_id \u2192 city.city_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter city by city_id",
        "query": "SELECT * FROM city WHERE city_id = 1 LIMIT 10;"
      },
      {
        "description": "Order city by city_id",
        "query": "SELECT * FROM city ORDER BY city_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for city",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: address.city_id\n\nDescription: city_id (INT)\nTable: address - Table containing address data\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Range: 1 to 600\n- Average: 300.5257048092869\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- city.city_id (many_to_one): address.city_id \u2192 city.city_id\n"
  },
  {
    "object_type": "column",
    "name": "postal_code",
    "full_name": "address.postal_code",
    "table_name": "address",
    "description": "postal_code (VARCHAR(10))",
    "data_type": "VARCHAR(10)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 4,
      "distinct_count": 596,
      "sample_values": [
        "35200",
        "17886",
        "83579",
        "53561",
        "42399",
        "18743",
        "93896",
        "77948",
        "45844",
        "53628"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: address.postal_code\n\nDescription: postal_code (VARCHAR(10))\nTable: address - Table containing address data\nData Type: VARCHAR(10)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 596\n- Null Values: 4\n- Sample Values: 35200, 17886, 83579, 53561, 42399\n"
  },
  {
    "object_type": "column",
    "name": "phone",
    "full_name": "address.phone",
    "table_name": "address",
    "description": "phone (VARCHAR(20))",
    "data_type": "VARCHAR(20)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        " "
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: address.phone\n\nDescription: phone (VARCHAR(20))\nTable: address - Table containing address data\nData Type: VARCHAR(20)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values:  \n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "address.last_update",
    "table_name": "address",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 9,
      "sample_values": [
        "2020-12-23 07:12:21",
        "2020-12-23 07:12:22",
        "2020-12-23 07:12:23",
        "2020-12-23 07:12:24",
        "2020-12-23 07:12:25",
        "2020-12-23 07:12:26",
        "2020-12-23 07:12:27",
        "2020-12-23 07:12:28",
        "2020-12-23 07:12:29"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: address.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: address - Table containing address data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 9\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:21, 2020-12-23 07:12:22, 2020-12-23 07:12:23, 2020-12-23 07:12:24, 2020-12-23 07:12:25\n"
  },
  {
    "object_type": "column",
    "name": "category_id",
    "full_name": "category.category_id",
    "table_name": "category",
    "description": "category_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 16,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film_category",
        "column": "category_id",
        "relationship": "film_category.category_id \u2192 category.category_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter category by category_id",
        "query": "SELECT * FROM category WHERE category_id = 1 LIMIT 10;"
      },
      {
        "description": "Order category by category_id",
        "query": "SELECT * FROM category ORDER BY category_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: category.category_id\n\nDescription: category_id (SMALLINT)\nTable: category - Table containing category data\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 16\n- Null Values: 0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film_category.category_id (one_to_one): film_category.category_id \u2192 category.category_id\n"
  },
  {
    "object_type": "column",
    "name": "name",
    "full_name": "category.name",
    "table_name": "category",
    "description": "name (VARCHAR(25))",
    "data_type": "VARCHAR(25)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 16,
      "sample_values": [
        "Action",
        "Animation",
        "Children",
        "Classics",
        "Comedy",
        "Documentary",
        "Drama",
        "Family",
        "Foreign",
        "Games"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: category.name\n\nDescription: name (VARCHAR(25))\nTable: category - Table containing category data\nData Type: VARCHAR(25)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 16\n- Null Values: 0\n- Sample Values: Action, Animation, Children, Classics, Comedy\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "category.last_update",
    "table_name": "category",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "2020-12-23 07:12:31"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: category.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: category - Table containing category data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:31\n"
  },
  {
    "object_type": "column",
    "name": "city_id",
    "full_name": "city.city_id",
    "table_name": "city",
    "description": "city_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 600,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 600,
      "avg": 300.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "address",
        "column": "city_id",
        "relationship": "address.city_id \u2192 city.city_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter city by city_id",
        "query": "SELECT * FROM city WHERE city_id = 1 LIMIT 10;"
      },
      {
        "description": "Order city by city_id",
        "query": "SELECT * FROM city ORDER BY city_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for city",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: city.city_id\n\nDescription: city_id (INT)\nTable: city - Table containing city data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 600\n- Null Values: 0\n- Range: 1 to 600\n- Average: 300.5\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- address.city_id (many_to_one): address.city_id \u2192 city.city_id\n"
  },
  {
    "object_type": "column",
    "name": "city",
    "full_name": "city.city",
    "table_name": "city",
    "description": "city (VARCHAR(50))",
    "data_type": "VARCHAR(50)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        "A Corua (La Corua)",
        "Abha",
        "Abu Dhabi",
        "Acua",
        "Adana",
        "Addis Abeba",
        "Aden",
        "Adoni",
        "Ahmadnagar",
        "Akishima"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Select all data from city",
        "query": "SELECT * FROM city LIMIT 10;"
      },
      {
        "description": "Filter city by city_id",
        "query": "SELECT * FROM city WHERE city_id = 1 LIMIT 10;"
      },
      {
        "description": "Order city by city_id",
        "query": "SELECT * FROM city ORDER BY city_id DESC LIMIT 10;"
      },
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for city",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: city.city\n\nDescription: city (VARCHAR(50))\nTable: city - Table containing city data\nData Type: VARCHAR(50)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Sample Values: A Corua (La Corua), Abha, Abu Dhabi, Acua, Adana\n"
  },
  {
    "object_type": "column",
    "name": "country_id",
    "full_name": "city.country_id",
    "table_name": "city",
    "description": "country_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 109,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "country",
        "column": "country_id",
        "relationship": "city.country_id \u2192 country.country_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter country by country_id",
        "query": "SELECT * FROM country WHERE country_id = 1 LIMIT 10;"
      },
      {
        "description": "Order country by country_id",
        "query": "SELECT * FROM country ORDER BY country_id DESC LIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: city.country_id\n\nDescription: country_id (SMALLINT)\nTable: city - Table containing city data\nData Type: SMALLINT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 109\n- Null Values: 0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- country.country_id (many_to_one): city.country_id \u2192 country.country_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "city.last_update",
    "table_name": "city",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 8,
      "sample_values": [
        "2020-12-23 07:12:14",
        "2020-12-23 07:12:15",
        "2020-12-23 07:12:16",
        "2020-12-23 07:12:17",
        "2020-12-23 07:12:18",
        "2020-12-23 07:12:19",
        "2020-12-23 07:12:20",
        "2020-12-23 07:12:21"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: city.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: city - Table containing city data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 8\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:14, 2020-12-23 07:12:15, 2020-12-23 07:12:16, 2020-12-23 07:12:17, 2020-12-23 07:12:18\n"
  },
  {
    "object_type": "column",
    "name": "country_id",
    "full_name": "country.country_id",
    "table_name": "country",
    "description": "country_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 109,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "city",
        "column": "country_id",
        "relationship": "city.country_id \u2192 country.country_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter country by country_id",
        "query": "SELECT * FROM country WHERE country_id = 1 LIMIT 10;"
      },
      {
        "description": "Order country by country_id",
        "query": "SELECT * FROM country ORDER BY country_id DESC LIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: country.country_id\n\nDescription: country_id (SMALLINT)\nTable: country - Table containing country data\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 109\n- Null Values: 0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- city.country_id (many_to_one): city.country_id \u2192 country.country_id\n"
  },
  {
    "object_type": "column",
    "name": "country",
    "full_name": "country.country",
    "table_name": "country",
    "description": "country (VARCHAR(50))",
    "data_type": "VARCHAR(50)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 109,
      "sample_values": [
        "Afghanistan",
        "Algeria",
        "American Samoa",
        "Angola",
        "Anguilla",
        "Argentina",
        "Armenia",
        "Australia",
        "Austria",
        "Azerbaijan"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Select all data from country",
        "query": "SELECT * FROM country LIMIT 10;"
      },
      {
        "description": "Filter country by country_id",
        "query": "SELECT * FROM country WHERE country_id = 1 LIMIT 10;"
      },
      {
        "description": "Order country by country_id",
        "query": "SELECT * FROM country ORDER BY country_id DESC LIMIT 10;"
      },
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: country.country\n\nDescription: country (VARCHAR(50))\nTable: country - Table containing country data\nData Type: VARCHAR(50)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 109\n- Null Values: 0\n- Sample Values: Afghanistan, Algeria, American Samoa, Angola, Anguilla\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "country.last_update",
    "table_name": "country",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": false,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 3,
      "sample_values": [
        "2020-12-23 07:12:12",
        "2020-12-23 07:12:13",
        "2020-12-23 07:12:14"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: country.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: country - Table containing country data\nData Type: TIMESTAMP\n\nStatistics:\n- Distinct Values: 3\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:12, 2020-12-23 07:12:13, 2020-12-23 07:12:14\n"
  },
  {
    "object_type": "column",
    "name": "customer_id",
    "full_name": "customer.customer_id",
    "table_name": "customer",
    "description": "Unique identifier for each customer",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 599,
      "avg": 300.0
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "payment",
        "column": "customer_id",
        "relationship": "payment.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "column": "customer_id",
        "relationship": "rental.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter customer by customer_id",
        "query": "SELECT * FROM customer WHERE customer_id = 1 LIMIT 10;"
      },
      {
        "description": "Order customer by customer_id",
        "query": "SELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for customer",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: customer.customer_id\n\nDescription: Unique identifier for each customer\nTable: customer - Individuals who rent DVDs from the store\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Range: 1 to 599\n- Average: 300.0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- payment.customer_id (many_to_one): payment.customer_id \u2192 customer.customer_id\n- rental.customer_id (many_to_one): rental.customer_id \u2192 customer.customer_id\n"
  },
  {
    "object_type": "column",
    "name": "store_id",
    "full_name": "customer.store_id",
    "table_name": "customer",
    "description": "Store location where customer is registered",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ],
      "min": 1,
      "max": 2,
      "avg": 1.4557595993322203
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "store",
        "column": "store_id",
        "relationship": "customer.store_id \u2192 store.store_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter store by store_id",
        "query": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;"
      },
      {
        "description": "Order store by store_id",
        "query": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for store",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: customer.store_id\n\nDescription: Store location where customer is registered\nTable: customer - Individuals who rent DVDs from the store\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 1 to 2\n- Average: 1.4557595993322203\n- Sample Values: 1, 2\n\nRelated Columns:\n- store.store_id (many_to_one): customer.store_id \u2192 store.store_id\n"
  },
  {
    "object_type": "column",
    "name": "first_name",
    "full_name": "customer.first_name",
    "table_name": "customer",
    "description": "Customer's first name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 591,
      "sample_values": [
        "MARY",
        "PATRICIA",
        "LINDA",
        "BARBARA",
        "ELIZABETH",
        "JENNIFER",
        "MARIA",
        "SUSAN",
        "MARGARET",
        "DOROTHY"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: customer.first_name\n\nDescription: Customer's first name\nTable: customer - Individuals who rent DVDs from the store\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 591\n- Null Values: 0\n- Sample Values: MARY, PATRICIA, LINDA, BARBARA, ELIZABETH\n"
  },
  {
    "object_type": "column",
    "name": "last_name",
    "full_name": "customer.last_name",
    "table_name": "customer",
    "description": "Customer's last name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        "ABNEY",
        "ADAM",
        "ADAMS",
        "ALEXANDER",
        "ALLARD",
        "ALLEN",
        "ALVAREZ",
        "ANDERSON",
        "ANDREW",
        "ANDREWS"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: customer.last_name\n\nDescription: Customer's last name\nTable: customer - Individuals who rent DVDs from the store\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Sample Values: ABNEY, ADAM, ADAMS, ALEXANDER, ALLARD\n"
  },
  {
    "object_type": "column",
    "name": "email",
    "full_name": "customer.email",
    "table_name": "customer",
    "description": "Customer's email address for notifications",
    "data_type": "VARCHAR(50)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        "MARY.SMITH@sakilacustomer.org",
        "PATRICIA.JOHNSON@sakilacustomer.org",
        "LINDA.WILLIAMS@sakilacustomer.org",
        "BARBARA.JONES@sakilacustomer.org",
        "ELIZABETH.BROWN@sakilacustomer.org",
        "JENNIFER.DAVIS@sakilacustomer.org",
        "MARIA.MILLER@sakilacustomer.org",
        "SUSAN.WILSON@sakilacustomer.org",
        "MARGARET.MOORE@sakilacustomer.org",
        "DOROTHY.TAYLOR@sakilacustomer.org"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: customer.email\n\nDescription: Customer's email address for notifications\nTable: customer - Individuals who rent DVDs from the store\nData Type: VARCHAR(50)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Sample Values: MARY.SMITH@sakilacustomer.org, PATRICIA.JOHNSON@sakilacustomer.org, LINDA.WILLIAMS@sakilacustomer.org, BARBARA.JONES@sakilacustomer.org, ELIZABETH.BROWN@sakilacustomer.org\n"
  },
  {
    "object_type": "column",
    "name": "address_id",
    "full_name": "customer.address_id",
    "table_name": "customer",
    "description": "Reference to customer's address",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      "min": 5,
      "max": 605,
      "avg": 304.7245409015025
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "address",
        "column": "address_id",
        "relationship": "customer.address_id \u2192 address.address_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: customer.address_id\n\nDescription: Reference to customer's address\nTable: customer - Individuals who rent DVDs from the store\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Range: 5 to 605\n- Average: 304.7245409015025\n- Sample Values: 5, 6, 7, 8, 9\n\nRelated Columns:\n- address.address_id (many_to_one): customer.address_id \u2192 address.address_id\n"
  },
  {
    "object_type": "column",
    "name": "active",
    "full_name": "customer.active",
    "table_name": "customer",
    "description": "Whether the customer account is active (1) or inactive (0)",
    "data_type": "CHAR(1)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": "'Y'",
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "1",
        "0"
      ]
    },
    "domain_terms": [
      "current",
      "valid"
    ],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: customer.active\n\nDescription: Whether the customer account is active (1) or inactive (0)\nTable: customer - Individuals who rent DVDs from the store\nData Type: CHAR(1)\nConstraints: Not Null, Default: 'Y'\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 1, 0\n\nAlternative Terms: current, valid\n"
  },
  {
    "object_type": "column",
    "name": "create_date",
    "full_name": "customer.create_date",
    "table_name": "customer",
    "description": "Date when the customer account was created",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "2006-02-14 22:04:36.000",
        "2006-02-14 22:04:37.000"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: customer.create_date\n\nDescription: Date when the customer account was created\nTable: customer - Individuals who rent DVDs from the store\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 2006-02-14 22:04:36.000, 2006-02-14 22:04:37.000\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "customer.last_update",
    "table_name": "customer",
    "description": "Last time customer information was updated",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 10,
      "sample_values": [
        "2020-12-23 07:15:11",
        "2020-12-23 07:15:12",
        "2020-12-23 07:15:13",
        "2020-12-23 07:15:14",
        "2020-12-23 07:15:15",
        "2020-12-23 07:15:16",
        "2020-12-23 07:15:17",
        "2020-12-23 07:15:18",
        "2020-12-23 07:15:19",
        "2020-12-23 07:15:20"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: customer.last_update\n\nDescription: Last time customer information was updated\nTable: customer - Individuals who rent DVDs from the store\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 10\n- Null Values: 0\n- Sample Values: 2020-12-23 07:15:11, 2020-12-23 07:15:12, 2020-12-23 07:15:13, 2020-12-23 07:15:14, 2020-12-23 07:15:15\n"
  },
  {
    "object_type": "column",
    "name": "film_id",
    "full_name": "film.film_id",
    "table_name": "film",
    "description": "Unique identifier for each film",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1000,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 1000,
      "avg": 500.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film_actor",
        "column": "film_id",
        "relationship": "film_actor.film_id \u2192 film.film_id",
        "type": "one_to_one"
      },
      {
        "table": "film_category",
        "column": "film_id",
        "relationship": "film_category.film_id \u2192 film.film_id",
        "type": "one_to_one"
      },
      {
        "table": "inventory",
        "column": "film_id",
        "relationship": "inventory.film_id \u2192 film.film_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: film.film_id\n\nDescription: Unique identifier for each film\nTable: film - Movies available for rental in DVD format\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 1000\n- Null Values: 0\n- Range: 1 to 1000\n- Average: 500.5\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film_actor.film_id (one_to_one): film_actor.film_id \u2192 film.film_id\n- film_category.film_id (one_to_one): film_category.film_id \u2192 film.film_id\n- inventory.film_id (many_to_one): inventory.film_id \u2192 film.film_id\n"
  },
  {
    "object_type": "column",
    "name": "title",
    "full_name": "film.title",
    "table_name": "film",
    "description": "The title of the film as it appears on the DVD cover",
    "data_type": "VARCHAR(255)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1000,
      "sample_values": [
        "ACADEMY DINOSAUR",
        "ACE GOLDFINGER",
        "ADAPTATION HOLES",
        "AFFAIR PREJUDICE",
        "AFRICAN EGG",
        "AGENT TRUMAN",
        "AIRPLANE SIERRA",
        "AIRPORT POLLOCK",
        "ALABAMA DEVIL",
        "ALADDIN CALENDAR"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: film.title\n\nDescription: The title of the film as it appears on the DVD cover\nTable: film - Movies available for rental in DVD format\nData Type: VARCHAR(255)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1000\n- Null Values: 0\n- Sample Values: ACADEMY DINOSAUR, ACE GOLDFINGER, ADAPTATION HOLES, AFFAIR PREJUDICE, AFRICAN EGG\n"
  },
  {
    "object_type": "column",
    "name": "description",
    "full_name": "film.description",
    "table_name": "film",
    "description": "Brief plot summary of the film",
    "data_type": "BLOB SUB_TYPE TEXT",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 1000,
      "sample_values": [
        "A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies",
        "A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China",
        "A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory",
        "A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank",
        "A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico",
        "A Intrepid Panorama of a Robot And a Boy who must Escape a Sumo Wrestler in Ancient China",
        "A Touching Saga of a Hunter And a Butler who must Discover a Butler in A Jet Boat",
        "A Epic Tale of a Moose And a Girl who must Confront a Monkey in Ancient India",
        "A Thoughtful Panorama of a Database Administrator And a Mad Scientist who must Outgun a Mad Scientist in A Jet Boat",
        "A Action-Packed Tale of a Man And a Lumberjack who must Reach a Feminist in Ancient China"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.description\n\nDescription: Brief plot summary of the film\nTable: film - Movies available for rental in DVD format\nData Type: BLOB SUB_TYPE TEXT\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 1000\n- Null Values: 0\n- Sample Values: A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies, A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China, A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory, A Fanciful Documentary of a Frisbee And a Lumberjack who must Chase a Monkey in A Shark Tank, A Fast-Paced Documentary of a Pastry Chef And a Dentist who must Pursue a Forensic Psychologist in The Gulf of Mexico\n"
  },
  {
    "object_type": "column",
    "name": "release_year",
    "full_name": "film.release_year",
    "table_name": "film",
    "description": "Year the film was released in theaters",
    "data_type": "VARCHAR(4)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "2006"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.release_year\n\nDescription: Year the film was released in theaters\nTable: film - Movies available for rental in DVD format\nData Type: VARCHAR(4)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 2006\n"
  },
  {
    "object_type": "column",
    "name": "language_id",
    "full_name": "film.language_id",
    "table_name": "film",
    "description": "Original language of the film",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        1
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "language",
        "column": "language_id",
        "relationship": "film.language_id \u2192 language.language_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter language by language_id",
        "query": "SELECT * FROM language WHERE language_id = 1 LIMIT 10;"
      },
      {
        "description": "Order language by language_id",
        "query": "SELECT * FROM language ORDER BY language_id DESC LIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film.language_id\n\nDescription: Original language of the film\nTable: film - Movies available for rental in DVD format\nData Type: SMALLINT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 1\n\nRelated Columns:\n- language.language_id (many_to_one): film.language_id \u2192 language.language_id\n"
  },
  {
    "object_type": "column",
    "name": "original_language_id",
    "full_name": "film.original_language_id",
    "table_name": "film",
    "description": "original_language_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 1000,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "language",
        "column": "language_id",
        "relationship": "film.original_language_id \u2192 language.language_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film.original_language_id\n\nDescription: original_language_id (SMALLINT)\nTable: film - Movies available for rental in DVD format\nData Type: SMALLINT\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 1000\n\nRelated Columns:\n- language.language_id (many_to_one): film.original_language_id \u2192 language.language_id\n"
  },
  {
    "object_type": "column",
    "name": "rental_duration",
    "full_name": "film.rental_duration",
    "table_name": "film",
    "description": "Standard rental period in days",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": "3",
    "statistics": {
      "null_count": 0,
      "distinct_count": 5,
      "sample_values": [
        6,
        3,
        7,
        5,
        4
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: film.rental_duration\n\nDescription: Standard rental period in days\nTable: film - Movies available for rental in DVD format\nData Type: SMALLINT\nConstraints: Not Null, Default: 3\n\nStatistics:\n- Distinct Values: 5\n- Null Values: 0\n- Sample Values: 6, 3, 7, 5, 4\n"
  },
  {
    "object_type": "column",
    "name": "rental_rate",
    "full_name": "film.rental_rate",
    "table_name": "film",
    "description": "Standard rental cost in dollars",
    "data_type": "DECIMAL(4,2)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": "4.99",
    "statistics": {
      "null_count": 0,
      "distinct_count": 3,
      "sample_values": [
        0.99,
        4.99,
        2.99
      ]
    },
    "domain_terms": [
      "price",
      "cost",
      "fee"
    ],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.rental_rate\n\nDescription: Standard rental cost in dollars\nTable: film - Movies available for rental in DVD format\nData Type: DECIMAL(4,2)\nConstraints: Not Null, Default: 4.99\n\nStatistics:\n- Distinct Values: 3\n- Null Values: 0\n- Sample Values: 0.99, 4.99, 2.99\n\nAlternative Terms: price, cost, fee\n"
  },
  {
    "object_type": "column",
    "name": "length",
    "full_name": "film.length",
    "table_name": "film",
    "description": "Runtime of the film in minutes",
    "data_type": "SMALLINT",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 140,
      "sample_values": [
        86,
        48,
        50,
        117,
        130,
        169,
        62,
        54,
        114,
        63
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.length\n\nDescription: Runtime of the film in minutes\nTable: film - Movies available for rental in DVD format\nData Type: SMALLINT\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 140\n- Null Values: 0\n- Sample Values: 86, 48, 50, 117, 130\n"
  },
  {
    "object_type": "column",
    "name": "replacement_cost",
    "full_name": "film.replacement_cost",
    "table_name": "film",
    "description": "Cost to replace the DVD if damaged",
    "data_type": "DECIMAL(5,2)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": "19.99",
    "statistics": {
      "null_count": 0,
      "distinct_count": 21,
      "sample_values": [
        20.99,
        12.99,
        18.99,
        26.99,
        22.99,
        17.99,
        28.99,
        15.99,
        21.99,
        24.99
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.replacement_cost\n\nDescription: Cost to replace the DVD if damaged\nTable: film - Movies available for rental in DVD format\nData Type: DECIMAL(5,2)\nConstraints: Not Null, Default: 19.99\n\nStatistics:\n- Distinct Values: 21\n- Null Values: 0\n- Sample Values: 20.99, 12.99, 18.99, 26.99, 22.99\n"
  },
  {
    "object_type": "column",
    "name": "rating",
    "full_name": "film.rating",
    "table_name": "film",
    "description": "Film rating (G, PG, PG-13, R, NC-17)",
    "data_type": "VARCHAR(10)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "'G'",
    "statistics": {
      "null_count": 0,
      "distinct_count": 5,
      "sample_values": [
        "PG",
        "G",
        "NC-17",
        "PG-13",
        "R"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.rating\n\nDescription: Film rating (G, PG, PG-13, R, NC-17)\nTable: film - Movies available for rental in DVD format\nData Type: VARCHAR(10)\nConstraints: Default: 'G'\n\nStatistics:\n- Distinct Values: 5\n- Null Values: 0\n- Sample Values: PG, G, NC-17, PG-13, R\n"
  },
  {
    "object_type": "column",
    "name": "special_features",
    "full_name": "film.special_features",
    "table_name": "film",
    "description": "Special features included on the DVD",
    "data_type": "VARCHAR(100)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 15,
      "sample_values": [
        "Deleted Scenes,Behind the Scenes",
        "Trailers,Deleted Scenes",
        "Commentaries,Behind the Scenes",
        "Deleted Scenes",
        "Trailers",
        "Commentaries,Deleted Scenes",
        "Trailers,Deleted Scenes,Behind the Scenes",
        "Trailers,Commentaries,Behind the Scenes",
        "Trailers,Commentaries",
        "Trailers,Behind the Scenes"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film.special_features\n\nDescription: Special features included on the DVD\nTable: film - Movies available for rental in DVD format\nData Type: VARCHAR(100)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 15\n- Null Values: 0\n- Sample Values: Deleted Scenes,Behind the Scenes, Trailers,Deleted Scenes, Commentaries,Behind the Scenes, Deleted Scenes, Trailers\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "film.last_update",
    "table_name": "film",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 15,
      "sample_values": [
        "2020-12-23 07:12:31",
        "2020-12-23 07:12:32",
        "2020-12-23 07:12:33",
        "2020-12-23 07:12:34",
        "2020-12-23 07:12:35",
        "2020-12-23 07:12:36",
        "2020-12-23 07:12:37",
        "2020-12-23 07:12:38",
        "2020-12-23 07:12:39",
        "2020-12-23 07:12:40"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: film - Movies available for rental in DVD format\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 15\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:31, 2020-12-23 07:12:32, 2020-12-23 07:12:33, 2020-12-23 07:12:34, 2020-12-23 07:12:35\n"
  },
  {
    "object_type": "column",
    "name": "actor_id",
    "full_name": "film_actor.actor_id",
    "table_name": "film_actor",
    "description": "actor_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 200,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 200,
      "avg": 100.95239838886854
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "actor",
        "column": "actor_id",
        "relationship": "film_actor.actor_id \u2192 actor.actor_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter actor by actor_id",
        "query": "SELECT * FROM actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order actor by actor_id",
        "query": "SELECT * FROM actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM actor;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film_actor.actor_id\n\nDescription: actor_id (INT)\nTable: film_actor - Table containing film_actor data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 200\n- Null Values: 0\n- Range: 1 to 200\n- Average: 100.95239838886854\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- actor.actor_id (one_to_one): film_actor.actor_id \u2192 actor.actor_id\n"
  },
  {
    "object_type": "column",
    "name": "film_id",
    "full_name": "film_actor.film_id",
    "table_name": "film_actor",
    "description": "film_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 997,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 1000,
      "avg": 501.14243866715486
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film",
        "column": "film_id",
        "relationship": "film_actor.film_id \u2192 film.film_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: film_actor.film_id\n\nDescription: film_id (INT)\nTable: film_actor - Table containing film_actor data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 997\n- Null Values: 0\n- Range: 1 to 1000\n- Average: 501.14243866715486\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film.film_id (one_to_one): film_actor.film_id \u2192 film.film_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "film_actor.last_update",
    "table_name": "film_actor",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 76,
      "sample_values": [
        "2020-12-23 07:13:43",
        "2020-12-23 07:13:44",
        "2020-12-23 07:13:45",
        "2020-12-23 07:13:46",
        "2020-12-23 07:13:47",
        "2020-12-23 07:13:48",
        "2020-12-23 07:13:49",
        "2020-12-23 07:13:50",
        "2020-12-23 07:13:51",
        "2020-12-23 07:13:52"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film_actor.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: film_actor - Table containing film_actor data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 76\n- Null Values: 0\n- Sample Values: 2020-12-23 07:13:43, 2020-12-23 07:13:44, 2020-12-23 07:13:45, 2020-12-23 07:13:46, 2020-12-23 07:13:47\n"
  },
  {
    "object_type": "column",
    "name": "film_id",
    "full_name": "film_category.film_id",
    "table_name": "film_category",
    "description": "film_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1000,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 1000,
      "avg": 500.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film",
        "column": "film_id",
        "relationship": "film_category.film_id \u2192 film.film_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: film_category.film_id\n\nDescription: film_id (INT)\nTable: film_category - Table containing film_category data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 1000\n- Null Values: 0\n- Range: 1 to 1000\n- Average: 500.5\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film.film_id (one_to_one): film_category.film_id \u2192 film.film_id\n"
  },
  {
    "object_type": "column",
    "name": "category_id",
    "full_name": "film_category.category_id",
    "table_name": "film_category",
    "description": "category_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 16,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "category",
        "column": "category_id",
        "relationship": "film_category.category_id \u2192 category.category_id",
        "type": "one_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter category by category_id",
        "query": "SELECT * FROM category WHERE category_id = 1 LIMIT 10;"
      },
      {
        "description": "Order category by category_id",
        "query": "SELECT * FROM category ORDER BY category_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: film_category.category_id\n\nDescription: category_id (SMALLINT)\nTable: film_category - Table containing film_category data\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 16\n- Null Values: 0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- category.category_id (one_to_one): film_category.category_id \u2192 category.category_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "film_category.last_update",
    "table_name": "film_category",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 14,
      "sample_values": [
        "2020-12-23 07:14:58",
        "2020-12-23 07:14:59",
        "2020-12-23 07:15:00",
        "2020-12-23 07:15:01",
        "2020-12-23 07:15:02",
        "2020-12-23 07:15:03",
        "2020-12-23 07:15:04",
        "2020-12-23 07:15:05",
        "2020-12-23 07:15:06",
        "2020-12-23 07:15:07"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: film_category.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: film_category - Table containing film_category data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 14\n- Null Values: 0\n- Sample Values: 2020-12-23 07:14:58, 2020-12-23 07:14:59, 2020-12-23 07:15:00, 2020-12-23 07:15:01, 2020-12-23 07:15:02\n"
  },
  {
    "object_type": "column",
    "name": "film_id",
    "full_name": "film_text.film_id",
    "table_name": "film_text",
    "description": "film_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: film_text.film_id\n\nDescription: film_id (SMALLINT)\nTable: film_text - Table containing film_text data\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 0\n"
  },
  {
    "object_type": "column",
    "name": "title",
    "full_name": "film_text.title",
    "table_name": "film_text",
    "description": "title (VARCHAR(255))",
    "data_type": "VARCHAR(255)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: film_text.title\n\nDescription: title (VARCHAR(255))\nTable: film_text - Table containing film_text data\nData Type: VARCHAR(255)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 0\n"
  },
  {
    "object_type": "column",
    "name": "description",
    "full_name": "film_text.description",
    "table_name": "film_text",
    "description": "description (BLOB SUB_TYPE TEXT)",
    "data_type": "BLOB SUB_TYPE TEXT",
    "not_null": false,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: film_text.description\n\nDescription: description (BLOB SUB_TYPE TEXT)\nTable: film_text - Table containing film_text data\nData Type: BLOB SUB_TYPE TEXT\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 0\n"
  },
  {
    "object_type": "column",
    "name": "inventory_id",
    "full_name": "inventory.inventory_id",
    "table_name": "inventory",
    "description": "inventory_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 4581,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 4581,
      "avg": 2291.0
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "rental",
        "column": "inventory_id",
        "relationship": "rental.inventory_id \u2192 inventory.inventory_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter inventory by inventory_id",
        "query": "SELECT * FROM inventory WHERE inventory_id = 1 LIMIT 10;"
      },
      {
        "description": "Order inventory by inventory_id",
        "query": "SELECT * FROM inventory ORDER BY inventory_id DESC LIMIT 10;"
      },
      {
        "description": "Join rental with inventory",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for inventory",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(inventory_id) as average,\n    SUM(inventory_id) as total,\n    MIN(inventory_id) as minimum,\n    MAX(inventory_id) as maximum\nFROM inventory;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from inventory",
        "query": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with inventory and rental",
        "query": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: inventory.inventory_id\n\nDescription: inventory_id (INT)\nTable: inventory - Table containing inventory data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 4581\n- Null Values: 0\n- Range: 1 to 4581\n- Average: 2291.0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- rental.inventory_id (many_to_one): rental.inventory_id \u2192 inventory.inventory_id\n"
  },
  {
    "object_type": "column",
    "name": "film_id",
    "full_name": "inventory.film_id",
    "table_name": "inventory",
    "description": "film_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 958,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 1000,
      "avg": 500.9362584588518
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film",
        "column": "film_id",
        "relationship": "inventory.film_id \u2192 film.film_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter film by film_id",
        "query": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film by film_id",
        "query": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Order film_text by film_id",
        "query": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: inventory.film_id\n\nDescription: film_id (INT)\nTable: inventory - Table containing inventory data\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 958\n- Null Values: 0\n- Range: 1 to 1000\n- Average: 500.9362584588518\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film.film_id (many_to_one): inventory.film_id \u2192 film.film_id\n"
  },
  {
    "object_type": "column",
    "name": "store_id",
    "full_name": "inventory.store_id",
    "table_name": "inventory",
    "description": "store_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ],
      "min": 1,
      "max": 2,
      "avg": 1.5044750054573237
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "store",
        "column": "store_id",
        "relationship": "inventory.store_id \u2192 store.store_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter store by store_id",
        "query": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;"
      },
      {
        "description": "Order store by store_id",
        "query": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for store",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: inventory.store_id\n\nDescription: store_id (INT)\nTable: inventory - Table containing inventory data\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 1 to 2\n- Average: 1.5044750054573237\n- Sample Values: 1, 2\n\nRelated Columns:\n- store.store_id (many_to_one): inventory.store_id \u2192 store.store_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "inventory.last_update",
    "table_name": "inventory",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 59,
      "sample_values": [
        "2020-12-23 07:12:45",
        "2020-12-23 07:12:46",
        "2020-12-23 07:12:47",
        "2020-12-23 07:12:48",
        "2020-12-23 07:12:49",
        "2020-12-23 07:12:50",
        "2020-12-23 07:12:51",
        "2020-12-23 07:12:52",
        "2020-12-23 07:12:53",
        "2020-12-23 07:12:54"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: inventory.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: inventory - Table containing inventory data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 59\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:45, 2020-12-23 07:12:46, 2020-12-23 07:12:47, 2020-12-23 07:12:48, 2020-12-23 07:12:49\n"
  },
  {
    "object_type": "column",
    "name": "language_id",
    "full_name": "language.language_id",
    "table_name": "language",
    "description": "language_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 6,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "film",
        "column": "original_language_id",
        "relationship": "film.original_language_id \u2192 language.language_id",
        "type": "many_to_one"
      },
      {
        "table": "film",
        "column": "language_id",
        "relationship": "film.language_id \u2192 language.language_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter language by language_id",
        "query": "SELECT * FROM language WHERE language_id = 1 LIMIT 10;"
      },
      {
        "description": "Order language by language_id",
        "query": "SELECT * FROM language ORDER BY language_id DESC LIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: language.language_id\n\nDescription: language_id (SMALLINT)\nTable: language - Table containing language data\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 6\n- Null Values: 0\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- film.original_language_id (many_to_one): film.original_language_id \u2192 language.language_id\n- film.language_id (many_to_one): film.language_id \u2192 language.language_id\n"
  },
  {
    "object_type": "column",
    "name": "name",
    "full_name": "language.name",
    "table_name": "language",
    "description": "name (CHAR(20))",
    "data_type": "CHAR(20)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 6,
      "sample_values": [
        "English",
        "Italian",
        "Japanese",
        "Mandarin",
        "French",
        "German"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: language.name\n\nDescription: name (CHAR(20))\nTable: language - Table containing language data\nData Type: CHAR(20)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 6\n- Null Values: 0\n- Sample Values: English, Italian, Japanese, Mandarin, French\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "language.last_update",
    "table_name": "language",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "2020-12-23 07:12:12"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: language.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: language - Table containing language data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:12\n"
  },
  {
    "object_type": "column",
    "name": "payment_id",
    "full_name": "payment.payment_id",
    "table_name": "payment",
    "description": "Unique identifier for each payment",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 16049,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 16049,
      "avg": 8025.0
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Filter payment by payment_id",
        "query": "SELECT * FROM payment WHERE payment_id = 1 LIMIT 10;"
      },
      {
        "description": "Order payment by payment_id",
        "query": "SELECT * FROM payment ORDER BY payment_id DESC LIMIT 10;"
      },
      {
        "description": "Aggregate statistics for payment",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(payment_id) as average,\n    SUM(payment_id) as total,\n    MIN(payment_id) as minimum,\n    MAX(payment_id) as maximum\nFROM payment;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: payment.payment_id\n\nDescription: Unique identifier for each payment\nTable: payment - Financial transactions for rentals and late fees\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 16049\n- Null Values: 0\n- Range: 1 to 16049\n- Average: 8025.0\n- Sample Values: 1, 2, 3, 4, 5\n"
  },
  {
    "object_type": "column",
    "name": "customer_id",
    "full_name": "payment.customer_id",
    "table_name": "payment",
    "description": "Customer who made the payment",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 599,
      "avg": 297.16268926412863
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "customer",
        "column": "customer_id",
        "relationship": "payment.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter customer by customer_id",
        "query": "SELECT * FROM customer WHERE customer_id = 1 LIMIT 10;"
      },
      {
        "description": "Order customer by customer_id",
        "query": "SELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for customer",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: payment.customer_id\n\nDescription: Customer who made the payment\nTable: payment - Financial transactions for rentals and late fees\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Range: 1 to 599\n- Average: 297.16268926412863\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- customer.customer_id (many_to_one): payment.customer_id \u2192 customer.customer_id\n"
  },
  {
    "object_type": "column",
    "name": "staff_id",
    "full_name": "payment.staff_id",
    "table_name": "payment",
    "description": "Staff member who processed the payment",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "staff",
        "column": "staff_id",
        "relationship": "payment.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter staff by staff_id",
        "query": "SELECT * FROM staff WHERE staff_id = 1 LIMIT 10;"
      },
      {
        "description": "Order staff by staff_id",
        "query": "SELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: payment.staff_id\n\nDescription: Staff member who processed the payment\nTable: payment - Financial transactions for rentals and late fees\nData Type: SMALLINT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 1, 2\n\nRelated Columns:\n- staff.staff_id (many_to_one): payment.staff_id \u2192 staff.staff_id\n"
  },
  {
    "object_type": "column",
    "name": "rental_id",
    "full_name": "payment.rental_id",
    "table_name": "payment",
    "description": "Associated rental transaction (if applicable)",
    "data_type": "INT",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 5,
      "distinct_count": 16044,
      "sample_values": [
        76,
        573,
        1185,
        1422,
        1476,
        1725,
        2308,
        2363,
        3284,
        4526
      ],
      "min": 1,
      "max": 16049,
      "avg": 8025.371478434306
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "rental",
        "column": "rental_id",
        "relationship": "payment.rental_id \u2192 rental.rental_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter rental by rental_id",
        "query": "SELECT * FROM rental WHERE rental_id = 1 LIMIT 10;"
      },
      {
        "description": "Order rental by rental_id",
        "query": "SELECT * FROM rental ORDER BY rental_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with rental",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for rental",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(rental_id) as average,\n    SUM(rental_id) as total,\n    MIN(rental_id) as minimum,\n    MAX(rental_id) as maximum\nFROM rental;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from rental",
        "query": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with rental and payment",
        "query": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: payment.rental_id\n\nDescription: Associated rental transaction (if applicable)\nTable: payment - Financial transactions for rentals and late fees\nData Type: INT\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 16044\n- Null Values: 5\n- Range: 1 to 16049\n- Average: 8025.371478434306\n- Sample Values: 76, 573, 1185, 1422, 1476\n\nRelated Columns:\n- rental.rental_id (many_to_one): payment.rental_id \u2192 rental.rental_id\n"
  },
  {
    "object_type": "column",
    "name": "amount",
    "full_name": "payment.amount",
    "table_name": "payment",
    "description": "Payment amount in dollars",
    "data_type": "DECIMAL(5,2)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 19,
      "sample_values": [
        2.99,
        0.99,
        5.99,
        9.99,
        4.99,
        3.99,
        7.99,
        1.99,
        6.99,
        10.99
      ]
    },
    "domain_terms": [
      "payment amount",
      "charge",
      "fee"
    ],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: payment.amount\n\nDescription: Payment amount in dollars\nTable: payment - Financial transactions for rentals and late fees\nData Type: DECIMAL(5,2)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 19\n- Null Values: 0\n- Sample Values: 2.99, 0.99, 5.99, 9.99, 4.99\n\nAlternative Terms: payment amount, charge, fee\n"
  },
  {
    "object_type": "column",
    "name": "payment_date",
    "full_name": "payment.payment_date",
    "table_name": "payment",
    "description": "Date and time when the payment was made",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 15819,
      "sample_values": [
        "2005-05-25 11:30:37.000",
        "2005-05-28 10:35:23.000",
        "2005-06-15 00:54:12.000",
        "2005-06-15 18:02:53.000",
        "2005-06-15 21:08:46.000",
        "2005-06-16 15:18:57.000",
        "2005-06-18 08:41:48.000",
        "2005-06-18 13:33:59.000",
        "2005-06-21 06:24:45.000",
        "2005-07-08 03:17:05.000"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: payment.payment_date\n\nDescription: Date and time when the payment was made\nTable: payment - Financial transactions for rentals and late fees\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 15819\n- Null Values: 0\n- Sample Values: 2005-05-25 11:30:37.000, 2005-05-28 10:35:23.000, 2005-06-15 00:54:12.000, 2005-06-15 18:02:53.000, 2005-06-15 21:08:46.000\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "payment.last_update",
    "table_name": "payment",
    "description": "Last time the payment record was updated",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 226,
      "sample_values": [
        "2020-12-23 07:19:10",
        "2020-12-23 07:19:11",
        "2020-12-23 07:19:12",
        "2020-12-23 07:19:13",
        "2020-12-23 07:19:14",
        "2020-12-23 07:19:15",
        "2020-12-23 07:19:16",
        "2020-12-23 07:19:17",
        "2020-12-23 07:19:18",
        "2020-12-23 07:19:19"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: payment.last_update\n\nDescription: Last time the payment record was updated\nTable: payment - Financial transactions for rentals and late fees\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 226\n- Null Values: 0\n- Sample Values: 2020-12-23 07:19:10, 2020-12-23 07:19:11, 2020-12-23 07:19:12, 2020-12-23 07:19:13, 2020-12-23 07:19:14\n"
  },
  {
    "object_type": "column",
    "name": "rental_id",
    "full_name": "rental.rental_id",
    "table_name": "rental",
    "description": "Unique identifier for each rental transaction",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 16044,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 16049,
      "avg": 8025.371478434306
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "payment",
        "column": "rental_id",
        "relationship": "payment.rental_id \u2192 rental.rental_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter rental by rental_id",
        "query": "SELECT * FROM rental WHERE rental_id = 1 LIMIT 10;"
      },
      {
        "description": "Order rental by rental_id",
        "query": "SELECT * FROM rental ORDER BY rental_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with rental",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for rental",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(rental_id) as average,\n    SUM(rental_id) as total,\n    MIN(rental_id) as minimum,\n    MAX(rental_id) as maximum\nFROM rental;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from rental",
        "query": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with rental and payment",
        "query": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: rental.rental_id\n\nDescription: Unique identifier for each rental transaction\nTable: rental - Records of DVDs rented by customers\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 16044\n- Null Values: 0\n- Range: 1 to 16049\n- Average: 8025.371478434306\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- payment.rental_id (many_to_one): payment.rental_id \u2192 rental.rental_id\n"
  },
  {
    "object_type": "column",
    "name": "rental_date",
    "full_name": "rental.rental_date",
    "table_name": "rental",
    "description": "Date and time when the DVD was rented",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 15815,
      "sample_values": [
        "2005-05-24 22:53:30.000",
        "2005-05-24 22:54:33.000",
        "2005-05-24 23:03:39.000",
        "2005-05-24 23:04:41.000",
        "2005-05-24 23:05:21.000",
        "2005-05-24 23:08:07.000",
        "2005-05-24 23:11:53.000",
        "2005-05-24 23:31:46.000",
        "2005-05-25 00:00:40.000",
        "2005-05-25 00:02:21.000"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: rental.rental_date\n\nDescription: Date and time when the DVD was rented\nTable: rental - Records of DVDs rented by customers\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 15815\n- Null Values: 0\n- Sample Values: 2005-05-24 22:53:30.000, 2005-05-24 22:54:33.000, 2005-05-24 23:03:39.000, 2005-05-24 23:04:41.000, 2005-05-24 23:05:21.000\n"
  },
  {
    "object_type": "column",
    "name": "inventory_id",
    "full_name": "rental.inventory_id",
    "table_name": "rental",
    "description": "Specific copy of the film that was rented",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 4580,
      "sample_values": [
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11
      ],
      "min": 1,
      "max": 4581,
      "avg": 2291.8425579655946
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "inventory",
        "column": "inventory_id",
        "relationship": "rental.inventory_id \u2192 inventory.inventory_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter inventory by inventory_id",
        "query": "SELECT * FROM inventory WHERE inventory_id = 1 LIMIT 10;"
      },
      {
        "description": "Order inventory by inventory_id",
        "query": "SELECT * FROM inventory ORDER BY inventory_id DESC LIMIT 10;"
      },
      {
        "description": "Join rental with inventory",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for inventory",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(inventory_id) as average,\n    SUM(inventory_id) as total,\n    MIN(inventory_id) as minimum,\n    MAX(inventory_id) as maximum\nFROM inventory;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from inventory",
        "query": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with inventory and rental",
        "query": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Column: rental.inventory_id\n\nDescription: Specific copy of the film that was rented\nTable: rental - Records of DVDs rented by customers\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 4580\n- Null Values: 0\n- Range: 1 to 4581\n- Average: 2291.8425579655946\n- Sample Values: 1, 2, 3, 4, 6\n\nRelated Columns:\n- inventory.inventory_id (many_to_one): rental.inventory_id \u2192 inventory.inventory_id\n"
  },
  {
    "object_type": "column",
    "name": "customer_id",
    "full_name": "rental.customer_id",
    "table_name": "rental",
    "description": "Customer who rented the film",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 599,
      "sample_values": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "min": 1,
      "max": 599,
      "avg": 297.14316878583895
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "customer",
        "column": "customer_id",
        "relationship": "rental.customer_id \u2192 customer.customer_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter customer by customer_id",
        "query": "SELECT * FROM customer WHERE customer_id = 1 LIMIT 10;"
      },
      {
        "description": "Order customer by customer_id",
        "query": "SELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for customer",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: rental.customer_id\n\nDescription: Customer who rented the film\nTable: rental - Records of DVDs rented by customers\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 599\n- Null Values: 0\n- Range: 1 to 599\n- Average: 297.14316878583895\n- Sample Values: 1, 2, 3, 4, 5\n\nRelated Columns:\n- customer.customer_id (many_to_one): rental.customer_id \u2192 customer.customer_id\n"
  },
  {
    "object_type": "column",
    "name": "return_date",
    "full_name": "rental.return_date",
    "table_name": "rental",
    "description": "Date and time when the DVD was returned (null if not yet returned)",
    "data_type": "TIMESTAMP",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 183,
      "distinct_count": 15836,
      "sample_values": [
        "2005-05-26 22:04:30.000",
        "2005-05-28 19:40:33.000",
        "2005-06-01 22:12:39.000",
        "2005-06-03 01:43:41.000",
        "2005-06-02 04:33:21.000",
        "2005-05-27 01:32:07.000",
        "2005-05-29 20:34:53.000",
        "2005-05-27 23:33:46.000",
        "2005-05-28 00:22:40.000",
        "2005-05-31 22:44:21.000"
      ]
    },
    "domain_terms": [
      "returned on",
      "check-in date"
    ],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: rental.return_date\n\nDescription: Date and time when the DVD was returned (null if not yet returned)\nTable: rental - Records of DVDs rented by customers\nData Type: TIMESTAMP\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 15836\n- Null Values: 183\n- Sample Values: 2005-05-26 22:04:30.000, 2005-05-28 19:40:33.000, 2005-06-01 22:12:39.000, 2005-06-03 01:43:41.000, 2005-06-02 04:33:21.000\n\nAlternative Terms: returned on, check-in date\n"
  },
  {
    "object_type": "column",
    "name": "staff_id",
    "full_name": "rental.staff_id",
    "table_name": "rental",
    "description": "Staff member who processed the rental",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "staff",
        "column": "staff_id",
        "relationship": "rental.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter staff by staff_id",
        "query": "SELECT * FROM staff WHERE staff_id = 1 LIMIT 10;"
      },
      {
        "description": "Order staff by staff_id",
        "query": "SELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: rental.staff_id\n\nDescription: Staff member who processed the rental\nTable: rental - Records of DVDs rented by customers\nData Type: SMALLINT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 1, 2\n\nRelated Columns:\n- staff.staff_id (many_to_one): rental.staff_id \u2192 staff.staff_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "rental.last_update",
    "table_name": "rental",
    "description": "Last time the rental record was updated",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 231,
      "sample_values": [
        "2020-12-23 07:15:20",
        "2020-12-23 07:15:21",
        "2020-12-23 07:15:22",
        "2020-12-23 07:15:23",
        "2020-12-23 07:15:24",
        "2020-12-23 07:15:25",
        "2020-12-23 07:15:26",
        "2020-12-23 07:15:27",
        "2020-12-23 07:15:28",
        "2020-12-23 07:15:29"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: rental.last_update\n\nDescription: Last time the rental record was updated\nTable: rental - Records of DVDs rented by customers\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 231\n- Null Values: 0\n- Sample Values: 2020-12-23 07:15:20, 2020-12-23 07:15:21, 2020-12-23 07:15:22, 2020-12-23 07:15:23, 2020-12-23 07:15:24\n"
  },
  {
    "object_type": "column",
    "name": "staff_id",
    "full_name": "staff.staff_id",
    "table_name": "staff",
    "description": "Unique identifier for each staff member",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "payment",
        "column": "staff_id",
        "relationship": "payment.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      },
      {
        "table": "rental",
        "column": "staff_id",
        "relationship": "rental.staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      },
      {
        "table": "store",
        "column": "manager_staff_id",
        "relationship": "store.manager_staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter staff by staff_id",
        "query": "SELECT * FROM staff WHERE staff_id = 1 LIMIT 10;"
      },
      {
        "description": "Order staff by staff_id",
        "query": "SELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;"
      },
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: staff.staff_id\n\nDescription: Unique identifier for each staff member\nTable: staff - Employees who work at the DVD rental stores\nData Type: SMALLINT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 1, 2\n\nRelated Columns:\n- payment.staff_id (many_to_one): payment.staff_id \u2192 staff.staff_id\n- rental.staff_id (many_to_one): rental.staff_id \u2192 staff.staff_id\n- store.manager_staff_id (many_to_one): store.manager_staff_id \u2192 staff.staff_id\n"
  },
  {
    "object_type": "column",
    "name": "first_name",
    "full_name": "staff.first_name",
    "table_name": "staff",
    "description": "Staff member's first name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "Mike",
        "Jon"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Common Table Expression (CTE) on actor",
        "query": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: staff.first_name\n\nDescription: Staff member's first name\nTable: staff - Employees who work at the DVD rental stores\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: Mike, Jon\n"
  },
  {
    "object_type": "column",
    "name": "last_name",
    "full_name": "staff.last_name",
    "table_name": "staff",
    "description": "Staff member's last name",
    "data_type": "VARCHAR(45)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "Hillyer",
        "Stephens"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Column: staff.last_name\n\nDescription: Staff member's last name\nTable: staff - Employees who work at the DVD rental stores\nData Type: VARCHAR(45)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: Hillyer, Stephens\n"
  },
  {
    "object_type": "column",
    "name": "address_id",
    "full_name": "staff.address_id",
    "table_name": "staff",
    "description": "Reference to staff member's address",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        3,
        4
      ],
      "min": 3,
      "max": 4,
      "avg": 3.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "address",
        "column": "address_id",
        "relationship": "staff.address_id \u2192 address.address_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: staff.address_id\n\nDescription: Reference to staff member's address\nTable: staff - Employees who work at the DVD rental stores\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 3 to 4\n- Average: 3.5\n- Sample Values: 3, 4\n\nRelated Columns:\n- address.address_id (many_to_one): staff.address_id \u2192 address.address_id\n"
  },
  {
    "object_type": "column",
    "name": "picture",
    "full_name": "staff.picture",
    "table_name": "staff",
    "description": "picture (BLOB)",
    "data_type": "BLOB",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 2,
      "distinct_count": 0,
      "sample_values": []
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: staff.picture\n\nDescription: picture (BLOB)\nTable: staff - Employees who work at the DVD rental stores\nData Type: BLOB\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 0\n- Null Values: 2\n"
  },
  {
    "object_type": "column",
    "name": "email",
    "full_name": "staff.email",
    "table_name": "staff",
    "description": "Staff member's email address",
    "data_type": "VARCHAR(50)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "Mike.Hillyer@sakilastaff.com",
        "Jon.Stephens@sakilastaff.com"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: staff.email\n\nDescription: Staff member's email address\nTable: staff - Employees who work at the DVD rental stores\nData Type: VARCHAR(50)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: Mike.Hillyer@sakilastaff.com, Jon.Stephens@sakilastaff.com\n"
  },
  {
    "object_type": "column",
    "name": "store_id",
    "full_name": "staff.store_id",
    "table_name": "staff",
    "description": "Store location where staff member works",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ],
      "min": 1,
      "max": 2,
      "avg": 1.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "store",
        "column": "store_id",
        "relationship": "staff.store_id \u2192 store.store_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter store by store_id",
        "query": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;"
      },
      {
        "description": "Order store by store_id",
        "query": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for store",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: staff.store_id\n\nDescription: Store location where staff member works\nTable: staff - Employees who work at the DVD rental stores\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 1 to 2\n- Average: 1.5\n- Sample Values: 1, 2\n\nRelated Columns:\n- store.store_id (many_to_one): staff.store_id \u2192 store.store_id\n"
  },
  {
    "object_type": "column",
    "name": "active",
    "full_name": "staff.active",
    "table_name": "staff",
    "description": "Whether the staff member is currently employed (1) or not (0)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": "1",
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        1
      ]
    },
    "domain_terms": [
      "employed",
      "current"
    ],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: staff.active\n\nDescription: Whether the staff member is currently employed (1) or not (0)\nTable: staff - Employees who work at the DVD rental stores\nData Type: SMALLINT\nConstraints: Not Null, Default: 1\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 1\n\nAlternative Terms: employed, current\n"
  },
  {
    "object_type": "column",
    "name": "username",
    "full_name": "staff.username",
    "table_name": "staff",
    "description": "Username for system login",
    "data_type": "VARCHAR(16)",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        "Mike",
        "Jon"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: staff.username\n\nDescription: Username for system login\nTable: staff - Employees who work at the DVD rental stores\nData Type: VARCHAR(16)\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: Mike, Jon\n"
  },
  {
    "object_type": "column",
    "name": "password",
    "full_name": "staff.password",
    "table_name": "staff",
    "description": "Encrypted password for system login",
    "data_type": "VARCHAR(40)",
    "not_null": false,
    "is_primary_key": false,
    "default_value": "NULL",
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "8cb2237d0679ca88db6464eac60da96345513964"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [],
    "text_representation": "Column: staff.password\n\nDescription: Encrypted password for system login\nTable: staff - Employees who work at the DVD rental stores\nData Type: VARCHAR(40)\nConstraints: Default: NULL\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 8cb2237d0679ca88db6464eac60da96345513964\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "staff.last_update",
    "table_name": "staff",
    "description": "Last time the staff record was updated",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "2020-12-23 07:12:31"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: staff.last_update\n\nDescription: Last time the staff record was updated\nTable: staff - Employees who work at the DVD rental stores\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:31\n"
  },
  {
    "object_type": "column",
    "name": "store_id",
    "full_name": "store.store_id",
    "table_name": "store",
    "description": "store_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": true,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ],
      "min": 1,
      "max": 2,
      "avg": 1.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "customer",
        "column": "store_id",
        "relationship": "customer.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "inventory",
        "column": "store_id",
        "relationship": "inventory.store_id \u2192 store.store_id",
        "type": "many_to_one"
      },
      {
        "table": "staff",
        "column": "store_id",
        "relationship": "staff.store_id \u2192 store.store_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter store by store_id",
        "query": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;"
      },
      {
        "description": "Order store by store_id",
        "query": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for store",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: store.store_id\n\nDescription: store_id (INT)\nTable: store - Table containing store data\nData Type: INT\nConstraints: Primary Key, Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 1 to 2\n- Average: 1.5\n- Sample Values: 1, 2\n\nRelated Columns:\n- customer.store_id (many_to_one): customer.store_id \u2192 store.store_id\n- inventory.store_id (many_to_one): inventory.store_id \u2192 store.store_id\n- staff.store_id (many_to_one): staff.store_id \u2192 store.store_id\n"
  },
  {
    "object_type": "column",
    "name": "manager_staff_id",
    "full_name": "store.manager_staff_id",
    "table_name": "store",
    "description": "manager_staff_id (SMALLINT)",
    "data_type": "SMALLINT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ]
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "staff",
        "column": "staff_id",
        "relationship": "store.manager_staff_id \u2192 staff.staff_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: store.manager_staff_id\n\nDescription: manager_staff_id (SMALLINT)\nTable: store - Table containing store data\nData Type: SMALLINT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Sample Values: 1, 2\n\nRelated Columns:\n- staff.staff_id (many_to_one): store.manager_staff_id \u2192 staff.staff_id\n"
  },
  {
    "object_type": "column",
    "name": "address_id",
    "full_name": "store.address_id",
    "table_name": "store",
    "description": "address_id (INT)",
    "data_type": "INT",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 2,
      "sample_values": [
        1,
        2
      ],
      "min": 1,
      "max": 2,
      "avg": 1.5
    },
    "domain_terms": [],
    "related_columns": [
      {
        "table": "address",
        "column": "address_id",
        "relationship": "store.address_id \u2192 address.address_id",
        "type": "many_to_one"
      }
    ],
    "query_examples": [
      {
        "description": "Filter address by address_id",
        "query": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;"
      },
      {
        "description": "Order address by address_id",
        "query": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;"
      },
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for address",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: store.address_id\n\nDescription: address_id (INT)\nTable: store - Table containing store data\nData Type: INT\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 2\n- Null Values: 0\n- Range: 1 to 2\n- Average: 1.5\n- Sample Values: 1, 2\n\nRelated Columns:\n- address.address_id (many_to_one): store.address_id \u2192 address.address_id\n"
  },
  {
    "object_type": "column",
    "name": "last_update",
    "full_name": "store.last_update",
    "table_name": "store",
    "description": "last_update (TIMESTAMP)",
    "data_type": "TIMESTAMP",
    "not_null": true,
    "is_primary_key": false,
    "default_value": null,
    "statistics": {
      "null_count": 0,
      "distinct_count": 1,
      "sample_values": [
        "2020-12-23 07:12:31"
      ]
    },
    "domain_terms": [],
    "related_columns": [],
    "query_examples": [
      {
        "description": "UNION query combining results from actor and address",
        "query": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;"
      }
    ],
    "text_representation": "Column: store.last_update\n\nDescription: last_update (TIMESTAMP)\nTable: store - Table containing store data\nData Type: TIMESTAMP\nConstraints: Not Null\n\nStatistics:\n- Distinct Values: 1\n- Null Values: 0\n- Sample Values: 2020-12-23 07:12:31\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_1",
    "from_table": "address",
    "from_column": "city_id",
    "to_table": "city",
    "to_column": "city_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many address records relate to one city record",
    "query_examples": [
      {
        "description": "Join address with city",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;"
      },
      {
        "description": "Join address with city and filter results",
        "query": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from city",
        "query": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with city and address",
        "query": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: address.city_id \u2192 city.city_id\n\nType: many_to_one\nBusiness Meaning: Many address records relate to one city record\n\nFrom Table: address - Table containing address data\nTo Table: city - Table containing city data\n\nFrom Column: city_id - city_id (INT)\nTo Column: city_id - city_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_2",
    "from_table": "city",
    "from_column": "country_id",
    "to_table": "country",
    "to_column": "country_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many city records relate to one country record",
    "query_examples": [
      {
        "description": "Join city with country",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;"
      },
      {
        "description": "Join city with country and filter results",
        "query": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, city, country",
        "query": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: country, city, address",
        "query": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from country",
        "query": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with country and city",
        "query": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: city.country_id \u2192 country.country_id\n\nType: many_to_one\nBusiness Meaning: Many city records relate to one country record\n\nFrom Table: city - Table containing city data\nTo Table: country - Table containing country data\n\nFrom Column: country_id - country_id (SMALLINT)\nTo Column: country_id - country_id (SMALLINT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_3",
    "from_table": "customer",
    "from_column": "address_id",
    "to_table": "address",
    "to_column": "address_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many customer records relate to one address record",
    "query_examples": [
      {
        "description": "Join customer with address",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from address",
        "query": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with address and customer",
        "query": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: customer.address_id \u2192 address.address_id\n\nType: many_to_one\nBusiness Meaning: Many customer records relate to one address record\n\nFrom Table: customer - Individuals who rent DVDs from the store\nTo Table: address - Table containing address data\n\nFrom Column: address_id - Reference to customer's address\nTo Column: address_id - address_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_4",
    "from_table": "customer",
    "from_column": "store_id",
    "to_table": "store",
    "to_column": "store_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many customer records relate to one store record",
    "query_examples": [
      {
        "description": "Join customer with store",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join customer with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from store",
        "query": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with store and customer",
        "query": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: customer.store_id \u2192 store.store_id\n\nType: many_to_one\nBusiness Meaning: Many customer records relate to one store record\n\nFrom Table: customer - Individuals who rent DVDs from the store\nTo Table: store - Table containing store data\n\nFrom Column: store_id - Store location where customer is registered\nTo Column: store_id - store_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_5",
    "from_table": "film",
    "from_column": "original_language_id",
    "to_table": "language",
    "to_column": "language_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many film records relate to one language record",
    "query_examples": [
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: film.original_language_id \u2192 language.language_id\n\nType: many_to_one\nBusiness Meaning: Many film records relate to one language record\n\nFrom Table: film - Movies available for rental in DVD format\nTo Table: language - Table containing language data\n\nFrom Column: original_language_id - original_language_id (SMALLINT)\nTo Column: language_id - language_id (SMALLINT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_6",
    "from_table": "film",
    "from_column": "language_id",
    "to_table": "language",
    "to_column": "language_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many film records relate to one language record",
    "query_examples": [
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film with language",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;"
      },
      {
        "description": "Join film with language and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from language",
        "query": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with language and film",
        "query": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: film.language_id \u2192 language.language_id\n\nType: many_to_one\nBusiness Meaning: Many film records relate to one language record\n\nFrom Table: film - Movies available for rental in DVD format\nTo Table: language - Table containing language data\n\nFrom Column: language_id - Original language of the film\nTo Column: language_id - language_id (SMALLINT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_7",
    "from_table": "film_actor",
    "from_column": "film_id",
    "to_table": "film",
    "to_column": "film_id",
    "relationship_type": "one_to_one",
    "business_meaning": "Films feature actors. Each film has multiple actors in its cast.",
    "query_examples": [
      {
        "description": "Select all data from film_actor",
        "query": "SELECT * FROM film_actor LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: film_actor.film_id \u2192 film.film_id\n\nType: one_to_one\nBusiness Meaning: Films feature actors. Each film has multiple actors in its cast.\n\nFrom Table: film_actor - Table containing film_actor data\nTo Table: film - Movies available for rental in DVD format\n\nFrom Column: film_id - film_id (INT)\nTo Column: film_id - Unique identifier for each film\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_8",
    "from_table": "film_actor",
    "from_column": "actor_id",
    "to_table": "actor",
    "to_column": "actor_id",
    "relationship_type": "one_to_one",
    "business_meaning": "Actors appear in films. Each actor may appear in multiple films.",
    "query_examples": [
      {
        "description": "Select all data from film_actor",
        "query": "SELECT * FROM film_actor LIMIT 10;"
      },
      {
        "description": "Filter film_actor by actor_id",
        "query": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_actor by actor_id",
        "query": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_actor with film",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;"
      },
      {
        "description": "Join film_actor with actor and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_actor",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;"
      },
      {
        "description": "Complex join across 3 tables: film, film_actor, actor",
        "query": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_actor",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, language",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: actor, film_actor, film",
        "query": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from actor",
        "query": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with actor and film_actor",
        "query": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from film",
        "query": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with film and film_actor",
        "query": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: film_actor.actor_id \u2192 actor.actor_id\n\nType: one_to_one\nBusiness Meaning: Actors appear in films. Each actor may appear in multiple films.\n\nFrom Table: film_actor - Table containing film_actor data\nTo Table: actor - Performers who appear in films\n\nFrom Column: actor_id - actor_id (INT)\nTo Column: actor_id - Unique identifier for each actor\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_9",
    "from_table": "film_category",
    "from_column": "category_id",
    "to_table": "category",
    "to_column": "category_id",
    "relationship_type": "one_to_one",
    "business_meaning": "One film_category record relates to one category record",
    "query_examples": [
      {
        "description": "Select all data from film_category",
        "query": "SELECT * FROM film_category LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Relationship: film_category.category_id \u2192 category.category_id\n\nType: one_to_one\nBusiness Meaning: One film_category record relates to one category record\n\nFrom Table: film_category - Table containing film_category data\nTo Table: category - Table containing category data\n\nFrom Column: category_id - category_id (SMALLINT)\nTo Column: category_id - category_id (SMALLINT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_10",
    "from_table": "film_category",
    "from_column": "film_id",
    "to_table": "film",
    "to_column": "film_id",
    "relationship_type": "one_to_one",
    "business_meaning": "One film_category record relates to one film record",
    "query_examples": [
      {
        "description": "Select all data from film_category",
        "query": "SELECT * FROM film_category LIMIT 10;"
      },
      {
        "description": "Filter film_category by film_id",
        "query": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;"
      },
      {
        "description": "Order film_category by film_id",
        "query": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;"
      },
      {
        "description": "Join film_category with category",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with category and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join film_category with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for film_category",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;"
      },
      {
        "description": "Complex join across 3 tables: film, film_category, category",
        "query": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, film_category",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, film_category",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, language",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, film_actor",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: category, film_category, film",
        "query": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from category",
        "query": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with category and film_category",
        "query": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;"
      },
      {
        "description": "Find films in a specific category",
        "query": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Relationship: film_category.film_id \u2192 film.film_id\n\nType: one_to_one\nBusiness Meaning: One film_category record relates to one film record\n\nFrom Table: film_category - Table containing film_category data\nTo Table: film - Movies available for rental in DVD format\n\nFrom Column: film_id - film_id (INT)\nTo Column: film_id - Unique identifier for each film\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_11",
    "from_table": "inventory",
    "from_column": "film_id",
    "to_table": "film",
    "to_column": "film_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Films are stocked in inventory. Multiple copies of the same film may exist at different stores.",
    "query_examples": [
      {
        "description": "Join inventory with film",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with film and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: language, film, inventory",
        "query": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_actor, film, inventory",
        "query": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film_category, film, inventory",
        "query": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, language",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_actor",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, film, film_category",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Relationship: inventory.film_id \u2192 film.film_id\n\nType: many_to_one\nBusiness Meaning: Films are stocked in inventory. Multiple copies of the same film may exist at different stores.\n\nFrom Table: inventory - Table containing inventory data\nTo Table: film - Movies available for rental in DVD format\n\nFrom Column: film_id - film_id (INT)\nTo Column: film_id - Unique identifier for each film\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_12",
    "from_table": "inventory",
    "from_column": "store_id",
    "to_table": "store",
    "to_column": "store_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many inventory records relate to one store record",
    "query_examples": [
      {
        "description": "Join inventory with store",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join inventory with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: inventory.store_id \u2192 store.store_id\n\nType: many_to_one\nBusiness Meaning: Many inventory records relate to one store record\n\nFrom Table: inventory - Table containing inventory data\nTo Table: store - Table containing store data\n\nFrom Column: store_id - store_id (INT)\nTo Column: store_id - store_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_13",
    "from_table": "payment",
    "from_column": "staff_id",
    "to_table": "staff",
    "to_column": "staff_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many payment records relate to one staff record",
    "query_examples": [
      {
        "description": "Join payment with staff",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from staff",
        "query": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with staff and payment",
        "query": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: payment.staff_id \u2192 staff.staff_id\n\nType: many_to_one\nBusiness Meaning: Many payment records relate to one staff record\n\nFrom Table: payment - Financial transactions for rentals and late fees\nTo Table: staff - Employees who work at the DVD rental stores\n\nFrom Column: staff_id - Staff member who processed the payment\nTo Column: staff_id - Unique identifier for each staff member\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_14",
    "from_table": "payment",
    "from_column": "customer_id",
    "to_table": "customer",
    "to_column": "customer_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many payment records relate to one customer record",
    "query_examples": [
      {
        "description": "Join payment with customer",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from customer",
        "query": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with customer and payment",
        "query": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: payment.customer_id \u2192 customer.customer_id\n\nType: many_to_one\nBusiness Meaning: Many payment records relate to one customer record\n\nFrom Table: payment - Financial transactions for rentals and late fees\nTo Table: customer - Individuals who rent DVDs from the store\n\nFrom Column: customer_id - Customer who made the payment\nTo Column: customer_id - Unique identifier for each customer\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_15",
    "from_table": "payment",
    "from_column": "rental_id",
    "to_table": "rental",
    "to_column": "rental_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Payments are made for rentals. Each rental may have one or more associated payments (e.g., initial payment plus late fees).",
    "query_examples": [
      {
        "description": "Join payment with rental",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;"
      },
      {
        "description": "Join payment with rental and filter results",
        "query": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from rental",
        "query": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with rental and payment",
        "query": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Relationship: payment.rental_id \u2192 rental.rental_id\n\nType: many_to_one\nBusiness Meaning: Payments are made for rentals. Each rental may have one or more associated payments (e.g., initial payment plus late fees).\n\nFrom Table: payment - Financial transactions for rentals and late fees\nTo Table: rental - Records of DVDs rented by customers\n\nFrom Column: rental_id - Associated rental transaction (if applicable)\nTo Column: rental_id - Unique identifier for each rental transaction\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_16",
    "from_table": "rental",
    "from_column": "customer_id",
    "to_table": "customer",
    "to_column": "customer_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Customers rent films. Each customer can have multiple rentals over time.",
    "query_examples": [
      {
        "description": "Join rental with customer",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with customer and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, rental",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, payment",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, customer",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, customer",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      }
    ],
    "text_representation": "Relationship: rental.customer_id \u2192 customer.customer_id\n\nType: many_to_one\nBusiness Meaning: Customers rent films. Each customer can have multiple rentals over time.\n\nFrom Table: rental - Records of DVDs rented by customers\nTo Table: customer - Individuals who rent DVDs from the store\n\nFrom Column: customer_id - Customer who rented the film\nTo Column: customer_id - Unique identifier for each customer\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_17",
    "from_table": "rental",
    "from_column": "inventory_id",
    "to_table": "inventory",
    "to_column": "inventory_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many rental records relate to one inventory record",
    "query_examples": [
      {
        "description": "Join rental with inventory",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with inventory and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, rental",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, payment",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, inventory",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, film",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Subquery filtering records from inventory",
        "query": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;"
      },
      {
        "description": "EXISTS subquery with inventory and rental",
        "query": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;"
      },
      {
        "description": "View a customer's rental history",
        "query": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'"
      },
      {
        "description": "Find overdue rentals",
        "query": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE"
      },
      {
        "description": "Calculate revenue by film category",
        "query": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC"
      }
    ],
    "text_representation": "Relationship: rental.inventory_id \u2192 inventory.inventory_id\n\nType: many_to_one\nBusiness Meaning: Many rental records relate to one inventory record\n\nFrom Table: rental - Records of DVDs rented by customers\nTo Table: inventory - Table containing inventory data\n\nFrom Column: inventory_id - Specific copy of the film that was rented\nTo Column: inventory_id - inventory_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_18",
    "from_table": "rental",
    "from_column": "staff_id",
    "to_table": "staff",
    "to_column": "staff_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Staff members process rental transactions. Each staff member handles many rentals.",
    "query_examples": [
      {
        "description": "Join rental with staff",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join rental with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, rental, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, rental",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, rental, staff",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, rental",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, payment",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, payment, staff",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, payment",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: rental.staff_id \u2192 staff.staff_id\n\nType: many_to_one\nBusiness Meaning: Staff members process rental transactions. Each staff member handles many rentals.\n\nFrom Table: rental - Records of DVDs rented by customers\nTo Table: staff - Employees who work at the DVD rental stores\n\nFrom Column: staff_id - Staff member who processed the rental\nTo Column: staff_id - Unique identifier for each staff member\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_19",
    "from_table": "staff",
    "from_column": "address_id",
    "to_table": "address",
    "to_column": "address_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many staff records relate to one address record",
    "query_examples": [
      {
        "description": "Join staff with address",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Aggregate statistics for staff",
        "query": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, payment",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, rental",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, staff",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, city",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: staff.address_id \u2192 address.address_id\n\nType: many_to_one\nBusiness Meaning: Many staff records relate to one address record\n\nFrom Table: staff - Employees who work at the DVD rental stores\nTo Table: address - Table containing address data\n\nFrom Column: address_id - Reference to staff member's address\nTo Column: address_id - address_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_20",
    "from_table": "staff",
    "from_column": "store_id",
    "to_table": "store",
    "to_column": "store_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Staff members work at stores. Each store has multiple staff members.",
    "query_examples": [
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: staff.store_id \u2192 store.store_id\n\nType: many_to_one\nBusiness Meaning: Staff members work at stores. Each store has multiple staff members.\n\nFrom Table: staff - Employees who work at the DVD rental stores\nTo Table: store - Table containing store data\n\nFrom Column: store_id - Store location where staff member works\nTo Column: store_id - store_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_21",
    "from_table": "store",
    "from_column": "address_id",
    "to_table": "address",
    "to_column": "address_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many store records relate to one address record",
    "query_examples": [
      {
        "description": "Join store with address",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;"
      },
      {
        "description": "Join store with address and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, payment",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, rental",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, customer",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, city",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, address",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, address",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: store.address_id \u2192 address.address_id\n\nType: many_to_one\nBusiness Meaning: Many store records relate to one address record\n\nFrom Table: store - Table containing store data\nTo Table: address - Table containing address data\n\nFrom Column: address_id - address_id (INT)\nTo Column: address_id - address_id (INT)\n"
  },
  {
    "object_type": "relationship",
    "id": "relationship_22",
    "from_table": "store",
    "from_column": "manager_staff_id",
    "to_table": "staff",
    "to_column": "staff_id",
    "relationship_type": "many_to_one",
    "business_meaning": "Many store records relate to one staff record",
    "query_examples": [
      {
        "description": "Join staff with store",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;"
      },
      {
        "description": "Join staff with store and filter results",
        "query": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Join store with staff",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;"
      },
      {
        "description": "Join store with staff and filter results",
        "query": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, customer, store",
        "query": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, staff, store",
        "query": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, customer",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, inventory",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: address, store, staff",
        "query": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: city, address, store",
        "query": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, address, store",
        "query": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, inventory",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, address",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, store, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, payment, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: customer, rental, staff",
        "query": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, customer, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, film",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, inventory, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, city",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, customer",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, address, staff",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, payment",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, rental",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: store, staff, address",
        "query": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: film, inventory, store",
        "query": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, customer",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, address",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: inventory, store, staff",
        "query": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, staff, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: payment, customer, store",
        "query": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, payment, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, rental, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, address, store",
        "query": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, customer",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, inventory",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: staff, store, address",
        "query": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, customer, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, inventory, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      },
      {
        "description": "Complex join across 3 tables: rental, staff, store",
        "query": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;"
      }
    ],
    "text_representation": "Relationship: store.manager_staff_id \u2192 staff.staff_id\n\nType: many_to_one\nBusiness Meaning: Many store records relate to one staff record\n\nFrom Table: store - Table containing store data\nTo Table: staff - Employees who work at the DVD rental stores\n\nFrom Column: manager_staff_id - manager_staff_id (SMALLINT)\nTo Column: staff_id - Unique identifier for each staff member\n"
  },
  {
    "object_type": "query",
    "id": "query_1",
    "description": "Select all data from actor",
    "complexity": "simple",
    "sql": "SELECT * FROM actor LIMIT 10;",
    "natural_language_variations": [
      "Select all data from actor"
    ],
    "tables_used": [
      "actor"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from actor\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from actor\n\nSQL Query:\nSELECT * FROM actor LIMIT 10;\n\nTables used:\n- actor: Performers who appear in films\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE', 'last_name': 'GUINESS', 'last_update': '2020-12-23 07:12:29'}\nRow 2: {'actor_id': 2, 'first_name': 'NICK', 'last_name': 'WAHLBERG', 'last_update': '2020-12-23 07:12:29'}\nRow 3: {'actor_id': 3, 'first_name': 'ED', 'last_name': 'CHASE', 'last_update': '2020-12-23 07:12:29'}\n"
  },
  {
    "object_type": "query",
    "id": "query_2",
    "description": "Filter actor by actor_id",
    "complexity": "simple",
    "sql": "SELECT * FROM actor WHERE actor_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter actor by actor_id"
    ],
    "tables_used": [
      "actor"
    ],
    "columns_used": [
      "actor_id"
    ],
    "text_representation": "Query: Filter actor by actor_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter actor by actor_id\n\nSQL Query:\nSELECT * FROM actor WHERE actor_id = 1 LIMIT 10;\n\nTables used:\n- actor: Performers who appear in films\n\nColumns used:\n- actor_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE', 'last_name': 'GUINESS', 'last_update': '2020-12-23 07:12:29'}\n"
  },
  {
    "object_type": "query",
    "id": "query_3",
    "description": "Order actor by actor_id",
    "complexity": "simple",
    "sql": "SELECT * FROM actor ORDER BY actor_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order actor by actor_id"
    ],
    "tables_used": [
      "actor"
    ],
    "columns_used": [
      "actor_id DESC"
    ],
    "text_representation": "Query: Order actor by actor_id\n\nComplexity: simple\n\nCan be asked as:\n- Order actor by actor_id\n\nSQL Query:\nSELECT * FROM actor ORDER BY actor_id DESC LIMIT 10;\n\nTables used:\n- actor: Performers who appear in films\n\nColumns used:\n- actor_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 200, 'first_name': 'THORA', 'last_name': 'TEMPLE', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'actor_id': 199, 'first_name': 'JULIA', 'last_name': 'FAWCETT', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'actor_id': 198, 'first_name': 'MARY', 'last_name': 'KEITEL', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_4",
    "description": "Select all data from address",
    "complexity": "simple",
    "sql": "SELECT * FROM address LIMIT 10;",
    "natural_language_variations": [
      "Select all data from address"
    ],
    "tables_used": [
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from address\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from address\n\nSQL Query:\nSELECT * FROM address LIMIT 10;\n\nTables used:\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\n"
  },
  {
    "object_type": "query",
    "id": "query_5",
    "description": "Filter address by address_id",
    "complexity": "simple",
    "sql": "SELECT * FROM address WHERE address_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter address by address_id"
    ],
    "tables_used": [
      "address"
    ],
    "columns_used": [
      "address_id"
    ],
    "text_representation": "Query: Filter address by address_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter address by address_id\n\nSQL Query:\nSELECT * FROM address WHERE address_id = 1 LIMIT 10;\n\nTables used:\n- address: Table containing address data\n\nColumns used:\n- address_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\n"
  },
  {
    "object_type": "query",
    "id": "query_6",
    "description": "Order address by address_id",
    "complexity": "simple",
    "sql": "SELECT * FROM address ORDER BY address_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order address by address_id"
    ],
    "tables_used": [
      "address"
    ],
    "columns_used": [
      "address_id DESC"
    ],
    "text_representation": "Query: Order address by address_id\n\nComplexity: simple\n\nCan be asked as:\n- Order address by address_id\n\nSQL Query:\nSELECT * FROM address ORDER BY address_id DESC LIMIT 10;\n\nTables used:\n- address: Table containing address data\n\nColumns used:\n- address_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 605, 'address': '1325 Fukuyama Street', 'address2': None, 'district': ' ', 'city_id': 537, 'postal_code': '27107', 'phone': ' ', 'last_update': '2020-12-23 07:12:29'}\nRow 2: {'address_id': 604, 'address': '1331 Usak Boulevard', 'address2': None, 'district': ' ', 'city_id': 296, 'postal_code': '61960', 'phone': ' ', 'last_update': '2020-12-23 07:12:29'}\nRow 3: {'address_id': 603, 'address': '1103 Quilmes Boulevard', 'address2': None, 'district': ' ', 'city_id': 503, 'postal_code': '52137', 'phone': ' ', 'last_update': '2020-12-23 07:12:28'}\n"
  },
  {
    "object_type": "query",
    "id": "query_7",
    "description": "Select all data from category",
    "complexity": "simple",
    "sql": "SELECT * FROM category LIMIT 10;",
    "natural_language_variations": [
      "Select all data from category"
    ],
    "tables_used": [
      "category"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from category\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from category\n\nSQL Query:\nSELECT * FROM category LIMIT 10;\n\nTables used:\n- category: Table containing category data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'category_id': 1, 'name': 'Action', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'category_id': 2, 'name': 'Animation', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'category_id': 3, 'name': 'Children', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_8",
    "description": "Filter category by category_id",
    "complexity": "simple",
    "sql": "SELECT * FROM category WHERE category_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter category by category_id"
    ],
    "tables_used": [
      "category"
    ],
    "columns_used": [
      "category_id"
    ],
    "text_representation": "Query: Filter category by category_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter category by category_id\n\nSQL Query:\nSELECT * FROM category WHERE category_id = 1 LIMIT 10;\n\nTables used:\n- category: Table containing category data\n\nColumns used:\n- category_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'category_id': 1, 'name': 'Action', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_9",
    "description": "Order category by category_id",
    "complexity": "simple",
    "sql": "SELECT * FROM category ORDER BY category_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order category by category_id"
    ],
    "tables_used": [
      "category"
    ],
    "columns_used": [
      "category_id DESC"
    ],
    "text_representation": "Query: Order category by category_id\n\nComplexity: simple\n\nCan be asked as:\n- Order category by category_id\n\nSQL Query:\nSELECT * FROM category ORDER BY category_id DESC LIMIT 10;\n\nTables used:\n- category: Table containing category data\n\nColumns used:\n- category_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'category_id': 16, 'name': 'Travel', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'category_id': 15, 'name': 'Sports', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'category_id': 14, 'name': 'Sci-Fi', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_10",
    "description": "Select all data from city",
    "complexity": "simple",
    "sql": "SELECT * FROM city LIMIT 10;",
    "natural_language_variations": [
      "Select all data from city"
    ],
    "tables_used": [
      "city"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from city\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from city\n\nSQL Query:\nSELECT * FROM city LIMIT 10;\n\nTables used:\n- city: Table containing city data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:14'}\nRow 2: {'city_id': 2, 'city': 'Abha', 'country_id': 82, 'last_update': '2020-12-23 07:12:14'}\nRow 3: {'city_id': 3, 'city': 'Abu Dhabi', 'country_id': 101, 'last_update': '2020-12-23 07:12:14'}\n"
  },
  {
    "object_type": "query",
    "id": "query_11",
    "description": "Filter city by city_id",
    "complexity": "simple",
    "sql": "SELECT * FROM city WHERE city_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter city by city_id"
    ],
    "tables_used": [
      "city"
    ],
    "columns_used": [
      "city_id"
    ],
    "text_representation": "Query: Filter city by city_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter city by city_id\n\nSQL Query:\nSELECT * FROM city WHERE city_id = 1 LIMIT 10;\n\nTables used:\n- city: Table containing city data\n\nColumns used:\n- city_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:14'}\n"
  },
  {
    "object_type": "query",
    "id": "query_12",
    "description": "Order city by city_id",
    "complexity": "simple",
    "sql": "SELECT * FROM city ORDER BY city_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order city by city_id"
    ],
    "tables_used": [
      "city"
    ],
    "columns_used": [
      "city_id DESC"
    ],
    "text_representation": "Query: Order city by city_id\n\nComplexity: simple\n\nCan be asked as:\n- Order city by city_id\n\nSQL Query:\nSELECT * FROM city ORDER BY city_id DESC LIMIT 10;\n\nTables used:\n- city: Table containing city data\n\nColumns used:\n- city_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 600, 'city': 'Ziguinchor', 'country_id': 83, 'last_update': '2020-12-23 07:12:21'}\nRow 2: {'city_id': 599, 'city': 'Zhoushan', 'country_id': 23, 'last_update': '2020-12-23 07:12:21'}\nRow 3: {'city_id': 598, 'city': 'Zhezqazghan', 'country_id': 51, 'last_update': '2020-12-23 07:12:21'}\n"
  },
  {
    "object_type": "query",
    "id": "query_13",
    "description": "Select all data from country",
    "complexity": "simple",
    "sql": "SELECT * FROM country LIMIT 10;",
    "natural_language_variations": [
      "Select all data from country"
    ],
    "tables_used": [
      "country"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from country\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from country\n\nSQL Query:\nSELECT * FROM country LIMIT 10;\n\nTables used:\n- country: Table containing country data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'country_id': 1, 'country': 'Afghanistan', 'last_update': '2020-12-23 07:12:12'}\nRow 2: {'country_id': 2, 'country': 'Algeria', 'last_update': '2020-12-23 07:12:12'}\nRow 3: {'country_id': 3, 'country': 'American Samoa', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_14",
    "description": "Filter country by country_id",
    "complexity": "simple",
    "sql": "SELECT * FROM country WHERE country_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter country by country_id"
    ],
    "tables_used": [
      "country"
    ],
    "columns_used": [
      "country_id"
    ],
    "text_representation": "Query: Filter country by country_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter country by country_id\n\nSQL Query:\nSELECT * FROM country WHERE country_id = 1 LIMIT 10;\n\nTables used:\n- country: Table containing country data\n\nColumns used:\n- country_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'country_id': 1, 'country': 'Afghanistan', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_15",
    "description": "Order country by country_id",
    "complexity": "simple",
    "sql": "SELECT * FROM country ORDER BY country_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order country by country_id"
    ],
    "tables_used": [
      "country"
    ],
    "columns_used": [
      "country_id DESC"
    ],
    "text_representation": "Query: Order country by country_id\n\nComplexity: simple\n\nCan be asked as:\n- Order country by country_id\n\nSQL Query:\nSELECT * FROM country ORDER BY country_id DESC LIMIT 10;\n\nTables used:\n- country: Table containing country data\n\nColumns used:\n- country_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'country_id': 109, 'country': 'Zambia', 'last_update': '2020-12-23 07:12:14'}\nRow 2: {'country_id': 108, 'country': 'Yugoslavia', 'last_update': '2020-12-23 07:12:14'}\nRow 3: {'country_id': 107, 'country': 'Yemen', 'last_update': '2020-12-23 07:12:14'}\n"
  },
  {
    "object_type": "query",
    "id": "query_16",
    "description": "Select all data from customer",
    "complexity": "simple",
    "sql": "SELECT * FROM customer LIMIT 10;",
    "natural_language_variations": [
      "Select all data from customer"
    ],
    "tables_used": [
      "customer"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from customer\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from customer\n\nSQL Query:\nSELECT * FROM customer LIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 6, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 7, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\n"
  },
  {
    "object_type": "query",
    "id": "query_17",
    "description": "Filter customer by customer_id",
    "complexity": "simple",
    "sql": "SELECT * FROM customer WHERE customer_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter customer by customer_id"
    ],
    "tables_used": [
      "customer"
    ],
    "columns_used": [
      "customer_id"
    ],
    "text_representation": "Query: Filter customer by customer_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter customer by customer_id\n\nSQL Query:\nSELECT * FROM customer WHERE customer_id = 1 LIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- customer_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\n"
  },
  {
    "object_type": "query",
    "id": "query_18",
    "description": "Order customer by customer_id",
    "complexity": "simple",
    "sql": "SELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order customer by customer_id"
    ],
    "tables_used": [
      "customer"
    ],
    "columns_used": [
      "customer_id DESC"
    ],
    "text_representation": "Query: Order customer by customer_id\n\nComplexity: simple\n\nCan be asked as:\n- Order customer by customer_id\n\nSQL Query:\nSELECT * FROM customer ORDER BY customer_id DESC LIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- customer_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 599, 'store_id': 2, 'first_name': 'AUSTIN', 'last_name': 'CINTRON', 'email': 'AUSTIN.CINTRON@sakilacustomer.org', 'address_id': 605, 'active': '1', 'create_date': '2006-02-14 22:04:37.000', 'last_update': '2020-12-23 07:15:20'}\nRow 2: {'customer_id': 598, 'store_id': 1, 'first_name': 'WADE', 'last_name': 'DELVALLE', 'email': 'WADE.DELVALLE@sakilacustomer.org', 'address_id': 604, 'active': '1', 'create_date': '2006-02-14 22:04:37.000', 'last_update': '2020-12-23 07:15:20'}\nRow 3: {'customer_id': 597, 'store_id': 1, 'first_name': 'FREDDIE', 'last_name': 'DUGGAN', 'email': 'FREDDIE.DUGGAN@sakilacustomer.org', 'address_id': 603, 'active': '1', 'create_date': '2006-02-14 22:04:37.000', 'last_update': '2020-12-23 07:15:20'}\n"
  },
  {
    "object_type": "query",
    "id": "query_19",
    "description": "Select all data from film",
    "complexity": "simple",
    "sql": "SELECT * FROM film LIMIT 10;",
    "natural_language_variations": [
      "Select all data from film"
    ],
    "tables_used": [
      "film"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from film\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from film\n\nSQL Query:\nSELECT * FROM film LIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_20",
    "description": "Filter film by film_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film WHERE film_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter film by film_id"
    ],
    "tables_used": [
      "film"
    ],
    "columns_used": [
      "film_id"
    ],
    "text_representation": "Query: Filter film by film_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter film by film_id\n\nSQL Query:\nSELECT * FROM film WHERE film_id = 1 LIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n\nColumns used:\n- film_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_21",
    "description": "Order film by film_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film ORDER BY film_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order film by film_id"
    ],
    "tables_used": [
      "film"
    ],
    "columns_used": [
      "film_id DESC"
    ],
    "text_representation": "Query: Order film by film_id\n\nComplexity: simple\n\nCan be asked as:\n- Order film by film_id\n\nSQL Query:\nSELECT * FROM film ORDER BY film_id DESC LIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n\nColumns used:\n- film_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1000, 'title': 'ZORRO ARK', 'description': 'A Intrepid Panorama of a Mad Scientist And a Boy who must Redeem a Boy in A Monastery', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Commentaries,Behind the Scenes', 'last_update': '2020-12-23 07:12:45'}\nRow 2: {'film_id': 999, 'title': 'ZOOLANDER FICTION', 'description': 'A Fateful Reflection of a Waitress And a Boat who must Discover a Sumo Wrestler in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 5, 'rental_rate': 2.99, 'length': 101, 'replacement_cost': 28.99, 'rating': 'R', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:45'}\nRow 3: {'film_id': 998, 'title': 'ZHIVAGO CORE', 'description': 'A Fateful Yarn of a Composer And a Man who must Face a Boy in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 105, 'replacement_cost': 10.99, 'rating': 'NC-17', 'special_features': 'Deleted Scenes', 'last_update': '2020-12-23 07:12:45'}\n"
  },
  {
    "object_type": "query",
    "id": "query_22",
    "description": "Select all data from film_actor",
    "complexity": "simple",
    "sql": "SELECT * FROM film_actor LIMIT 10;",
    "natural_language_variations": [
      "Select all data from film_actor"
    ],
    "tables_used": [
      "film_actor"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from film_actor\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from film_actor\n\nSQL Query:\nSELECT * FROM film_actor LIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:13:43'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:13:43'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:13:43'}\n"
  },
  {
    "object_type": "query",
    "id": "query_23",
    "description": "Filter film_actor by actor_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter film_actor by actor_id"
    ],
    "tables_used": [
      "film_actor"
    ],
    "columns_used": [
      "actor_id"
    ],
    "text_representation": "Query: Filter film_actor by actor_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter film_actor by actor_id\n\nSQL Query:\nSELECT * FROM film_actor WHERE actor_id = 1 LIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n\nColumns used:\n- actor_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:13:43'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:13:43'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:13:43'}\n"
  },
  {
    "object_type": "query",
    "id": "query_24",
    "description": "Order film_actor by actor_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order film_actor by actor_id"
    ],
    "tables_used": [
      "film_actor"
    ],
    "columns_used": [
      "actor_id DESC"
    ],
    "text_representation": "Query: Order film_actor by actor_id\n\nComplexity: simple\n\nCan be asked as:\n- Order film_actor by actor_id\n\nSQL Query:\nSELECT * FROM film_actor ORDER BY actor_id DESC LIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n\nColumns used:\n- actor_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 200, 'film_id': 993, 'last_update': '2020-12-23 07:14:58'}\nRow 2: {'actor_id': 200, 'film_id': 958, 'last_update': '2020-12-23 07:14:58'}\nRow 3: {'actor_id': 200, 'film_id': 945, 'last_update': '2020-12-23 07:14:58'}\n"
  },
  {
    "object_type": "query",
    "id": "query_25",
    "description": "Select all data from film_category",
    "complexity": "simple",
    "sql": "SELECT * FROM film_category LIMIT 10;",
    "natural_language_variations": [
      "Select all data from film_category"
    ],
    "tables_used": [
      "film_category"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from film_category\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from film_category\n\nSQL Query:\nSELECT * FROM film_category LIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:14:58'}\nRow 2: {'film_id': 2, 'category_id': 11, 'last_update': '2020-12-23 07:14:58'}\nRow 3: {'film_id': 3, 'category_id': 6, 'last_update': '2020-12-23 07:14:58'}\n"
  },
  {
    "object_type": "query",
    "id": "query_26",
    "description": "Filter film_category by film_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film_category WHERE film_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter film_category by film_id"
    ],
    "tables_used": [
      "film_category"
    ],
    "columns_used": [
      "film_id"
    ],
    "text_representation": "Query: Filter film_category by film_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter film_category by film_id\n\nSQL Query:\nSELECT * FROM film_category WHERE film_id = 1 LIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n\nColumns used:\n- film_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:14:58'}\n"
  },
  {
    "object_type": "query",
    "id": "query_27",
    "description": "Order film_category by film_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order film_category by film_id"
    ],
    "tables_used": [
      "film_category"
    ],
    "columns_used": [
      "film_id DESC"
    ],
    "text_representation": "Query: Order film_category by film_id\n\nComplexity: simple\n\nCan be asked as:\n- Order film_category by film_id\n\nSQL Query:\nSELECT * FROM film_category ORDER BY film_id DESC LIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n\nColumns used:\n- film_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1000, 'category_id': 5, 'last_update': '2020-12-23 07:15:11'}\nRow 2: {'film_id': 999, 'category_id': 3, 'last_update': '2020-12-23 07:15:11'}\nRow 3: {'film_id': 998, 'category_id': 11, 'last_update': '2020-12-23 07:15:11'}\n"
  },
  {
    "object_type": "query",
    "id": "query_28",
    "description": "Select all data from film_text",
    "complexity": "simple",
    "sql": "SELECT * FROM film_text LIMIT 10;",
    "natural_language_variations": [
      "Select all data from film_text"
    ],
    "tables_used": [
      "film_text"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from film_text\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from film_text\n\nSQL Query:\nSELECT * FROM film_text LIMIT 10;\n\nTables used:\n- film_text: Table containing film_text data\n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_29",
    "description": "Order film_text by film_id",
    "complexity": "simple",
    "sql": "SELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order film_text by film_id"
    ],
    "tables_used": [
      "film_text"
    ],
    "columns_used": [
      "film_id DESC"
    ],
    "text_representation": "Query: Order film_text by film_id\n\nComplexity: simple\n\nCan be asked as:\n- Order film_text by film_id\n\nSQL Query:\nSELECT * FROM film_text ORDER BY film_id DESC LIMIT 10;\n\nTables used:\n- film_text: Table containing film_text data\n\nColumns used:\n- film_id DESC\n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_30",
    "description": "Select all data from inventory",
    "complexity": "simple",
    "sql": "SELECT * FROM inventory LIMIT 10;",
    "natural_language_variations": [
      "Select all data from inventory"
    ],
    "tables_used": [
      "inventory"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from inventory\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from inventory\n\nSQL Query:\nSELECT * FROM inventory LIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\n"
  },
  {
    "object_type": "query",
    "id": "query_31",
    "description": "Filter inventory by inventory_id",
    "complexity": "simple",
    "sql": "SELECT * FROM inventory WHERE inventory_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter inventory by inventory_id"
    ],
    "tables_used": [
      "inventory"
    ],
    "columns_used": [
      "inventory_id"
    ],
    "text_representation": "Query: Filter inventory by inventory_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter inventory by inventory_id\n\nSQL Query:\nSELECT * FROM inventory WHERE inventory_id = 1 LIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n\nColumns used:\n- inventory_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\n"
  },
  {
    "object_type": "query",
    "id": "query_32",
    "description": "Order inventory by inventory_id",
    "complexity": "simple",
    "sql": "SELECT * FROM inventory ORDER BY inventory_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order inventory by inventory_id"
    ],
    "tables_used": [
      "inventory"
    ],
    "columns_used": [
      "inventory_id DESC"
    ],
    "text_representation": "Query: Order inventory by inventory_id\n\nComplexity: simple\n\nCan be asked as:\n- Order inventory by inventory_id\n\nSQL Query:\nSELECT * FROM inventory ORDER BY inventory_id DESC LIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n\nColumns used:\n- inventory_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 4581, 'film_id': 1000, 'store_id': 2, 'last_update': '2020-12-23 07:13:43'}\nRow 2: {'inventory_id': 4580, 'film_id': 1000, 'store_id': 2, 'last_update': '2020-12-23 07:13:43'}\nRow 3: {'inventory_id': 4579, 'film_id': 1000, 'store_id': 2, 'last_update': '2020-12-23 07:13:43'}\n"
  },
  {
    "object_type": "query",
    "id": "query_33",
    "description": "Select all data from language",
    "complexity": "simple",
    "sql": "SELECT * FROM language LIMIT 10;",
    "natural_language_variations": [
      "Select all data from language"
    ],
    "tables_used": [
      "language"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from language\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from language\n\nSQL Query:\nSELECT * FROM language LIMIT 10;\n\nTables used:\n- language: Table containing language data\n\nExecution: Successful\nRow Count: 6\n\nSample Results:\nRow 1: {'language_id': 1, 'name': 'English', 'last_update': '2020-12-23 07:12:12'}\nRow 2: {'language_id': 2, 'name': 'Italian', 'last_update': '2020-12-23 07:12:12'}\nRow 3: {'language_id': 3, 'name': 'Japanese', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_34",
    "description": "Filter language by language_id",
    "complexity": "simple",
    "sql": "SELECT * FROM language WHERE language_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter language by language_id"
    ],
    "tables_used": [
      "language"
    ],
    "columns_used": [
      "language_id"
    ],
    "text_representation": "Query: Filter language by language_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter language by language_id\n\nSQL Query:\nSELECT * FROM language WHERE language_id = 1 LIMIT 10;\n\nTables used:\n- language: Table containing language data\n\nColumns used:\n- language_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'language_id': 1, 'name': 'English', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_35",
    "description": "Order language by language_id",
    "complexity": "simple",
    "sql": "SELECT * FROM language ORDER BY language_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order language by language_id"
    ],
    "tables_used": [
      "language"
    ],
    "columns_used": [
      "language_id DESC"
    ],
    "text_representation": "Query: Order language by language_id\n\nComplexity: simple\n\nCan be asked as:\n- Order language by language_id\n\nSQL Query:\nSELECT * FROM language ORDER BY language_id DESC LIMIT 10;\n\nTables used:\n- language: Table containing language data\n\nColumns used:\n- language_id DESC\n\nExecution: Successful\nRow Count: 6\n\nSample Results:\nRow 1: {'language_id': 6, 'name': 'German', 'last_update': '2020-12-23 07:12:12'}\nRow 2: {'language_id': 5, 'name': 'French', 'last_update': '2020-12-23 07:12:12'}\nRow 3: {'language_id': 4, 'name': 'Mandarin', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_36",
    "description": "Select all data from payment",
    "complexity": "simple",
    "sql": "SELECT * FROM payment LIMIT 10;",
    "natural_language_variations": [
      "Select all data from payment"
    ],
    "tables_used": [
      "payment"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from payment\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from payment\n\nSQL Query:\nSELECT * FROM payment LIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:19:10'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:19:10'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:19:10'}\n"
  },
  {
    "object_type": "query",
    "id": "query_37",
    "description": "Filter payment by payment_id",
    "complexity": "simple",
    "sql": "SELECT * FROM payment WHERE payment_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter payment by payment_id"
    ],
    "tables_used": [
      "payment"
    ],
    "columns_used": [
      "payment_id"
    ],
    "text_representation": "Query: Filter payment by payment_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter payment by payment_id\n\nSQL Query:\nSELECT * FROM payment WHERE payment_id = 1 LIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n\nColumns used:\n- payment_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:19:10'}\n"
  },
  {
    "object_type": "query",
    "id": "query_38",
    "description": "Order payment by payment_id",
    "complexity": "simple",
    "sql": "SELECT * FROM payment ORDER BY payment_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order payment by payment_id"
    ],
    "tables_used": [
      "payment"
    ],
    "columns_used": [
      "payment_id DESC"
    ],
    "text_representation": "Query: Order payment by payment_id\n\nComplexity: simple\n\nCan be asked as:\n- Order payment by payment_id\n\nSQL Query:\nSELECT * FROM payment ORDER BY payment_id DESC LIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n\nColumns used:\n- payment_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 16049, 'customer_id': 599, 'staff_id': 2, 'rental_id': 15725, 'amount': 2.99, 'payment_date': '2005-08-23 11:25:00.000', 'last_update': '2020-12-23 07:22:55'}\nRow 2: {'payment_id': 16048, 'customer_id': 599, 'staff_id': 2, 'rental_id': 15719, 'amount': 2.99, 'payment_date': '2005-08-23 11:08:46.000', 'last_update': '2020-12-23 07:22:55'}\nRow 3: {'payment_id': 16047, 'customer_id': 599, 'staff_id': 2, 'rental_id': 15590, 'amount': 8.99, 'payment_date': '2005-08-23 06:09:44.000', 'last_update': '2020-12-23 07:22:55'}\n"
  },
  {
    "object_type": "query",
    "id": "query_39",
    "description": "Select all data from rental",
    "complexity": "simple",
    "sql": "SELECT * FROM rental LIMIT 10;",
    "natural_language_variations": [
      "Select all data from rental"
    ],
    "tables_used": [
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from rental\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from rental\n\nSQL Query:\nSELECT * FROM rental LIMIT 10;\n\nTables used:\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\n"
  },
  {
    "object_type": "query",
    "id": "query_40",
    "description": "Filter rental by rental_id",
    "complexity": "simple",
    "sql": "SELECT * FROM rental WHERE rental_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter rental by rental_id"
    ],
    "tables_used": [
      "rental"
    ],
    "columns_used": [
      "rental_id"
    ],
    "text_representation": "Query: Filter rental by rental_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter rental by rental_id\n\nSQL Query:\nSELECT * FROM rental WHERE rental_id = 1 LIMIT 10;\n\nTables used:\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- rental_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\n"
  },
  {
    "object_type": "query",
    "id": "query_41",
    "description": "Order rental by rental_id",
    "complexity": "simple",
    "sql": "SELECT * FROM rental ORDER BY rental_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order rental by rental_id"
    ],
    "tables_used": [
      "rental"
    ],
    "columns_used": [
      "rental_id DESC"
    ],
    "text_representation": "Query: Order rental by rental_id\n\nComplexity: simple\n\nCan be asked as:\n- Order rental by rental_id\n\nSQL Query:\nSELECT * FROM rental ORDER BY rental_id DESC LIMIT 10;\n\nTables used:\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- rental_id DESC\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 16049, 'rental_date': '2005-08-23 22:50:12.000', 'inventory_id': 2666, 'customer_id': 393, 'return_date': '2005-08-30 01:01:12.000', 'staff_id': 2, 'last_update': '2020-12-23 07:19:10'}\nRow 2: {'rental_id': 16048, 'rental_date': '2005-08-23 22:43:07.000', 'inventory_id': 2019, 'customer_id': 103, 'return_date': '2005-08-31 21:33:07.000', 'staff_id': 1, 'last_update': '2020-12-23 07:19:10'}\nRow 3: {'rental_id': 16047, 'rental_date': '2005-08-23 22:42:48.000', 'inventory_id': 2088, 'customer_id': 114, 'return_date': '2005-08-25 02:48:48.000', 'staff_id': 2, 'last_update': '2020-12-23 07:19:10'}\n"
  },
  {
    "object_type": "query",
    "id": "query_42",
    "description": "Select all data from staff",
    "complexity": "simple",
    "sql": "SELECT * FROM staff LIMIT 10;",
    "natural_language_variations": [
      "Select all data from staff"
    ],
    "tables_used": [
      "staff"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from staff\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from staff\n\nSQL Query:\nSELECT * FROM staff LIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 4, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_43",
    "description": "Filter staff by staff_id",
    "complexity": "simple",
    "sql": "SELECT * FROM staff WHERE staff_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter staff by staff_id"
    ],
    "tables_used": [
      "staff"
    ],
    "columns_used": [
      "staff_id"
    ],
    "text_representation": "Query: Filter staff by staff_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter staff by staff_id\n\nSQL Query:\nSELECT * FROM staff WHERE staff_id = 1 LIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- staff_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_44",
    "description": "Order staff by staff_id",
    "complexity": "simple",
    "sql": "SELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order staff by staff_id"
    ],
    "tables_used": [
      "staff"
    ],
    "columns_used": [
      "staff_id DESC"
    ],
    "text_representation": "Query: Order staff by staff_id\n\nComplexity: simple\n\nCan be asked as:\n- Order staff by staff_id\n\nSQL Query:\nSELECT * FROM staff ORDER BY staff_id DESC LIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- staff_id DESC\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 4, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_45",
    "description": "Select all data from store",
    "complexity": "simple",
    "sql": "SELECT * FROM store LIMIT 10;",
    "natural_language_variations": [
      "Select all data from store"
    ],
    "tables_used": [
      "store"
    ],
    "columns_used": [],
    "text_representation": "Query: Select all data from store\n\nComplexity: simple\n\nCan be asked as:\n- Select all data from store\n\nSQL Query:\nSELECT * FROM store LIMIT 10;\n\nTables used:\n- store: Table containing store data\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_46",
    "description": "Filter store by store_id",
    "complexity": "simple",
    "sql": "SELECT * FROM store WHERE store_id = 1 LIMIT 10;",
    "natural_language_variations": [
      "Filter store by store_id"
    ],
    "tables_used": [
      "store"
    ],
    "columns_used": [
      "store_id"
    ],
    "text_representation": "Query: Filter store by store_id\n\nComplexity: simple\n\nCan be asked as:\n- Filter store by store_id\n\nSQL Query:\nSELECT * FROM store WHERE store_id = 1 LIMIT 10;\n\nTables used:\n- store: Table containing store data\n\nColumns used:\n- store_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_47",
    "description": "Order store by store_id",
    "complexity": "simple",
    "sql": "SELECT * FROM store ORDER BY store_id DESC LIMIT 10;",
    "natural_language_variations": [
      "Order store by store_id"
    ],
    "tables_used": [
      "store"
    ],
    "columns_used": [
      "store_id DESC"
    ],
    "text_representation": "Query: Order store by store_id\n\nComplexity: simple\n\nCan be asked as:\n- Order store by store_id\n\nSQL Query:\nSELECT * FROM store ORDER BY store_id DESC LIMIT 10;\n\nTables used:\n- store: Table containing store data\n\nColumns used:\n- store_id DESC\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_48",
    "description": "Join address with city",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join address with city"
    ],
    "tables_used": [
      "city",
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Join address with city\n\nComplexity: medium\n\nCan be asked as:\n- Join address with city\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:17', 'city': 'Lethbridge', 'country_id': 20}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21', 'city': 'Woodridge', 'country_id': 8}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:17', 'city': 'Lethbridge', 'country_id': 20}\n"
  },
  {
    "object_type": "query",
    "id": "query_49",
    "description": "Join address with city and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join address with city and filter results"
    ],
    "tables_used": [
      "city",
      "address"
    ],
    "columns_used": [
      "t1.city_id"
    ],
    "text_representation": "Query: Join address with city and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join address with city and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id\nWHERE t1.city_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- address: Table containing address data\n\nColumns used:\n- t1.city_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:17', 'city': 'Lethbridge', 'country_id': 20}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:21', 'city': 'Woodridge', 'country_id': 8}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' ', 'last_update': '2020-12-23 07:12:17', 'city': 'Lethbridge', 'country_id': 20}\n"
  },
  {
    "object_type": "query",
    "id": "query_50",
    "description": "Join city with country",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join city with country"
    ],
    "tables_used": [
      "country",
      "city"
    ],
    "columns_used": [],
    "text_representation": "Query: Join city with country\n\nComplexity: medium\n\nCan be asked as:\n- Join city with country\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nLIMIT 10;\n\nTables used:\n- country: Table containing country data\n- city: Table containing city data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:13', 'country': 'Spain'}\nRow 2: {'city_id': 2, 'city': 'Abha', 'country_id': 82, 'last_update': '2020-12-23 07:12:13', 'country': 'Saudi Arabia'}\nRow 3: {'city_id': 3, 'city': 'Abu Dhabi', 'country_id': 101, 'last_update': '2020-12-23 07:12:13', 'country': 'United Arab Emirates'}\n"
  },
  {
    "object_type": "query",
    "id": "query_51",
    "description": "Join city with country and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join city with country and filter results"
    ],
    "tables_used": [
      "country",
      "city"
    ],
    "columns_used": [
      "t1.country_id"
    ],
    "text_representation": "Query: Join city with country and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join city with country and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM city t1\nJOIN country t2 ON t1.country_id = t2.country_id\nWHERE t1.country_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- country: Table containing country data\n- city: Table containing city data\n\nColumns used:\n- t1.country_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:13', 'country': 'Spain'}\nRow 2: {'city_id': 2, 'city': 'Abha', 'country_id': 82, 'last_update': '2020-12-23 07:12:13', 'country': 'Saudi Arabia'}\nRow 3: {'city_id': 3, 'city': 'Abu Dhabi', 'country_id': 101, 'last_update': '2020-12-23 07:12:13', 'country': 'United Arab Emirates'}\n"
  },
  {
    "object_type": "query",
    "id": "query_52",
    "description": "Join customer with address",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join customer with address"
    ],
    "tables_used": [
      "customer",
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Join customer with address\n\nComplexity: medium\n\nCan be asked as:\n- Join customer with address\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '1913 Hanoi Way', 'address2': None, 'district': ' ', 'city_id': 463, 'postal_code': '35200', 'phone': ' '}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 6, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '1121 Loja Avenue', 'address2': None, 'district': ' ', 'city_id': 449, 'postal_code': '17886', 'phone': ' '}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 7, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '692 Joliet Street', 'address2': None, 'district': ' ', 'city_id': 38, 'postal_code': '83579', 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_53",
    "description": "Join customer with address and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join customer with address and filter results"
    ],
    "tables_used": [
      "customer",
      "address"
    ],
    "columns_used": [
      "t1.address_id"
    ],
    "text_representation": "Query: Join customer with address and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join customer with address and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t1.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '1913 Hanoi Way', 'address2': None, 'district': ' ', 'city_id': 463, 'postal_code': '35200', 'phone': ' '}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 6, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '1121 Loja Avenue', 'address2': None, 'district': ' ', 'city_id': 449, 'postal_code': '17886', 'phone': ' '}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 7, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:21', 'address': '692 Joliet Street', 'address2': None, 'district': ' ', 'city_id': 38, 'postal_code': '83579', 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_54",
    "description": "Join customer with store",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join customer with store"
    ],
    "tables_used": [
      "store",
      "customer"
    ],
    "columns_used": [],
    "text_representation": "Query: Join customer with store\n\nComplexity: medium\n\nCan be asked as:\n- Join customer with store\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_55",
    "description": "Join customer with store and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join customer with store and filter results"
    ],
    "tables_used": [
      "store",
      "customer"
    ],
    "columns_used": [
      "t1.store_id"
    ],
    "text_representation": "Query: Join customer with store and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join customer with store and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t1.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 1, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_56",
    "description": "Join film with language",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film with language"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film with language\n\nComplexity: medium\n\nCan be asked as:\n- Join film with language\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_57",
    "description": "Join film with language and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film with language and filter results"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [
      "t1.original_language_id"
    ],
    "text_representation": "Query: Join film with language and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film with language and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.original_language_id = t2.language_id\nWHERE t1.original_language_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.original_language_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_58",
    "description": "Join film with language",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film with language"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film with language\n\nComplexity: medium\n\nCan be asked as:\n- Join film with language\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\n"
  },
  {
    "object_type": "query",
    "id": "query_59",
    "description": "Join film with language and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film with language and filter results"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [
      "t1.language_id"
    ],
    "text_representation": "Query: Join film with language and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film with language and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film t1\nJOIN language t2 ON t1.language_id = t2.language_id\nWHERE t1.language_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.language_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:12', 'name': 'English'}\n"
  },
  {
    "object_type": "query",
    "id": "query_60",
    "description": "Join film_actor with film",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_actor with film"
    ],
    "tables_used": [
      "film_actor",
      "film"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film_actor with film\n\nComplexity: medium\n\nCan be asked as:\n- Join film_actor with film\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:12:32', 'title': 'ANACONDA CONFESSIONS', 'description': 'A Lacklusture Display of a Dentist And a Dentist who must Fight a Girl in Australia', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 0.99, 'length': 92, 'replacement_cost': 9.99, 'rating': 'R', 'special_features': 'Trailers,Deleted Scenes'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:12:32', 'title': 'ANGELS LIFE', 'description': 'A Thoughtful Display of a Woman And a Astronaut who must Battle a Robot in Berlin', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 2.99, 'length': 74, 'replacement_cost': 15.99, 'rating': 'G', 'special_features': 'Trailers'}\n"
  },
  {
    "object_type": "query",
    "id": "query_61",
    "description": "Join film_actor with film and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_actor with film and filter results"
    ],
    "tables_used": [
      "film_actor",
      "film"
    ],
    "columns_used": [
      "t1.film_id"
    ],
    "text_representation": "Query: Join film_actor with film and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film_actor with film and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- t1.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:12:32', 'title': 'ANACONDA CONFESSIONS', 'description': 'A Lacklusture Display of a Dentist And a Dentist who must Fight a Girl in Australia', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 0.99, 'length': 92, 'replacement_cost': 9.99, 'rating': 'R', 'special_features': 'Trailers,Deleted Scenes'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:12:32', 'title': 'ANGELS LIFE', 'description': 'A Thoughtful Display of a Woman And a Astronaut who must Battle a Robot in Berlin', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 2.99, 'length': 74, 'replacement_cost': 15.99, 'rating': 'G', 'special_features': 'Trailers'}\n"
  },
  {
    "object_type": "query",
    "id": "query_62",
    "description": "Join film_actor with actor",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_actor with actor"
    ],
    "tables_used": [
      "film_actor",
      "actor"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film_actor with actor\n\nComplexity: medium\n\nCan be asked as:\n- Join film_actor with actor\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- actor: Performers who appear in films\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\n"
  },
  {
    "object_type": "query",
    "id": "query_63",
    "description": "Join film_actor with actor and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_actor with actor and filter results"
    ],
    "tables_used": [
      "film_actor",
      "actor"
    ],
    "columns_used": [
      "t1.actor_id"
    ],
    "text_representation": "Query: Join film_actor with actor and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film_actor with actor and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_actor t1\nJOIN actor t2 ON t1.actor_id = t2.actor_id\nWHERE t1.actor_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- actor: Performers who appear in films\n\nColumns used:\n- t1.actor_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\nRow 2: {'actor_id': 1, 'film_id': 23, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\nRow 3: {'actor_id': 1, 'film_id': 25, 'last_update': '2020-12-23 07:12:29', 'first_name': 'PENELOPE', 'last_name': 'GUINESS'}\n"
  },
  {
    "object_type": "query",
    "id": "query_64",
    "description": "Join film_category with category",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_category with category"
    ],
    "tables_used": [
      "film_category",
      "category"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film_category with category\n\nComplexity: medium\n\nCan be asked as:\n- Join film_category with category\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'name': 'Documentary'}\nRow 2: {'film_id': 2, 'category_id': 11, 'last_update': '2020-12-23 07:12:31', 'name': 'Horror'}\nRow 3: {'film_id': 3, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'name': 'Documentary'}\n"
  },
  {
    "object_type": "query",
    "id": "query_65",
    "description": "Join film_category with category and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_category with category and filter results"
    ],
    "tables_used": [
      "film_category",
      "category"
    ],
    "columns_used": [
      "t1.category_id"
    ],
    "text_representation": "Query: Join film_category with category and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film_category with category and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_category t1\nJOIN category t2 ON t1.category_id = t2.category_id\nWHERE t1.category_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nColumns used:\n- t1.category_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'name': 'Documentary'}\nRow 2: {'film_id': 2, 'category_id': 11, 'last_update': '2020-12-23 07:12:31', 'name': 'Horror'}\nRow 3: {'film_id': 3, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'name': 'Documentary'}\n"
  },
  {
    "object_type": "query",
    "id": "query_66",
    "description": "Join film_category with film",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_category with film"
    ],
    "tables_used": [
      "film_category",
      "film"
    ],
    "columns_used": [],
    "text_representation": "Query: Join film_category with film\n\nComplexity: medium\n\nCan be asked as:\n- Join film_category with film\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'film_id': 2, 'category_id': 11, 'last_update': '2020-12-23 07:12:31', 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes'}\nRow 3: {'film_id': 3, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes'}\n"
  },
  {
    "object_type": "query",
    "id": "query_67",
    "description": "Join film_category with film and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join film_category with film and filter results"
    ],
    "tables_used": [
      "film_category",
      "film"
    ],
    "columns_used": [
      "t1.film_id"
    ],
    "text_representation": "Query: Join film_category with film and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join film_category with film and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- t1.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'film_id': 2, 'category_id': 11, 'last_update': '2020-12-23 07:12:31', 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes'}\nRow 3: {'film_id': 3, 'category_id': 6, 'last_update': '2020-12-23 07:12:31', 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes'}\n"
  },
  {
    "object_type": "query",
    "id": "query_68",
    "description": "Join inventory with film",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join inventory with film"
    ],
    "tables_used": [
      "film",
      "inventory"
    ],
    "columns_used": [],
    "text_representation": "Query: Join inventory with film\n\nComplexity: medium\n\nCan be asked as:\n- Join inventory with film\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\n"
  },
  {
    "object_type": "query",
    "id": "query_69",
    "description": "Join inventory with film and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join inventory with film and filter results"
    ],
    "tables_used": [
      "film",
      "inventory"
    ],
    "columns_used": [
      "t1.film_id"
    ],
    "text_representation": "Query: Join inventory with film and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join inventory with film and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id\nWHERE t1.film_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n\nColumns used:\n- t1.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes'}\n"
  },
  {
    "object_type": "query",
    "id": "query_70",
    "description": "Join inventory with store",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join inventory with store"
    ],
    "tables_used": [
      "store",
      "inventory"
    ],
    "columns_used": [],
    "text_representation": "Query: Join inventory with store\n\nComplexity: medium\n\nCan be asked as:\n- Join inventory with store\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_71",
    "description": "Join inventory with store and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join inventory with store and filter results"
    ],
    "tables_used": [
      "store",
      "inventory"
    ],
    "columns_used": [
      "t1.store_id"
    ],
    "text_representation": "Query: Join inventory with store and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join inventory with store and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n\nColumns used:\n- t1.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1, 'address_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_72",
    "description": "Join payment with staff",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with staff"
    ],
    "tables_used": [
      "payment",
      "staff"
    ],
    "columns_used": [],
    "text_representation": "Query: Join payment with staff\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with staff\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_73",
    "description": "Join payment with staff and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with staff and filter results"
    ],
    "tables_used": [
      "payment",
      "staff"
    ],
    "columns_used": [
      "t1.staff_id"
    ],
    "text_representation": "Query: Join payment with staff and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with staff and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_74",
    "description": "Join payment with customer",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with customer"
    ],
    "tables_used": [
      "payment",
      "customer"
    ],
    "columns_used": [],
    "text_representation": "Query: Join payment with customer\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with customer\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_75",
    "description": "Join payment with customer and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with customer and filter results"
    ],
    "tables_used": [
      "payment",
      "customer"
    ],
    "columns_used": [
      "t1.customer_id"
    ],
    "text_representation": "Query: Join payment with customer and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with customer and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t1.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:15:11', 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_76",
    "description": "Join payment with rental",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with rental"
    ],
    "tables_used": [
      "payment",
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Join payment with rental\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with rental\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 2, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:15:21', 'rental_date': '2005-05-25 11:30:37.000', 'inventory_id': 3021, 'return_date': '2005-06-03 12:00:37.000'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:15:27', 'rental_date': '2005-05-28 10:35:23.000', 'inventory_id': 4020, 'return_date': '2005-06-03 06:32:23.000'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 2, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:15:35', 'rental_date': '2005-06-15 00:54:12.000', 'inventory_id': 2785, 'return_date': '2005-06-23 02:42:12.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_77",
    "description": "Join payment with rental and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join payment with rental and filter results"
    ],
    "tables_used": [
      "payment",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id"
    ],
    "text_representation": "Query: Join payment with rental and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join payment with rental and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id\nWHERE t1.rental_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 2, 'rental_id': 76, 'amount': 2.99, 'payment_date': '2005-05-25 11:30:37.000', 'last_update': '2020-12-23 07:15:21', 'rental_date': '2005-05-25 11:30:37.000', 'inventory_id': 3021, 'return_date': '2005-06-03 12:00:37.000'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'rental_id': 573, 'amount': 0.99, 'payment_date': '2005-05-28 10:35:23.000', 'last_update': '2020-12-23 07:15:27', 'rental_date': '2005-05-28 10:35:23.000', 'inventory_id': 4020, 'return_date': '2005-06-03 06:32:23.000'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 2, 'rental_id': 1185, 'amount': 5.99, 'payment_date': '2005-06-15 00:54:12.000', 'last_update': '2020-12-23 07:15:35', 'rental_date': '2005-06-15 00:54:12.000', 'inventory_id': 2785, 'return_date': '2005-06-23 02:42:12.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_78",
    "description": "Join rental with customer",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with customer"
    ],
    "tables_used": [
      "customer",
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Join rental with customer\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with customer\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:13', 'store_id': 1, 'first_name': 'CHARLOTTE', 'last_name': 'HUNTER', 'email': 'CHARLOTTE.HUNTER@sakilacustomer.org', 'address_id': 134, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:18', 'store_id': 1, 'first_name': 'TOMMY', 'last_name': 'COLLAZO', 'email': 'TOMMY.COLLAZO@sakilacustomer.org', 'address_id': 464, 'active': '1', 'create_date': '2006-02-14 22:04:37.000'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:17', 'store_id': 1, 'first_name': 'MANUEL', 'last_name': 'MURRELL', 'email': 'MANUEL.MURRELL@sakilacustomer.org', 'address_id': 413, 'active': '1', 'create_date': '2006-02-14 22:04:37.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_79",
    "description": "Join rental with customer and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with customer and filter results"
    ],
    "tables_used": [
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.customer_id"
    ],
    "text_representation": "Query: Join rental with customer and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with customer and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id\nWHERE t1.customer_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:13', 'store_id': 1, 'first_name': 'CHARLOTTE', 'last_name': 'HUNTER', 'email': 'CHARLOTTE.HUNTER@sakilacustomer.org', 'address_id': 134, 'active': '1', 'create_date': '2006-02-14 22:04:36.000'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:18', 'store_id': 1, 'first_name': 'TOMMY', 'last_name': 'COLLAZO', 'email': 'TOMMY.COLLAZO@sakilacustomer.org', 'address_id': 464, 'active': '1', 'create_date': '2006-02-14 22:04:37.000'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:17', 'store_id': 1, 'first_name': 'MANUEL', 'last_name': 'MURRELL', 'email': 'MANUEL.MURRELL@sakilacustomer.org', 'address_id': 413, 'active': '1', 'create_date': '2006-02-14 22:04:37.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_80",
    "description": "Join rental with inventory",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with inventory"
    ],
    "tables_used": [
      "inventory",
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Join rental with inventory\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with inventory\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:49', 'film_id': 80, 'store_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:13:04', 'film_id': 333, 'store_id': 2}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:13:06', 'film_id': 373, 'store_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_81",
    "description": "Join rental with inventory and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with inventory and filter results"
    ],
    "tables_used": [
      "inventory",
      "rental"
    ],
    "columns_used": [
      "t1.inventory_id"
    ],
    "text_representation": "Query: Join rental with inventory and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with inventory and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id\nWHERE t1.inventory_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:49', 'film_id': 80, 'store_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:13:04', 'film_id': 333, 'store_id': 2}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:13:06', 'film_id': 373, 'store_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_82",
    "description": "Join rental with staff",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with staff"
    ],
    "tables_used": [
      "staff",
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Join rental with staff\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with staff\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nLIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_83",
    "description": "Join rental with staff and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join rental with staff and filter results"
    ],
    "tables_used": [
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.staff_id"
    ],
    "text_representation": "Query: Join rental with staff and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join rental with staff and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id\nWHERE t1.staff_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:12:31', 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_84",
    "description": "Join staff with address",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join staff with address"
    ],
    "tables_used": [
      "staff",
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Join staff with address\n\nComplexity: medium\n\nCan be asked as:\n- Join staff with address\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:21', 'address': '23 Workhaven Lane', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' '}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 4, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:21', 'address': '1411 Lillydale Drive', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_85",
    "description": "Join staff with address and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join staff with address and filter results"
    ],
    "tables_used": [
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.address_id"
    ],
    "text_representation": "Query: Join staff with address and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join staff with address and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:21', 'address': '23 Workhaven Lane', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' '}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 4, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:21', 'address': '1411 Lillydale Drive', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_86",
    "description": "Join staff with store",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join staff with store"
    ],
    "tables_used": [
      "store",
      "staff"
    ],
    "columns_used": [],
    "text_representation": "Query: Join staff with store\n\nComplexity: medium\n\nCan be asked as:\n- Join staff with store\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 1, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 2, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_87",
    "description": "Join staff with store and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join staff with store and filter results"
    ],
    "tables_used": [
      "store",
      "staff"
    ],
    "columns_used": [
      "t1.store_id"
    ],
    "text_representation": "Query: Join staff with store and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join staff with store and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id\nWHERE t1.store_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.store_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 1, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 1}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 2, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31', 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_88",
    "description": "Join store with address",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join store with address"
    ],
    "tables_used": [
      "store",
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Join store with address\n\nComplexity: medium\n\nCan be asked as:\n- Join store with address\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:21', 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' '}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'last_update': '2020-12-23 07:12:21', 'address': '28 MySQL Boulevard', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_89",
    "description": "Join store with address and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join store with address and filter results"
    ],
    "tables_used": [
      "store",
      "address"
    ],
    "columns_used": [
      "t1.address_id"
    ],
    "text_representation": "Query: Join store with address and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join store with address and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id\nWHERE t1.address_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- address: Table containing address data\n\nColumns used:\n- t1.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:21', 'address': '47 MySakila Drive', 'address2': None, 'district': ' ', 'city_id': 300, 'postal_code': None, 'phone': ' '}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'last_update': '2020-12-23 07:12:21', 'address': '28 MySQL Boulevard', 'address2': None, 'district': ' ', 'city_id': 576, 'postal_code': None, 'phone': ' '}\n"
  },
  {
    "object_type": "query",
    "id": "query_90",
    "description": "Join store with staff",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Join store with staff"
    ],
    "tables_used": [
      "store",
      "staff"
    ],
    "columns_used": [],
    "text_representation": "Query: Join store with staff\n\nComplexity: medium\n\nCan be asked as:\n- Join store with staff\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 3, 'last_update': '2020-12-23 07:12:31', 'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 4, 'last_update': '2020-12-23 07:12:31', 'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_91",
    "description": "Join store with staff and filter results",
    "complexity": "medium",
    "sql": "SELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "Join store with staff and filter results"
    ],
    "tables_used": [
      "store",
      "staff"
    ],
    "columns_used": [
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Join store with staff and filter results\n\nComplexity: medium\n\nCan be asked as:\n- Join store with staff and filter results\n\nSQL Query:\nSELECT t1.*, t2.*\nFROM store t1\nJOIN staff t2 ON t1.manager_staff_id = t2.staff_id\nWHERE t1.manager_staff_id IS NOT NULL\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 3, 'last_update': '2020-12-23 07:12:31', 'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 4, 'last_update': '2020-12-23 07:12:31', 'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964'}\n"
  },
  {
    "object_type": "query",
    "id": "query_92",
    "description": "Aggregate statistics for actor",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM actor;",
    "natural_language_variations": [
      "Aggregate statistics for actor"
    ],
    "tables_used": [
      "actor"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for actor\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for actor\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM actor;\n\nTables used:\n- actor: Performers who appear in films\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 200, 'average': 100.5, 'total': 20100, 'minimum': 1, 'maximum': 200}\n"
  },
  {
    "object_type": "query",
    "id": "query_93",
    "description": "Aggregate statistics for address",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;",
    "natural_language_variations": [
      "Aggregate statistics for address"
    ],
    "tables_used": [
      "address"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for address\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for address\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM address;\n\nTables used:\n- address: Table containing address data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 603, 'average': 302.71973466003317, 'total': 182540, 'minimum': 1, 'maximum': 605}\n"
  },
  {
    "object_type": "query",
    "id": "query_94",
    "description": "Aggregate statistics for city",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;",
    "natural_language_variations": [
      "Aggregate statistics for city"
    ],
    "tables_used": [
      "city"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for city\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for city\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(city_id) as average,\n    SUM(city_id) as total,\n    MIN(city_id) as minimum,\n    MAX(city_id) as maximum\nFROM city;\n\nTables used:\n- city: Table containing city data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 600, 'average': 300.5, 'total': 180300, 'minimum': 1, 'maximum': 600}\n"
  },
  {
    "object_type": "query",
    "id": "query_95",
    "description": "Aggregate statistics for customer",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;",
    "natural_language_variations": [
      "Aggregate statistics for customer"
    ],
    "tables_used": [
      "customer"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for customer\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for customer\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(customer_id) as average,\n    SUM(customer_id) as total,\n    MIN(customer_id) as minimum,\n    MAX(customer_id) as maximum\nFROM customer;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 599, 'average': 300.0, 'total': 179700, 'minimum': 1, 'maximum': 599}\n"
  },
  {
    "object_type": "query",
    "id": "query_96",
    "description": "Aggregate statistics for film",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;",
    "natural_language_variations": [
      "Aggregate statistics for film"
    ],
    "tables_used": [
      "film"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for film\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for film\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film;\n\nTables used:\n- film: Movies available for rental in DVD format\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 1000, 'average': 500.5, 'total': 500500, 'minimum': 1, 'maximum': 1000}\n"
  },
  {
    "object_type": "query",
    "id": "query_97",
    "description": "Aggregate statistics for film_actor",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;",
    "natural_language_variations": [
      "Aggregate statistics for film_actor"
    ],
    "tables_used": [
      "film_actor"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for film_actor\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for film_actor\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(actor_id) as average,\n    SUM(actor_id) as total,\n    MIN(actor_id) as minimum,\n    MAX(actor_id) as maximum\nFROM film_actor;\n\nTables used:\n- film_actor: Table containing film_actor data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 5462, 'average': 100.95239838886854, 'total': 551402, 'minimum': 1, 'maximum': 200}\n"
  },
  {
    "object_type": "query",
    "id": "query_98",
    "description": "Aggregate statistics for film_category",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;",
    "natural_language_variations": [
      "Aggregate statistics for film_category"
    ],
    "tables_used": [
      "film_category"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for film_category\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for film_category\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(film_id) as average,\n    SUM(film_id) as total,\n    MIN(film_id) as minimum,\n    MAX(film_id) as maximum\nFROM film_category;\n\nTables used:\n- film_category: Table containing film_category data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 1000, 'average': 500.5, 'total': 500500, 'minimum': 1, 'maximum': 1000}\n"
  },
  {
    "object_type": "query",
    "id": "query_99",
    "description": "Aggregate statistics for inventory",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(inventory_id) as average,\n    SUM(inventory_id) as total,\n    MIN(inventory_id) as minimum,\n    MAX(inventory_id) as maximum\nFROM inventory;",
    "natural_language_variations": [
      "Aggregate statistics for inventory"
    ],
    "tables_used": [
      "inventory"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for inventory\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for inventory\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(inventory_id) as average,\n    SUM(inventory_id) as total,\n    MIN(inventory_id) as minimum,\n    MAX(inventory_id) as maximum\nFROM inventory;\n\nTables used:\n- inventory: Table containing inventory data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 4581, 'average': 2291.0, 'total': 10495071, 'minimum': 1, 'maximum': 4581}\n"
  },
  {
    "object_type": "query",
    "id": "query_100",
    "description": "Aggregate statistics for payment",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(payment_id) as average,\n    SUM(payment_id) as total,\n    MIN(payment_id) as minimum,\n    MAX(payment_id) as maximum\nFROM payment;",
    "natural_language_variations": [
      "Aggregate statistics for payment"
    ],
    "tables_used": [
      "payment"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for payment\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for payment\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(payment_id) as average,\n    SUM(payment_id) as total,\n    MIN(payment_id) as minimum,\n    MAX(payment_id) as maximum\nFROM payment;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 16049, 'average': 8025.0, 'total': 128793225, 'minimum': 1, 'maximum': 16049}\n"
  },
  {
    "object_type": "query",
    "id": "query_101",
    "description": "Aggregate statistics for rental",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(rental_id) as average,\n    SUM(rental_id) as total,\n    MIN(rental_id) as minimum,\n    MAX(rental_id) as maximum\nFROM rental;",
    "natural_language_variations": [
      "Aggregate statistics for rental"
    ],
    "tables_used": [
      "rental"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for rental\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for rental\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(rental_id) as average,\n    SUM(rental_id) as total,\n    MIN(rental_id) as minimum,\n    MAX(rental_id) as maximum\nFROM rental;\n\nTables used:\n- rental: Records of DVDs rented by customers\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 16044, 'average': 8025.371478434306, 'total': 128759060, 'minimum': 1, 'maximum': 16049}\n"
  },
  {
    "object_type": "query",
    "id": "query_102",
    "description": "Aggregate statistics for staff",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;",
    "natural_language_variations": [
      "Aggregate statistics for staff"
    ],
    "tables_used": [
      "staff"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for staff\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for staff\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(address_id) as average,\n    SUM(address_id) as total,\n    MIN(address_id) as minimum,\n    MAX(address_id) as maximum\nFROM staff;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 2, 'average': 3.5, 'total': 7, 'minimum': 3, 'maximum': 4}\n"
  },
  {
    "object_type": "query",
    "id": "query_103",
    "description": "Aggregate statistics for store",
    "complexity": "medium",
    "sql": "SELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;",
    "natural_language_variations": [
      "Aggregate statistics for store"
    ],
    "tables_used": [
      "store"
    ],
    "columns_used": [],
    "text_representation": "Query: Aggregate statistics for store\n\nComplexity: medium\n\nCan be asked as:\n- Aggregate statistics for store\n\nSQL Query:\nSELECT \n    COUNT(*) as count,\n    AVG(store_id) as average,\n    SUM(store_id) as total,\n    MIN(store_id) as minimum,\n    MAX(store_id) as maximum\nFROM store;\n\nTables used:\n- store: Table containing store data\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'count': 2, 'average': 1.5, 'total': 3, 'minimum': 1, 'maximum': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_104",
    "description": "Complex join across 3 tables: address, city, country",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, city, country"
    ],
    "tables_used": [
      "city",
      "country",
      "address"
    ],
    "columns_used": [
      "t3.country_id",
      "t2.city_id",
      "t1.address",
      "t3.country",
      "t1.address_id",
      "t2.city"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, city, country\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, city, country\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.city_id, t2.city, t3.country_id, t3.country\nFROM address t1\nJOIN city t2 ON t1.city_id = t2.city_id JOIN country t3 ON t2.country_id = t3.country_id\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- country: Table containing country data\n- address: Table containing address data\n\nColumns used:\n- t3.country_id: \n- t2.city_id: \n- t1.address: \n- t3.country: \n- t1.address_id: \n- t2.city: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'city_id': 300, 'city': 'Lethbridge', 'country_id': 20, 'country': 'Canada'}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'city_id': 576, 'city': 'Woodridge', 'country_id': 8, 'country': 'Australia'}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'city_id': 300, 'city': 'Lethbridge', 'country_id': 20, 'country': 'Canada'}\n"
  },
  {
    "object_type": "query",
    "id": "query_105",
    "description": "Complex join across 3 tables: address, customer, store",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, customer, store"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t2.store_id",
      "t3.manager_staff_id",
      "t3.store_id",
      "t1.address_id",
      "t2.customer_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, customer, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, customer, store\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t2.store_id: \n- t3.manager_staff_id: \n- t3.store_id: \n- t1.address_id: \n- t2.customer_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 5, 'address': '1913 Hanoi Way', 'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'address_id': 6, 'address': '1121 Loja Avenue', 'customer_id': 2, 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'address_id': 7, 'address': '692 Joliet Street', 'customer_id': 3, 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_106",
    "description": "Complex join across 3 tables: address, customer, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, customer, payment"
    ],
    "tables_used": [
      "payment",
      "customer",
      "address"
    ],
    "columns_used": [
      "t3.customer_id",
      "t2.store_id",
      "t3.payment_id",
      "t1.address_id",
      "t2.customer_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, customer, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, customer, payment\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t3.customer_id: \n- t2.store_id: \n- t3.payment_id: \n- t1.address_id: \n- t2.customer_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 5, 'address': '1913 Hanoi Way', 'customer_id': 1, 'store_id': 1, 'payment_id': 1}\nRow 2: {'address_id': 5, 'address': '1913 Hanoi Way', 'customer_id': 1, 'store_id': 1, 'payment_id': 2}\nRow 3: {'address_id': 5, 'address': '1913 Hanoi Way', 'customer_id': 1, 'store_id': 1, 'payment_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_107",
    "description": "Complex join across 3 tables: address, customer, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, customer, rental"
    ],
    "tables_used": [
      "rental",
      "customer",
      "address"
    ],
    "columns_used": [
      "t3.rental_date",
      "t2.store_id",
      "t3.rental_id",
      "t1.address_id",
      "t2.customer_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, customer, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, customer, rental\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN customer t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- rental: Records of DVDs rented by customers\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t3.rental_date: \n- t2.store_id: \n- t3.rental_id: \n- t1.address_id: \n- t2.customer_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 134, 'address': '758 Junan Lane', 'customer_id': 130, 'store_id': 1, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'address_id': 464, 'address': '76 Kermanshah Manor', 'customer_id': 459, 'store_id': 1, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'address_id': 413, 'address': '692 Amroha Drive', 'customer_id': 408, 'store_id': 1, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_108",
    "description": "Complex join across 3 tables: address, staff, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, staff, payment"
    ],
    "tables_used": [
      "payment",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.staff_id",
      "t3.customer_id",
      "t2.first_name",
      "t3.payment_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, staff, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, staff, payment\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.staff_id: \n- t3.customer_id: \n- t2.first_name: \n- t3.payment_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_109",
    "description": "Complex join across 3 tables: address, staff, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, staff, rental"
    ],
    "tables_used": [
      "rental",
      "staff",
      "address"
    ],
    "columns_used": [
      "t3.rental_date",
      "t2.staff_id",
      "t3.rental_id",
      "t2.first_name",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, staff, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, staff, rental\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- rental: Records of DVDs rented by customers\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t3.rental_date: \n- t2.staff_id: \n- t3.rental_id: \n- t2.first_name: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_110",
    "description": "Complex join across 3 tables: address, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, staff, store"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.staff_id",
      "t3.manager_staff_id",
      "t2.first_name",
      "t3.store_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, staff, store\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.staff_id: \n- t3.manager_staff_id: \n- t2.first_name: \n- t3.store_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'address_id': 4, 'address': '1411 Lillydale Drive', 'staff_id': 2, 'first_name': 'Jon', 'store_id': 2, 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_111",
    "description": "Complex join across 3 tables: address, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, staff, store"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.staff_id",
      "t3.manager_staff_id",
      "t2.first_name",
      "t3.store_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, staff, store\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM address t1\nJOIN staff t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.staff_id: \n- t3.manager_staff_id: \n- t2.first_name: \n- t3.store_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'address_id': 4, 'address': '1411 Lillydale Drive', 'staff_id': 2, 'first_name': 'Jon', 'store_id': 2, 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_112",
    "description": "Complex join across 3 tables: address, store, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, store, customer"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t3.customer_id",
      "t2.store_id",
      "t3.store_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, store, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, store, customer\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t3.customer_id: \n- t2.store_id: \n- t3.store_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1}\nRow 2: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 2}\nRow 3: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_113",
    "description": "Complex join across 3 tables: address, store, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, store, inventory"
    ],
    "tables_used": [
      "store",
      "inventory",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t2.store_id",
      "t3.inventory_id",
      "t3.film_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, store, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, store, inventory\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t2.store_id: \n- t3.inventory_id: \n- t3.film_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\nRow 2: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 2, 'film_id': 1}\nRow 3: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 3, 'film_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_114",
    "description": "Complex join across 3 tables: address, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, store, staff"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, store, staff\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'store_id': 2, 'manager_staff_id': 2, 'staff_id': 2, 'first_name': 'Jon'}\n"
  },
  {
    "object_type": "query",
    "id": "query_115",
    "description": "Complex join across 3 tables: address, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: address, store, staff"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.address_id",
      "t1.address"
    ],
    "text_representation": "Query: Complex join across 3 tables: address, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: address, store, staff\n\nSQL Query:\nSELECT t1.address_id, t1.address, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM address t1\nJOIN store t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.address_id: \n- t1.address: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'address_id': 2, 'address': '28 MySQL Boulevard', 'store_id': 2, 'manager_staff_id': 2, 'staff_id': 2, 'first_name': 'Jon'}\n"
  },
  {
    "object_type": "query",
    "id": "query_116",
    "description": "Complex join across 3 tables: city, address, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: city, address, customer"
    ],
    "tables_used": [
      "customer",
      "address",
      "city"
    ],
    "columns_used": [
      "t1.city",
      "t1.city_id",
      "t2.address",
      "t3.store_id",
      "t3.customer_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: city, address, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: city, address, customer\n\nSQL Query:\nSELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- t1.city: \n- t1.city_id: \n- t2.address: \n- t3.store_id: \n- t3.customer_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 463, 'city': 'Sasebo', 'address_id': 5, 'address': '1913 Hanoi Way', 'customer_id': 1, 'store_id': 1}\nRow 2: {'city_id': 449, 'city': 'San Bernardino', 'address_id': 6, 'address': '1121 Loja Avenue', 'customer_id': 2, 'store_id': 1}\nRow 3: {'city_id': 38, 'city': 'Athenai', 'address_id': 7, 'address': '692 Joliet Street', 'customer_id': 3, 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_117",
    "description": "Complex join across 3 tables: city, address, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: city, address, staff"
    ],
    "tables_used": [
      "staff",
      "address",
      "city"
    ],
    "columns_used": [
      "t1.city",
      "t3.first_name",
      "t3.staff_id",
      "t1.city_id",
      "t2.address",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: city, address, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: city, address, staff\n\nSQL Query:\nSELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- t1.city: \n- t3.first_name: \n- t3.staff_id: \n- t1.city_id: \n- t2.address: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'city_id': 300, 'city': 'Lethbridge', 'address_id': 3, 'address': '23 Workhaven Lane', 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'city_id': 576, 'city': 'Woodridge', 'address_id': 4, 'address': '1411 Lillydale Drive', 'staff_id': 2, 'first_name': 'Jon'}\n"
  },
  {
    "object_type": "query",
    "id": "query_118",
    "description": "Complex join across 3 tables: city, address, store",
    "complexity": "advanced",
    "sql": "SELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: city, address, store"
    ],
    "tables_used": [
      "store",
      "address",
      "city"
    ],
    "columns_used": [
      "t1.city",
      "t1.city_id",
      "t3.manager_staff_id",
      "t3.store_id",
      "t2.address",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: city, address, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: city, address, store\n\nSQL Query:\nSELECT t1.city_id, t1.city, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM city t1\nJOIN address t2 ON t1.city_id = t2.city_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- t1.city: \n- t1.city_id: \n- t3.manager_staff_id: \n- t3.store_id: \n- t2.address: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'city_id': 300, 'city': 'Lethbridge', 'address_id': 1, 'address': '47 MySakila Drive', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'city_id': 576, 'city': 'Woodridge', 'address_id': 2, 'address': '28 MySQL Boulevard', 'store_id': 2, 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_119",
    "description": "Complex join across 3 tables: country, city, address",
    "complexity": "advanced",
    "sql": "SELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: country, city, address"
    ],
    "tables_used": [
      "country",
      "address",
      "city"
    ],
    "columns_used": [
      "t2.city_id",
      "t3.address",
      "t1.country_id",
      "t1.country",
      "t3.address_id",
      "t2.city"
    ],
    "text_representation": "Query: Complex join across 3 tables: country, city, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: country, city, address\n\nSQL Query:\nSELECT t1.country_id, t1.country, t2.city_id, t2.city, t3.address_id, t3.address\nFROM country t1\nJOIN city t2 ON t1.country_id = t2.country_id JOIN address t3 ON t2.city_id = t3.city_id\nLIMIT 10;\n\nTables used:\n- country: Table containing country data\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- t2.city_id: \n- t3.address: \n- t1.country_id: \n- t1.country: \n- t3.address_id: \n- t2.city: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'country_id': 20, 'country': 'Canada', 'city_id': 300, 'city': 'Lethbridge', 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 2: {'country_id': 8, 'country': 'Australia', 'city_id': 576, 'city': 'Woodridge', 'address_id': 2, 'address': '28 MySQL Boulevard'}\nRow 3: {'country_id': 20, 'country': 'Canada', 'city_id': 300, 'city': 'Lethbridge', 'address_id': 3, 'address': '23 Workhaven Lane'}\n"
  },
  {
    "object_type": "query",
    "id": "query_120",
    "description": "Complex join across 3 tables: customer, address, city",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, address, city"
    ],
    "tables_used": [
      "city",
      "customer",
      "address"
    ],
    "columns_used": [
      "t3.city",
      "t1.store_id",
      "t3.city_id",
      "t1.customer_id",
      "t2.address",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, address, city\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, address, city\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t3.city: \n- t1.store_id: \n- t3.city_id: \n- t1.customer_id: \n- t2.address: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'address_id': 5, 'address': '1913 Hanoi Way', 'city_id': 463, 'city': 'Sasebo'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'address_id': 6, 'address': '1121 Loja Avenue', 'city_id': 449, 'city': 'San Bernardino'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'address_id': 7, 'address': '692 Joliet Street', 'city_id': 38, 'city': 'Athenai'}\n"
  },
  {
    "object_type": "query",
    "id": "query_121",
    "description": "Complex join across 3 tables: customer, address, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, address, staff"
    ],
    "tables_used": [
      "customer",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t3.first_name",
      "t3.staff_id",
      "t1.customer_id",
      "t2.address",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, address, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, address, staff\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t3.first_name: \n- t3.staff_id: \n- t1.customer_id: \n- t2.address: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_122",
    "description": "Complex join across 3 tables: customer, address, store",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, address, store"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t3.manager_staff_id",
      "t1.customer_id",
      "t3.store_id",
      "t2.address",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, address, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, address, store\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM customer t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t3.manager_staff_id: \n- t1.customer_id: \n- t3.store_id: \n- t2.address: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_123",
    "description": "Complex join across 3 tables: customer, store, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, store, inventory"
    ],
    "tables_used": [
      "store",
      "inventory",
      "customer"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.store_id",
      "t2.store_id",
      "t3.inventory_id",
      "t1.customer_id",
      "t3.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, store, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, store, inventory\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t2.manager_staff_id: \n- t1.store_id: \n- t2.store_id: \n- t3.inventory_id: \n- t1.customer_id: \n- t3.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\nRow 2: {'customer_id': 2, 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\nRow 3: {'customer_id': 3, 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_124",
    "description": "Complex join across 3 tables: customer, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, store, staff"
    ],
    "tables_used": [
      "store",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.store_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, store, staff\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.store_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_125",
    "description": "Complex join across 3 tables: customer, store, address",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, store, address"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.store_id",
      "t2.store_id",
      "t3.address",
      "t1.customer_id",
      "t3.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, store, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, store, address\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t1.store_id: \n- t2.store_id: \n- t3.address: \n- t1.customer_id: \n- t3.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\n"
  },
  {
    "object_type": "query",
    "id": "query_126",
    "description": "Complex join across 3 tables: customer, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, store, staff"
    ],
    "tables_used": [
      "store",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.store_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, store, staff\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.store_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_127",
    "description": "Complex join across 3 tables: customer, payment, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, payment, staff"
    ],
    "tables_used": [
      "payment",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t1.store_id",
      "t3.first_name",
      "t2.payment_id",
      "t3.staff_id",
      "t1.customer_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, payment, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, payment, staff\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.store_id: \n- t3.first_name: \n- t2.payment_id: \n- t3.staff_id: \n- t1.customer_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'payment_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'customer_id': 1, 'store_id': 1, 'payment_id': 2, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'customer_id': 1, 'store_id': 1, 'payment_id': 3, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_128",
    "description": "Complex join across 3 tables: customer, payment, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, payment, rental"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.store_id",
      "t2.payment_id",
      "t1.customer_id",
      "t3.rental_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, payment, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, payment, rental\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM customer t1\nJOIN payment t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.store_id: \n- t2.payment_id: \n- t1.customer_id: \n- t3.rental_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'payment_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000'}\nRow 2: {'customer_id': 1, 'store_id': 1, 'payment_id': 2, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000'}\nRow 3: {'customer_id': 1, 'store_id': 1, 'payment_id': 3, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_129",
    "description": "Complex join across 3 tables: customer, rental, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, rental, payment"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.rental_date",
      "t3.customer_id",
      "t1.customer_id",
      "t3.payment_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, rental, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, rental, payment\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.store_id: \n- t2.rental_date: \n- t3.customer_id: \n- t1.customer_id: \n- t3.payment_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'payment_id': 1}\nRow 2: {'customer_id': 1, 'store_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'payment_id': 2}\nRow 3: {'customer_id': 1, 'store_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'payment_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_130",
    "description": "Complex join across 3 tables: customer, rental, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, rental, inventory"
    ],
    "tables_used": [
      "inventory",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.rental_date",
      "t3.inventory_id",
      "t1.customer_id",
      "t3.film_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, rental, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, rental, inventory\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.store_id: \n- t2.rental_date: \n- t3.inventory_id: \n- t1.customer_id: \n- t3.film_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 130, 'store_id': 1, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'film_id': 80}\nRow 2: {'customer_id': 459, 'store_id': 1, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'film_id': 333}\nRow 3: {'customer_id': 408, 'store_id': 1, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'film_id': 373}\n"
  },
  {
    "object_type": "query",
    "id": "query_131",
    "description": "Complex join across 3 tables: customer, rental, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: customer, rental, staff"
    ],
    "tables_used": [
      "customer",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.rental_date",
      "t3.first_name",
      "t3.staff_id",
      "t1.customer_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: customer, rental, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: customer, rental, staff\n\nSQL Query:\nSELECT t1.customer_id, t1.store_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM customer t1\nJOIN rental t2 ON t1.customer_id = t2.customer_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.store_id: \n- t2.rental_date: \n- t3.first_name: \n- t3.staff_id: \n- t1.customer_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 130, 'store_id': 1, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'customer_id': 459, 'store_id': 1, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'customer_id': 408, 'store_id': 1, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_132",
    "description": "Complex join across 3 tables: store, customer, address",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, customer, address"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.store_id",
      "t3.address",
      "t3.address_id",
      "t2.customer_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, customer, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, customer, address\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t2.store_id: \n- t3.address: \n- t3.address_id: \n- t2.customer_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1, 'address_id': 5, 'address': '1913 Hanoi Way'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 2, 'address_id': 6, 'address': '1121 Loja Avenue'}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 3, 'address_id': 7, 'address': '692 Joliet Street'}\n"
  },
  {
    "object_type": "query",
    "id": "query_133",
    "description": "Complex join across 3 tables: store, customer, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, customer, payment"
    ],
    "tables_used": [
      "store",
      "payment",
      "customer"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.store_id",
      "t3.payment_id",
      "t3.customer_id",
      "t2.customer_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, customer, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, customer, payment\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t1.store_id: \n- t2.store_id: \n- t3.payment_id: \n- t3.customer_id: \n- t2.customer_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1, 'payment_id': 1}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1, 'payment_id': 2}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1, 'payment_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_134",
    "description": "Complex join across 3 tables: store, customer, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, customer, rental"
    ],
    "tables_used": [
      "store",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.store_id",
      "t2.store_id",
      "t3.rental_id",
      "t2.customer_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, customer, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, customer, rental\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN customer t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.store_id: \n- t2.store_id: \n- t3.rental_id: \n- t2.customer_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 130, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 459, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'customer_id': 408, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_135",
    "description": "Complex join across 3 tables: store, inventory, film",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, inventory, film"
    ],
    "tables_used": [
      "store",
      "inventory",
      "film"
    ],
    "columns_used": [
      "t2.inventory_id",
      "t1.store_id",
      "t3.title",
      "t3.film_id",
      "t1.manager_staff_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, inventory, film\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, inventory, film\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- t2.inventory_id: \n- t1.store_id: \n- t3.title: \n- t3.film_id: \n- t1.manager_staff_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 2, 'film_id': 1, 'title': 'ACADEMY DINOSAUR'}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 3, 'film_id': 1, 'title': 'ACADEMY DINOSAUR'}\n"
  },
  {
    "object_type": "query",
    "id": "query_136",
    "description": "Complex join across 3 tables: store, inventory, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, inventory, rental"
    ],
    "tables_used": [
      "store",
      "inventory",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t2.inventory_id",
      "t1.store_id",
      "t3.rental_id",
      "t1.manager_staff_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, inventory, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, inventory, rental\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN inventory t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t2.inventory_id: \n- t1.store_id: \n- t3.rental_id: \n- t1.manager_staff_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 367, 'film_id': 80, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'inventory_id': 1525, 'film_id': 333, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'store_id': 2, 'manager_staff_id': 2, 'inventory_id': 1711, 'film_id': 373, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_137",
    "description": "Complex join across 3 tables: store, staff, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, payment"
    ],
    "tables_used": [
      "store",
      "payment",
      "staff"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.staff_id",
      "t2.first_name",
      "t3.payment_id",
      "t3.customer_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, payment\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.store_id: \n- t2.staff_id: \n- t2.first_name: \n- t3.payment_id: \n- t3.customer_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_138",
    "description": "Complex join across 3 tables: store, staff, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, rental"
    ],
    "tables_used": [
      "store",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.store_id",
      "t2.staff_id",
      "t3.rental_id",
      "t2.first_name",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, rental\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.store_id: \n- t2.staff_id: \n- t3.rental_id: \n- t2.first_name: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_139",
    "description": "Complex join across 3 tables: store, staff, address",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, address"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.staff_id",
      "t3.address",
      "t2.first_name",
      "t3.address_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, address\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t2.staff_id: \n- t3.address: \n- t2.first_name: \n- t3.address_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'staff_id': 2, 'first_name': 'Jon', 'address_id': 4, 'address': '1411 Lillydale Drive'}\n"
  },
  {
    "object_type": "query",
    "id": "query_140",
    "description": "Complex join across 3 tables: store, address, city",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, address, city"
    ],
    "tables_used": [
      "city",
      "store",
      "address"
    ],
    "columns_used": [
      "t3.city",
      "t1.store_id",
      "t3.city_id",
      "t2.address",
      "t1.manager_staff_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, address, city\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, address, city\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.city_id, t3.city\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- store: Table containing store data\n- address: Table containing address data\n\nColumns used:\n- t3.city: \n- t1.store_id: \n- t3.city_id: \n- t2.address: \n- t1.manager_staff_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive', 'city_id': 300, 'city': 'Lethbridge'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'address': '28 MySQL Boulevard', 'city_id': 576, 'city': 'Woodridge'}\n"
  },
  {
    "object_type": "query",
    "id": "query_141",
    "description": "Complex join across 3 tables: store, address, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, address, customer"
    ],
    "tables_used": [
      "store",
      "customer",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.address",
      "t3.store_id",
      "t3.customer_id",
      "t1.manager_staff_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, address, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, address, customer\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t2.address: \n- t3.store_id: \n- t3.customer_id: \n- t1.manager_staff_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_142",
    "description": "Complex join across 3 tables: store, address, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, address, staff"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.address",
      "t1.manager_staff_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, address, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, address, staff\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.address_id, t2.address, t3.staff_id, t3.first_name\nFROM store t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN staff t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.address: \n- t1.manager_staff_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_143",
    "description": "Complex join across 3 tables: store, staff, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, payment"
    ],
    "tables_used": [
      "store",
      "payment",
      "staff"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.staff_id",
      "t2.first_name",
      "t3.payment_id",
      "t3.customer_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, payment\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.store_id: \n- t2.staff_id: \n- t2.first_name: \n- t3.payment_id: \n- t3.customer_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_144",
    "description": "Complex join across 3 tables: store, staff, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, rental"
    ],
    "tables_used": [
      "store",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.store_id",
      "t2.staff_id",
      "t3.rental_id",
      "t2.first_name",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, rental\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.store_id: \n- t2.staff_id: \n- t3.rental_id: \n- t2.first_name: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_145",
    "description": "Complex join across 3 tables: store, staff, address",
    "complexity": "advanced",
    "sql": "SELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: store, staff, address"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.store_id",
      "t2.staff_id",
      "t3.address",
      "t2.first_name",
      "t3.address_id",
      "t1.manager_staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: store, staff, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: store, staff, address\n\nSQL Query:\nSELECT t1.store_id, t1.manager_staff_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM store t1\nJOIN staff t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.store_id: \n- t2.staff_id: \n- t3.address: \n- t2.first_name: \n- t3.address_id: \n- t1.manager_staff_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'staff_id': 2, 'first_name': 'Jon', 'address_id': 4, 'address': '1411 Lillydale Drive'}\n"
  },
  {
    "object_type": "query",
    "id": "query_146",
    "description": "Complex join across 3 tables: film, film_actor, actor",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film, film_actor, actor"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "actor"
    ],
    "columns_used": [
      "t1.film_id",
      "t3.first_name",
      "t3.actor_id",
      "t1.title",
      "t2.actor_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film, film_actor, actor\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film, film_actor, actor\n\nSQL Query:\nSELECT t1.film_id, t1.title, t2.actor_id, t2.film_id, t3.actor_id, t3.first_name\nFROM film t1\nJOIN film_actor t2 ON t1.film_id = t2.film_id JOIN actor t3 ON t2.actor_id = t3.actor_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- actor: Performers who appear in films\n\nColumns used:\n- t1.film_id: \n- t3.first_name: \n- t3.actor_id: \n- t1.title: \n- t2.actor_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'actor_id': 1, 'first_name': 'PENELOPE'}\nRow 2: {'film_id': 23, 'title': 'ANACONDA CONFESSIONS', 'actor_id': 1, 'first_name': 'PENELOPE'}\nRow 3: {'film_id': 25, 'title': 'ANGELS LIFE', 'actor_id': 1, 'first_name': 'PENELOPE'}\n"
  },
  {
    "object_type": "query",
    "id": "query_147",
    "description": "Complex join across 3 tables: film, film_category, category",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film, film_category, category"
    ],
    "tables_used": [
      "film",
      "film_category",
      "category"
    ],
    "columns_used": [
      "t1.film_id",
      "t3.name",
      "t2.category_id",
      "t1.title",
      "t3.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film, film_category, category\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film, film_category, category\n\nSQL Query:\nSELECT t1.film_id, t1.title, t2.film_id, t2.category_id, t3.category_id, t3.name\nFROM film t1\nJOIN film_category t2 ON t1.film_id = t2.film_id JOIN category t3 ON t2.category_id = t3.category_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nColumns used:\n- t1.film_id: \n- t3.name: \n- t2.category_id: \n- t1.title: \n- t3.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'category_id': 6, 'name': 'Documentary'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'category_id': 11, 'name': 'Horror'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'category_id': 6, 'name': 'Documentary'}\n"
  },
  {
    "object_type": "query",
    "id": "query_148",
    "description": "Complex join across 3 tables: film, inventory, store",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film, inventory, store"
    ],
    "tables_used": [
      "film",
      "inventory",
      "store"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.inventory_id",
      "t3.manager_staff_id",
      "t3.store_id",
      "t1.title",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film, inventory, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film, inventory, store\n\nSQL Query:\nSELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- store: Table containing store data\n\nColumns used:\n- t1.film_id: \n- t2.inventory_id: \n- t3.manager_staff_id: \n- t3.store_id: \n- t1.title: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 1, 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 2, 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 3, 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_149",
    "description": "Complex join across 3 tables: film, inventory, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film, inventory, rental"
    ],
    "tables_used": [
      "film",
      "inventory",
      "rental"
    ],
    "columns_used": [
      "t1.film_id",
      "t3.rental_date",
      "t2.inventory_id",
      "t3.rental_id",
      "t1.title",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film, inventory, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film, inventory, rental\n\nSQL Query:\nSELECT t1.film_id, t1.title, t2.inventory_id, t2.film_id, t3.rental_id, t3.rental_date\nFROM film t1\nJOIN inventory t2 ON t1.film_id = t2.film_id JOIN rental t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.film_id: \n- t3.rental_date: \n- t2.inventory_id: \n- t3.rental_id: \n- t1.title: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 80, 'title': 'BLANKET BEVERLY', 'inventory_id': 367, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'film_id': 333, 'title': 'FREAKY POCUS', 'inventory_id': 1525, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'film_id': 373, 'title': 'GRADUATE LORD', 'inventory_id': 1711, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_150",
    "description": "Complex join across 3 tables: language, film, film_actor",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, film_actor"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "language"
    ],
    "columns_used": [
      "t2.title",
      "t3.film_id",
      "t3.actor_id",
      "t1.language_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, film_actor\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t2.title: \n- t3.film_id: \n- t3.actor_id: \n- t1.language_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_151",
    "description": "Complex join across 3 tables: language, film, film_category",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, film_category"
    ],
    "tables_used": [
      "film",
      "language",
      "film_category"
    ],
    "columns_used": [
      "t2.title",
      "t3.film_id",
      "t1.language_id",
      "t3.category_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, film_category\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, film_category\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n- film_category: Table containing film_category data\n\nColumns used:\n- t2.title: \n- t3.film_id: \n- t1.language_id: \n- t3.category_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_152",
    "description": "Complex join across 3 tables: language, film, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, inventory"
    ],
    "tables_used": [
      "film",
      "inventory",
      "language"
    ],
    "columns_used": [
      "t2.title",
      "t3.inventory_id",
      "t3.film_id",
      "t1.language_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, inventory\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- language: Table containing language data\n\nColumns used:\n- t2.title: \n- t3.inventory_id: \n- t3.film_id: \n- t1.language_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_153",
    "description": "Complex join across 3 tables: language, film, film_actor",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, film_actor"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "language"
    ],
    "columns_used": [
      "t2.title",
      "t3.film_id",
      "t3.actor_id",
      "t1.language_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, film_actor\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t2.title: \n- t3.film_id: \n- t3.actor_id: \n- t1.language_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_154",
    "description": "Complex join across 3 tables: language, film, film_category",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, film_category"
    ],
    "tables_used": [
      "film",
      "language",
      "film_category"
    ],
    "columns_used": [
      "t2.title",
      "t3.film_id",
      "t1.language_id",
      "t3.category_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, film_category\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, film_category\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n- film_category: Table containing film_category data\n\nColumns used:\n- t2.title: \n- t3.film_id: \n- t1.language_id: \n- t3.category_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_155",
    "description": "Complex join across 3 tables: language, film, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: language, film, inventory"
    ],
    "tables_used": [
      "film",
      "inventory",
      "language"
    ],
    "columns_used": [
      "t2.title",
      "t3.inventory_id",
      "t3.film_id",
      "t1.language_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: language, film, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: language, film, inventory\n\nSQL Query:\nSELECT t1.language_id, t1.name, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM language t1\nJOIN film t2 ON t1.language_id = t2.original_language_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- language: Table containing language data\n\nColumns used:\n- t2.title: \n- t3.inventory_id: \n- t3.film_id: \n- t1.language_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_156",
    "description": "Complex join across 3 tables: film_actor, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_actor, film, language"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t1.actor_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_actor, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_actor, film, language\n\nSQL Query:\nSELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t1.actor_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_157",
    "description": "Complex join across 3 tables: film_actor, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_actor, film, language"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t1.actor_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_actor, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_actor, film, language\n\nSQL Query:\nSELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t1.actor_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_158",
    "description": "Complex join across 3 tables: film_actor, film, film_category",
    "complexity": "advanced",
    "sql": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_actor, film, film_category"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "film_category"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.film_id",
      "t1.actor_id",
      "t3.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_actor, film, film_category\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_actor, film, film_category\n\nSQL Query:\nSELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- film_category: Table containing film_category data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.film_id: \n- t1.actor_id: \n- t3.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'category_id': 6}\nRow 2: {'actor_id': 1, 'film_id': 23, 'title': 'ANACONDA CONFESSIONS', 'category_id': 2}\nRow 3: {'actor_id': 1, 'film_id': 25, 'title': 'ANGELS LIFE', 'category_id': 13}\n"
  },
  {
    "object_type": "query",
    "id": "query_159",
    "description": "Complex join across 3 tables: film_actor, film, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_actor, film, inventory"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "inventory"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.inventory_id",
      "t3.film_id",
      "t1.actor_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_actor, film, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_actor, film, inventory\n\nSQL Query:\nSELECT t1.actor_id, t1.film_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_actor t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.inventory_id: \n- t3.film_id: \n- t1.actor_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 1}\nRow 2: {'actor_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 2}\nRow 3: {'actor_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_160",
    "description": "Complex join across 3 tables: actor, film_actor, film",
    "complexity": "advanced",
    "sql": "SELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: actor, film_actor, film"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "actor"
    ],
    "columns_used": [
      "t1.first_name",
      "t3.title",
      "t3.film_id",
      "t1.actor_id",
      "t2.actor_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: actor, film_actor, film\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: actor, film_actor, film\n\nSQL Query:\nSELECT t1.actor_id, t1.first_name, t2.actor_id, t2.film_id, t3.film_id, t3.title\nFROM actor t1\nJOIN film_actor t2 ON t1.actor_id = t2.actor_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- actor: Performers who appear in films\n\nColumns used:\n- t1.first_name: \n- t3.title: \n- t3.film_id: \n- t1.actor_id: \n- t2.actor_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE', 'film_id': 1, 'title': 'ACADEMY DINOSAUR'}\nRow 2: {'actor_id': 1, 'first_name': 'PENELOPE', 'film_id': 23, 'title': 'ANACONDA CONFESSIONS'}\nRow 3: {'actor_id': 1, 'first_name': 'PENELOPE', 'film_id': 25, 'title': 'ANGELS LIFE'}\n"
  },
  {
    "object_type": "query",
    "id": "query_161",
    "description": "Complex join across 3 tables: film_category, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_category, film, language"
    ],
    "tables_used": [
      "film_category",
      "film",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t1.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_category, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_category, film, language\n\nSQL Query:\nSELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t1.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_162",
    "description": "Complex join across 3 tables: film_category, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_category, film, language"
    ],
    "tables_used": [
      "film_category",
      "film",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t1.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_category, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_category, film, language\n\nSQL Query:\nSELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t1.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_163",
    "description": "Complex join across 3 tables: film_category, film, film_actor",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_category, film, film_actor"
    ],
    "tables_used": [
      "film_actor",
      "film_category",
      "film"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.film_id",
      "t3.actor_id",
      "t1.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_category, film, film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_category, film, film_actor\n\nSQL Query:\nSELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.film_id: \n- t3.actor_id: \n- t1.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'title': 'ACADEMY DINOSAUR', 'actor_id': 1}\nRow 2: {'film_id': 23, 'category_id': 2, 'title': 'ANACONDA CONFESSIONS', 'actor_id': 1}\nRow 3: {'film_id': 25, 'category_id': 13, 'title': 'ANGELS LIFE', 'actor_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_164",
    "description": "Complex join across 3 tables: film_category, film, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: film_category, film, inventory"
    ],
    "tables_used": [
      "film_category",
      "film",
      "inventory"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.inventory_id",
      "t3.film_id",
      "t1.category_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: film_category, film, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: film_category, film, inventory\n\nSQL Query:\nSELECT t1.film_id, t1.category_id, t2.film_id, t2.title, t3.inventory_id, t3.film_id\nFROM film_category t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN inventory t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.inventory_id: \n- t3.film_id: \n- t1.category_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'category_id': 6, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 1}\nRow 2: {'film_id': 1, 'category_id': 6, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 2}\nRow 3: {'film_id': 1, 'category_id': 6, 'title': 'ACADEMY DINOSAUR', 'inventory_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_165",
    "description": "Complex join across 3 tables: category, film_category, film",
    "complexity": "advanced",
    "sql": "SELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: category, film_category, film"
    ],
    "tables_used": [
      "film_category",
      "film",
      "category"
    ],
    "columns_used": [
      "t3.title",
      "t3.film_id",
      "t2.category_id",
      "t1.category_id",
      "t2.film_id",
      "t1.name"
    ],
    "text_representation": "Query: Complex join across 3 tables: category, film_category, film\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: category, film_category, film\n\nSQL Query:\nSELECT t1.category_id, t1.name, t2.film_id, t2.category_id, t3.film_id, t3.title\nFROM category t1\nJOIN film_category t2 ON t1.category_id = t2.category_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- film: Movies available for rental in DVD format\n- category: Table containing category data\n\nColumns used:\n- t3.title: \n- t3.film_id: \n- t2.category_id: \n- t1.category_id: \n- t2.film_id: \n- t1.name: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'category_id': 6, 'name': 'Documentary', 'film_id': 1, 'title': 'ACADEMY DINOSAUR'}\nRow 2: {'category_id': 11, 'name': 'Horror', 'film_id': 2, 'title': 'ACE GOLDFINGER'}\nRow 3: {'category_id': 6, 'name': 'Documentary', 'film_id': 3, 'title': 'ADAPTATION HOLES'}\n"
  },
  {
    "object_type": "query",
    "id": "query_166",
    "description": "Complex join across 3 tables: inventory, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, film, language"
    ],
    "tables_used": [
      "film",
      "inventory",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t2.film_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, film, language\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t2.film_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_167",
    "description": "Complex join across 3 tables: inventory, film, language",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, film, language"
    ],
    "tables_used": [
      "film",
      "inventory",
      "language"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.language_id",
      "t3.name",
      "t2.film_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, film, language\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, film, language\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.language_id, t3.name\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN language t3 ON t2.original_language_id = t3.language_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- language: Table containing language data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.language_id: \n- t3.name: \n- t2.film_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_168",
    "description": "Complex join across 3 tables: inventory, film, film_actor",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, film, film_actor"
    ],
    "tables_used": [
      "film_actor",
      "film",
      "inventory"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.film_id",
      "t3.actor_id",
      "t2.film_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, film, film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, film, film_actor\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.actor_id, t3.film_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_actor t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.film_id: \n- t3.actor_id: \n- t2.film_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'actor_id': 1}\nRow 2: {'inventory_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'actor_id': 10}\nRow 3: {'inventory_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'actor_id': 20}\n"
  },
  {
    "object_type": "query",
    "id": "query_169",
    "description": "Complex join across 3 tables: inventory, film, film_category",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, film, film_category"
    ],
    "tables_used": [
      "film",
      "inventory",
      "film_category"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.title",
      "t3.film_id",
      "t3.category_id",
      "t2.film_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, film, film_category\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, film, film_category\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.film_id, t2.title, t3.film_id, t3.category_id\nFROM inventory t1\nJOIN film t2 ON t1.film_id = t2.film_id JOIN film_category t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- film_category: Table containing film_category data\n\nColumns used:\n- t1.film_id: \n- t2.title: \n- t3.film_id: \n- t3.category_id: \n- t2.film_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'category_id': 6}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'category_id': 6}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'category_id': 6}\n"
  },
  {
    "object_type": "query",
    "id": "query_170",
    "description": "Complex join across 3 tables: inventory, store, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, store, customer"
    ],
    "tables_used": [
      "store",
      "inventory",
      "customer"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.manager_staff_id",
      "t2.store_id",
      "t3.store_id",
      "t3.customer_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, store, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, store, customer\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t1.film_id: \n- t2.manager_staff_id: \n- t2.store_id: \n- t3.store_id: \n- t3.customer_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1}\nRow 2: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 2}\nRow 3: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_171",
    "description": "Complex join across 3 tables: inventory, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, store, staff"
    ],
    "tables_used": [
      "store",
      "inventory",
      "staff"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.manager_staff_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, store, staff\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.film_id: \n- t2.manager_staff_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_172",
    "description": "Complex join across 3 tables: inventory, store, address",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, store, address"
    ],
    "tables_used": [
      "store",
      "inventory",
      "address"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.manager_staff_id",
      "t2.store_id",
      "t3.address",
      "t3.address_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, store, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, store, address\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- address: Table containing address data\n\nColumns used:\n- t1.film_id: \n- t2.manager_staff_id: \n- t2.store_id: \n- t3.address: \n- t3.address_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\n"
  },
  {
    "object_type": "query",
    "id": "query_173",
    "description": "Complex join across 3 tables: inventory, store, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, store, staff"
    ],
    "tables_used": [
      "store",
      "inventory",
      "staff"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.manager_staff_id",
      "t3.first_name",
      "t3.staff_id",
      "t2.store_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, store, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, store, staff\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.store_id, t2.manager_staff_id, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN staff t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.film_id: \n- t2.manager_staff_id: \n- t3.first_name: \n- t3.staff_id: \n- t2.store_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'manager_staff_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_174",
    "description": "Complex join across 3 tables: inventory, rental, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, rental, payment"
    ],
    "tables_used": [
      "inventory",
      "payment",
      "rental"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.rental_date",
      "t3.customer_id",
      "t3.payment_id",
      "t2.rental_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, rental, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, rental, payment\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.film_id: \n- t2.rental_date: \n- t3.customer_id: \n- t3.payment_id: \n- t2.rental_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 3021, 'film_id': 663, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'inventory_id': 4020, 'film_id': 875, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'inventory_id': 2785, 'film_id': 611, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_175",
    "description": "Complex join across 3 tables: inventory, rental, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, rental, customer"
    ],
    "tables_used": [
      "inventory",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.rental_date",
      "t3.customer_id",
      "t3.store_id",
      "t2.rental_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, rental, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, rental, customer\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.film_id: \n- t2.rental_date: \n- t3.customer_id: \n- t3.store_id: \n- t2.rental_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 367, 'film_id': 80, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1}\nRow 2: {'inventory_id': 1525, 'film_id': 333, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'customer_id': 459, 'store_id': 1}\nRow 3: {'inventory_id': 1711, 'film_id': 373, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'customer_id': 408, 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_176",
    "description": "Complex join across 3 tables: inventory, rental, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: inventory, rental, staff"
    ],
    "tables_used": [
      "inventory",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.film_id",
      "t2.rental_date",
      "t3.first_name",
      "t3.staff_id",
      "t2.rental_id",
      "t1.inventory_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: inventory, rental, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: inventory, rental, staff\n\nSQL Query:\nSELECT t1.inventory_id, t1.film_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM inventory t1\nJOIN rental t2 ON t1.inventory_id = t2.inventory_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.film_id: \n- t2.rental_date: \n- t3.first_name: \n- t3.staff_id: \n- t2.rental_id: \n- t1.inventory_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 367, 'film_id': 80, 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'inventory_id': 1525, 'film_id': 333, 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'inventory_id': 1711, 'film_id': 373, 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_177",
    "description": "Complex join across 3 tables: payment, staff, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, staff, rental"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.payment_id",
      "t2.staff_id",
      "t1.customer_id",
      "t3.rental_id",
      "t2.first_name"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, staff, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, staff, rental\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.payment_id: \n- t2.staff_id: \n- t1.customer_id: \n- t3.rental_id: \n- t2.first_name: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000'}\nRow 2: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000'}\nRow 3: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_178",
    "description": "Complex join across 3 tables: payment, staff, address",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, staff, address"
    ],
    "tables_used": [
      "payment",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.staff_id",
      "t3.address",
      "t1.customer_id",
      "t2.first_name",
      "t3.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, staff, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, staff, address\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.payment_id: \n- t2.staff_id: \n- t3.address: \n- t1.customer_id: \n- t2.first_name: \n- t3.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\n"
  },
  {
    "object_type": "query",
    "id": "query_179",
    "description": "Complex join across 3 tables: payment, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, staff, store"
    ],
    "tables_used": [
      "store",
      "payment",
      "staff"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.staff_id",
      "t3.manager_staff_id",
      "t1.customer_id",
      "t2.first_name",
      "t3.store_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, staff, store\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.payment_id: \n- t2.staff_id: \n- t3.manager_staff_id: \n- t1.customer_id: \n- t2.first_name: \n- t3.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_180",
    "description": "Complex join across 3 tables: payment, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, staff, store"
    ],
    "tables_used": [
      "store",
      "payment",
      "staff"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.staff_id",
      "t3.manager_staff_id",
      "t1.customer_id",
      "t2.first_name",
      "t3.store_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, staff, store\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.payment_id: \n- t2.staff_id: \n- t3.manager_staff_id: \n- t1.customer_id: \n- t2.first_name: \n- t3.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_181",
    "description": "Complex join across 3 tables: payment, customer, address",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, customer, address"
    ],
    "tables_used": [
      "payment",
      "customer",
      "address"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.store_id",
      "t3.address",
      "t1.customer_id",
      "t3.address_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, customer, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, customer, address\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- t1.payment_id: \n- t2.store_id: \n- t3.address: \n- t1.customer_id: \n- t3.address_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'store_id': 1, 'address_id': 5, 'address': '1913 Hanoi Way'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'store_id': 1, 'address_id': 5, 'address': '1913 Hanoi Way'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'store_id': 1, 'address_id': 5, 'address': '1913 Hanoi Way'}\n"
  },
  {
    "object_type": "query",
    "id": "query_182",
    "description": "Complex join across 3 tables: payment, customer, store",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, customer, store"
    ],
    "tables_used": [
      "store",
      "payment",
      "customer"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.store_id",
      "t3.manager_staff_id",
      "t1.customer_id",
      "t3.store_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, customer, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, customer, store\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- t1.payment_id: \n- t2.store_id: \n- t3.manager_staff_id: \n- t1.customer_id: \n- t3.store_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_183",
    "description": "Complex join across 3 tables: payment, customer, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, customer, rental"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.payment_id",
      "t2.store_id",
      "t1.customer_id",
      "t3.rental_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, customer, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, customer, rental\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.customer_id, t2.store_id, t3.rental_id, t3.rental_date\nFROM payment t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN rental t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.payment_id: \n- t2.store_id: \n- t1.customer_id: \n- t3.rental_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'store_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000'}\nRow 2: {'payment_id': 1, 'customer_id': 1, 'store_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000'}\nRow 3: {'payment_id': 1, 'customer_id': 1, 'store_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_184",
    "description": "Complex join across 3 tables: payment, rental, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, rental, customer"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.rental_date",
      "t3.customer_id",
      "t1.customer_id",
      "t3.store_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, rental, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, rental, customer\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.payment_id: \n- t2.rental_date: \n- t3.customer_id: \n- t1.customer_id: \n- t3.store_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'store_id': 1}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'store_id': 1}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_185",
    "description": "Complex join across 3 tables: payment, rental, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, rental, inventory"
    ],
    "tables_used": [
      "inventory",
      "payment",
      "rental"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.rental_date",
      "t3.inventory_id",
      "t1.customer_id",
      "t3.film_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, rental, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, rental, inventory\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.payment_id: \n- t2.rental_date: \n- t3.inventory_id: \n- t1.customer_id: \n- t3.film_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'inventory_id': 3021, 'film_id': 663}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'inventory_id': 4020, 'film_id': 875}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'inventory_id': 2785, 'film_id': 611}\n"
  },
  {
    "object_type": "query",
    "id": "query_186",
    "description": "Complex join across 3 tables: payment, rental, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: payment, rental, staff"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.payment_id",
      "t2.rental_date",
      "t3.first_name",
      "t3.staff_id",
      "t1.customer_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: payment, rental, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: payment, rental, staff\n\nSQL Query:\nSELECT t1.payment_id, t1.customer_id, t2.rental_id, t2.rental_date, t3.staff_id, t3.first_name\nFROM payment t1\nJOIN rental t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.payment_id: \n- t2.rental_date: \n- t3.first_name: \n- t3.staff_id: \n- t1.customer_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'payment_id': 1, 'customer_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'staff_id': 2, 'first_name': 'Jon'}\nRow 2: {'payment_id': 2, 'customer_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'payment_id': 3, 'customer_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'staff_id': 2, 'first_name': 'Jon'}\n"
  },
  {
    "object_type": "query",
    "id": "query_187",
    "description": "Complex join across 3 tables: staff, payment, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, payment, customer"
    ],
    "tables_used": [
      "payment",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t1.first_name",
      "t2.payment_id",
      "t3.store_id",
      "t1.staff_id",
      "t3.customer_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, payment, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, payment, customer\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t1.first_name: \n- t2.payment_id: \n- t3.store_id: \n- t1.staff_id: \n- t3.customer_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1, 'store_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1, 'store_id': 1}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1, 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_188",
    "description": "Complex join across 3 tables: staff, payment, rental",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, payment, rental"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t3.rental_date",
      "t1.first_name",
      "t2.payment_id",
      "t3.rental_id",
      "t1.staff_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, payment, rental\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, payment, rental\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.payment_id, t2.customer_id, t3.rental_id, t3.rental_date\nFROM staff t1\nJOIN payment t2 ON t1.staff_id = t2.staff_id JOIN rental t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.rental_date: \n- t1.first_name: \n- t2.payment_id: \n- t3.rental_id: \n- t1.staff_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1, 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000'}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1, 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000'}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1, 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000'}\n"
  },
  {
    "object_type": "query",
    "id": "query_189",
    "description": "Complex join across 3 tables: staff, rental, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, rental, payment"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.first_name",
      "t2.rental_date",
      "t3.customer_id",
      "t3.payment_id",
      "t1.staff_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, rental, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, rental, payment\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.payment_id, t3.customer_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.rental_id = t3.rental_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.first_name: \n- t2.rental_date: \n- t3.customer_id: \n- t3.payment_id: \n- t1.staff_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 2, 'first_name': 'Jon', 'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'staff_id': 2, 'first_name': 'Jon', 'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_190",
    "description": "Complex join across 3 tables: staff, rental, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, rental, customer"
    ],
    "tables_used": [
      "customer",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.first_name",
      "t2.rental_date",
      "t3.customer_id",
      "t3.store_id",
      "t1.staff_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, rental, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, rental, customer\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.first_name: \n- t2.rental_date: \n- t3.customer_id: \n- t3.store_id: \n- t1.staff_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'customer_id': 459, 'store_id': 1}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'customer_id': 408, 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_191",
    "description": "Complex join across 3 tables: staff, rental, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, rental, inventory"
    ],
    "tables_used": [
      "inventory",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.first_name",
      "t2.rental_date",
      "t3.inventory_id",
      "t3.film_id",
      "t1.staff_id",
      "t2.rental_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, rental, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, rental, inventory\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.rental_id, t2.rental_date, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN rental t2 ON t1.staff_id = t2.staff_id JOIN inventory t3 ON t2.inventory_id = t3.inventory_id\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.first_name: \n- t2.rental_date: \n- t3.inventory_id: \n- t3.film_id: \n- t1.staff_id: \n- t2.rental_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'film_id': 80}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'film_id': 333}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'film_id': 373}\n"
  },
  {
    "object_type": "query",
    "id": "query_192",
    "description": "Complex join across 3 tables: staff, address, city",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, address, city"
    ],
    "tables_used": [
      "city",
      "staff",
      "address"
    ],
    "columns_used": [
      "t3.city",
      "t1.first_name",
      "t3.city_id",
      "t2.address",
      "t1.staff_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, address, city\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, address, city\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.city_id, t3.city\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN city t3 ON t2.city_id = t3.city_id\nLIMIT 10;\n\nTables used:\n- city: Table containing city data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t3.city: \n- t1.first_name: \n- t3.city_id: \n- t2.address: \n- t1.staff_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane', 'city_id': 300, 'city': 'Lethbridge'}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'address_id': 4, 'address': '1411 Lillydale Drive', 'city_id': 576, 'city': 'Woodridge'}\n"
  },
  {
    "object_type": "query",
    "id": "query_193",
    "description": "Complex join across 3 tables: staff, address, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, address, customer"
    ],
    "tables_used": [
      "customer",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.first_name",
      "t2.address",
      "t3.store_id",
      "t1.staff_id",
      "t3.customer_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, address, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, address, customer\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN customer t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.first_name: \n- t2.address: \n- t3.store_id: \n- t1.staff_id: \n- t3.customer_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_194",
    "description": "Complex join across 3 tables: staff, address, store",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, address, store"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t1.first_name",
      "t3.manager_staff_id",
      "t3.store_id",
      "t2.address",
      "t1.staff_id",
      "t2.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, address, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, address, store\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.address_id, t2.address, t3.store_id, t3.manager_staff_id\nFROM staff t1\nJOIN address t2 ON t1.address_id = t2.address_id JOIN store t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t1.first_name: \n- t3.manager_staff_id: \n- t3.store_id: \n- t2.address: \n- t1.staff_id: \n- t2.address_id: \n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_195",
    "description": "Complex join across 3 tables: staff, store, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, customer"
    ],
    "tables_used": [
      "store",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.store_id",
      "t1.staff_id",
      "t3.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, customer\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.store_id: \n- t1.staff_id: \n- t3.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 2}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_196",
    "description": "Complex join across 3 tables: staff, store, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, inventory"
    ],
    "tables_used": [
      "store",
      "inventory",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.inventory_id",
      "t3.film_id",
      "t1.staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, inventory\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.inventory_id: \n- t3.film_id: \n- t1.staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 2, 'film_id': 1}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 3, 'film_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_197",
    "description": "Complex join across 3 tables: staff, store, address",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, address"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.address",
      "t1.staff_id",
      "t3.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, address\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.address: \n- t1.staff_id: \n- t3.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'address': '28 MySQL Boulevard'}\n"
  },
  {
    "object_type": "query",
    "id": "query_198",
    "description": "Complex join across 3 tables: staff, store, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, customer"
    ],
    "tables_used": [
      "store",
      "customer",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.store_id",
      "t1.staff_id",
      "t3.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, customer\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.customer_id, t3.store_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN customer t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.store_id: \n- t1.staff_id: \n- t3.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 2}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'customer_id': 3}\n"
  },
  {
    "object_type": "query",
    "id": "query_199",
    "description": "Complex join across 3 tables: staff, store, inventory",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, inventory"
    ],
    "tables_used": [
      "store",
      "inventory",
      "staff"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.inventory_id",
      "t3.film_id",
      "t1.staff_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, inventory\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.inventory_id, t3.film_id\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN inventory t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.inventory_id: \n- t3.film_id: \n- t1.staff_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 1, 'film_id': 1}\nRow 2: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 2, 'film_id': 1}\nRow 3: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'inventory_id': 3, 'film_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_200",
    "description": "Complex join across 3 tables: staff, store, address",
    "complexity": "advanced",
    "sql": "SELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: staff, store, address"
    ],
    "tables_used": [
      "store",
      "staff",
      "address"
    ],
    "columns_used": [
      "t2.manager_staff_id",
      "t1.first_name",
      "t2.store_id",
      "t3.address",
      "t1.staff_id",
      "t3.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: staff, store, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: staff, store, address\n\nSQL Query:\nSELECT t1.staff_id, t1.first_name, t2.store_id, t2.manager_staff_id, t3.address_id, t3.address\nFROM staff t1\nJOIN store t2 ON t1.store_id = t2.store_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- address: Table containing address data\n\nColumns used:\n- t2.manager_staff_id: \n- t1.first_name: \n- t2.store_id: \n- t3.address: \n- t1.staff_id: \n- t3.address_id: \n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'address': '47 MySakila Drive'}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'address': '28 MySQL Boulevard'}\n"
  },
  {
    "object_type": "query",
    "id": "query_201",
    "description": "Complex join across 3 tables: rental, payment, staff",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, payment, staff"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t3.first_name",
      "t2.payment_id",
      "t1.rental_id",
      "t3.staff_id",
      "t1.rental_date",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, payment, staff\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, payment, staff\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.staff_id, t3.first_name\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN staff t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t3.first_name: \n- t2.payment_id: \n- t1.rental_id: \n- t3.staff_id: \n- t1.rental_date: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'payment_id': 1, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 2: {'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'payment_id': 2, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\nRow 3: {'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'payment_id': 3, 'customer_id': 1, 'staff_id': 1, 'first_name': 'Mike'}\n"
  },
  {
    "object_type": "query",
    "id": "query_202",
    "description": "Complex join across 3 tables: rental, payment, customer",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, payment, customer"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t2.payment_id",
      "t1.rental_id",
      "t1.rental_date",
      "t3.store_id",
      "t3.customer_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, payment, customer\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, payment, customer\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.payment_id, t2.customer_id, t3.customer_id, t3.store_id\nFROM rental t1\nJOIN payment t2 ON t1.rental_id = t2.rental_id JOIN customer t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t2.payment_id: \n- t1.rental_id: \n- t1.rental_date: \n- t3.store_id: \n- t3.customer_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'payment_id': 1, 'customer_id': 1, 'store_id': 1}\nRow 2: {'rental_id': 573, 'rental_date': '2005-05-28 10:35:23.000', 'payment_id': 2, 'customer_id': 1, 'store_id': 1}\nRow 3: {'rental_id': 1185, 'rental_date': '2005-06-15 00:54:12.000', 'payment_id': 3, 'customer_id': 1, 'store_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_203",
    "description": "Complex join across 3 tables: rental, customer, address",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, customer, address"
    ],
    "tables_used": [
      "customer",
      "address",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.store_id",
      "t3.address",
      "t1.rental_date",
      "t3.address_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, customer, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, customer, address\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.address_id, t3.address\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.store_id: \n- t3.address: \n- t1.rental_date: \n- t3.address_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1, 'address_id': 134, 'address': '758 Junan Lane'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'customer_id': 459, 'store_id': 1, 'address_id': 464, 'address': '76 Kermanshah Manor'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'customer_id': 408, 'store_id': 1, 'address_id': 413, 'address': '692 Amroha Drive'}\n"
  },
  {
    "object_type": "query",
    "id": "query_204",
    "description": "Complex join across 3 tables: rental, customer, store",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, customer, store"
    ],
    "tables_used": [
      "store",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.store_id",
      "t3.manager_staff_id",
      "t1.rental_date",
      "t3.store_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, customer, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, customer, store\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.store_id: \n- t3.manager_staff_id: \n- t1.rental_date: \n- t3.store_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'customer_id': 459, 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'customer_id': 408, 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_205",
    "description": "Complex join across 3 tables: rental, customer, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, customer, payment"
    ],
    "tables_used": [
      "payment",
      "customer",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.store_id",
      "t1.rental_date",
      "t3.payment_id",
      "t3.customer_id",
      "t2.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, customer, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, customer, payment\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.customer_id, t2.store_id, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN customer t2 ON t1.customer_id = t2.customer_id JOIN payment t3 ON t2.customer_id = t3.customer_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.store_id: \n- t1.rental_date: \n- t3.payment_id: \n- t3.customer_id: \n- t2.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1, 'payment_id': 3504}\nRow 2: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1, 'payment_id': 3505}\nRow 3: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'customer_id': 130, 'store_id': 1, 'payment_id': 3506}\n"
  },
  {
    "object_type": "query",
    "id": "query_206",
    "description": "Complex join across 3 tables: rental, inventory, film",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, inventory, film"
    ],
    "tables_used": [
      "film",
      "inventory",
      "rental"
    ],
    "columns_used": [
      "t2.inventory_id",
      "t1.rental_id",
      "t3.title",
      "t1.rental_date",
      "t3.film_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, inventory, film\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, inventory, film\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.film_id, t3.title\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN film t3 ON t2.film_id = t3.film_id\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t2.inventory_id: \n- t1.rental_id: \n- t3.title: \n- t1.rental_date: \n- t3.film_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'film_id': 80, 'title': 'BLANKET BEVERLY'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'film_id': 333, 'title': 'FREAKY POCUS'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'film_id': 373, 'title': 'GRADUATE LORD'}\n"
  },
  {
    "object_type": "query",
    "id": "query_207",
    "description": "Complex join across 3 tables: rental, inventory, store",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, inventory, store"
    ],
    "tables_used": [
      "store",
      "inventory",
      "rental"
    ],
    "columns_used": [
      "t2.inventory_id",
      "t1.rental_id",
      "t3.manager_staff_id",
      "t1.rental_date",
      "t3.store_id",
      "t2.film_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, inventory, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, inventory, store\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.inventory_id, t2.film_id, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN inventory t2 ON t1.inventory_id = t2.inventory_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t2.inventory_id: \n- t1.rental_id: \n- t3.manager_staff_id: \n- t1.rental_date: \n- t3.store_id: \n- t2.film_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'film_id': 80, 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'film_id': 333, 'store_id': 2, 'manager_staff_id': 2}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'film_id': 373, 'store_id': 2, 'manager_staff_id': 2}\n"
  },
  {
    "object_type": "query",
    "id": "query_208",
    "description": "Complex join across 3 tables: rental, staff, payment",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, staff, payment"
    ],
    "tables_used": [
      "payment",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.staff_id",
      "t1.rental_date",
      "t2.first_name",
      "t3.payment_id",
      "t3.customer_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, staff, payment\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, staff, payment\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.payment_id, t3.customer_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN payment t3 ON t2.staff_id = t3.staff_id\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.staff_id: \n- t1.rental_date: \n- t2.first_name: \n- t3.payment_id: \n- t3.customer_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 1, 'customer_id': 1}\nRow 2: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 2, 'customer_id': 1}\nRow 3: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'payment_id': 3, 'customer_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_209",
    "description": "Complex join across 3 tables: rental, staff, address",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, staff, address"
    ],
    "tables_used": [
      "address",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.staff_id",
      "t3.address",
      "t1.rental_date",
      "t2.first_name",
      "t3.address_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, staff, address\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, staff, address\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.address_id, t3.address\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN address t3 ON t2.address_id = t3.address_id\nLIMIT 10;\n\nTables used:\n- address: Table containing address data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.staff_id: \n- t3.address: \n- t1.rental_date: \n- t2.first_name: \n- t3.address_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'staff_id': 1, 'first_name': 'Mike', 'address_id': 3, 'address': '23 Workhaven Lane'}\n"
  },
  {
    "object_type": "query",
    "id": "query_210",
    "description": "Complex join across 3 tables: rental, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, staff, store"
    ],
    "tables_used": [
      "store",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.staff_id",
      "t3.manager_staff_id",
      "t1.rental_date",
      "t2.first_name",
      "t3.store_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, staff, store\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.staff_id: \n- t3.manager_staff_id: \n- t1.rental_date: \n- t2.first_name: \n- t3.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_211",
    "description": "Complex join across 3 tables: rental, staff, store",
    "complexity": "advanced",
    "sql": "SELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;",
    "natural_language_variations": [
      "Complex join across 3 tables: rental, staff, store"
    ],
    "tables_used": [
      "store",
      "staff",
      "rental"
    ],
    "columns_used": [
      "t1.rental_id",
      "t2.staff_id",
      "t3.manager_staff_id",
      "t1.rental_date",
      "t2.first_name",
      "t3.store_id"
    ],
    "text_representation": "Query: Complex join across 3 tables: rental, staff, store\n\nComplexity: advanced\n\nCan be asked as:\n- Complex join across 3 tables: rental, staff, store\n\nSQL Query:\nSELECT t1.rental_id, t1.rental_date, t2.staff_id, t2.first_name, t3.store_id, t3.manager_staff_id\nFROM rental t1\nJOIN staff t2 ON t1.staff_id = t2.staff_id JOIN store t3 ON t2.store_id = t3.store_id\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- staff: Employees who work at the DVD rental stores\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- t1.rental_id: \n- t2.staff_id: \n- t3.manager_staff_id: \n- t1.rental_date: \n- t2.first_name: \n- t3.store_id: \n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'staff_id': 1, 'first_name': 'Mike', 'store_id': 1, 'manager_staff_id': 1}\n"
  },
  {
    "object_type": "query",
    "id": "query_212",
    "description": "Subquery filtering records from actor",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from actor"
    ],
    "tables_used": [
      "film_actor",
      "actor"
    ],
    "columns_used": [
      "actor_id"
    ],
    "text_representation": "Query: Subquery filtering records from actor\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from actor\n\nSQL Query:\nSELECT *\nFROM actor\nWHERE actor_id IN (\n    SELECT actor_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- actor: Performers who appear in films\n\nColumns used:\n- actor_id\n\nExecution: Successful\nRow Count: 5\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE', 'last_name': 'GUINESS', 'last_update': '2020-12-23 07:12:29'}\nRow 2: {'actor_id': 2, 'first_name': 'NICK', 'last_name': 'WAHLBERG', 'last_update': '2020-12-23 07:12:29'}\nRow 3: {'actor_id': 3, 'first_name': 'ED', 'last_name': 'CHASE', 'last_update': '2020-12-23 07:12:29'}\n"
  },
  {
    "object_type": "query",
    "id": "query_213",
    "description": "EXISTS subquery with actor and film_actor",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with actor and film_actor"
    ],
    "tables_used": [
      "film_actor",
      "actor"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with actor and film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with actor and film_actor\n\nSQL Query:\nSELECT *\nFROM actor t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.actor_id = t1.actor_id\n)\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- actor: Performers who appear in films\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE', 'last_name': 'GUINESS', 'last_update': '2020-12-23 07:12:29'}\nRow 2: {'actor_id': 2, 'first_name': 'NICK', 'last_name': 'WAHLBERG', 'last_update': '2020-12-23 07:12:29'}\nRow 3: {'actor_id': 3, 'first_name': 'ED', 'last_name': 'CHASE', 'last_update': '2020-12-23 07:12:29'}\n"
  },
  {
    "object_type": "query",
    "id": "query_214",
    "description": "Subquery filtering records from address",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from address"
    ],
    "tables_used": [
      "customer",
      "address"
    ],
    "columns_used": [
      "address_id"
    ],
    "text_representation": "Query: Subquery filtering records from address\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from address\n\nSQL Query:\nSELECT *\nFROM address\nWHERE address_id IN (\n    SELECT address_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- address_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 5, 'address': '1913 Hanoi Way', 'address2': None, 'district': ' ', 'city_id': 463, 'postal_code': '35200', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 2: {'address_id': 6, 'address': '1121 Loja Avenue', 'address2': None, 'district': ' ', 'city_id': 449, 'postal_code': '17886', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 3: {'address_id': 7, 'address': '692 Joliet Street', 'address2': None, 'district': ' ', 'city_id': 38, 'postal_code': '83579', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\n"
  },
  {
    "object_type": "query",
    "id": "query_215",
    "description": "EXISTS subquery with address and customer",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with address and customer"
    ],
    "tables_used": [
      "customer",
      "address"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with address and customer\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with address and customer\n\nSQL Query:\nSELECT *\nFROM address t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.address_id = t1.address_id\n)\nLIMIT 10;\n\nTables used:\n- customer: Individuals who rent DVDs from the store\n- address: Table containing address data\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'address_id': 5, 'address': '1913 Hanoi Way', 'address2': None, 'district': ' ', 'city_id': 463, 'postal_code': '35200', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 2: {'address_id': 6, 'address': '1121 Loja Avenue', 'address2': None, 'district': ' ', 'city_id': 449, 'postal_code': '17886', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\nRow 3: {'address_id': 7, 'address': '692 Joliet Street', 'address2': None, 'district': ' ', 'city_id': 38, 'postal_code': '83579', 'phone': ' ', 'last_update': '2020-12-23 07:12:21'}\n"
  },
  {
    "object_type": "query",
    "id": "query_216",
    "description": "Subquery filtering records from category",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from category"
    ],
    "tables_used": [
      "film_category",
      "category"
    ],
    "columns_used": [
      "category_id"
    ],
    "text_representation": "Query: Subquery filtering records from category\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from category\n\nSQL Query:\nSELECT *\nFROM category\nWHERE category_id IN (\n    SELECT category_id\n    FROM film_category\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nColumns used:\n- category_id\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'category_id': 1, 'name': 'Action', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'category_id': 2, 'name': 'Animation', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_217",
    "description": "EXISTS subquery with category and film_category",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with category and film_category"
    ],
    "tables_used": [
      "film_category",
      "category"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with category and film_category\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with category and film_category\n\nSQL Query:\nSELECT *\nFROM category t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_category t2\n    WHERE t2.category_id = t1.category_id\n)\nLIMIT 10;\n\nTables used:\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'category_id': 1, 'name': 'Action', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'category_id': 2, 'name': 'Animation', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'category_id': 3, 'name': 'Children', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_218",
    "description": "Subquery filtering records from city",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from city"
    ],
    "tables_used": [
      "address",
      "city"
    ],
    "columns_used": [
      "city_id"
    ],
    "text_representation": "Query: Subquery filtering records from city\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from city\n\nSQL Query:\nSELECT *\nFROM city\nWHERE city_id IN (\n    SELECT city_id\n    FROM address\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- city_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:14'}\nRow 2: {'city_id': 2, 'city': 'Abha', 'country_id': 82, 'last_update': '2020-12-23 07:12:14'}\nRow 3: {'city_id': 3, 'city': 'Abu Dhabi', 'country_id': 101, 'last_update': '2020-12-23 07:12:14'}\n"
  },
  {
    "object_type": "query",
    "id": "query_219",
    "description": "EXISTS subquery with city and address",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with city and address"
    ],
    "tables_used": [
      "address",
      "city"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with city and address\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with city and address\n\nSQL Query:\nSELECT *\nFROM city t1\nWHERE EXISTS (\n    SELECT 1\n    FROM address t2\n    WHERE t2.city_id = t1.city_id\n)\nLIMIT 10;\n\nTables used:\n- address: Table containing address data\n- city: Table containing city data\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'city_id': 1, 'city': 'A Corua (La Corua)', 'country_id': 87, 'last_update': '2020-12-23 07:12:14'}\nRow 2: {'city_id': 2, 'city': 'Abha', 'country_id': 82, 'last_update': '2020-12-23 07:12:14'}\nRow 3: {'city_id': 3, 'city': 'Abu Dhabi', 'country_id': 101, 'last_update': '2020-12-23 07:12:14'}\n"
  },
  {
    "object_type": "query",
    "id": "query_220",
    "description": "Subquery filtering records from country",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from country"
    ],
    "tables_used": [
      "country",
      "city"
    ],
    "columns_used": [
      "country_id"
    ],
    "text_representation": "Query: Subquery filtering records from country\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from country\n\nSQL Query:\nSELECT *\nFROM country\nWHERE country_id IN (\n    SELECT country_id\n    FROM city\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- country: Table containing country data\n- city: Table containing city data\n\nColumns used:\n- country_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'country_id': 1, 'country': 'Afghanistan', 'last_update': '2020-12-23 07:12:12'}\nRow 2: {'country_id': 2, 'country': 'Algeria', 'last_update': '2020-12-23 07:12:12'}\nRow 3: {'country_id': 3, 'country': 'American Samoa', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_221",
    "description": "EXISTS subquery with country and city",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with country and city"
    ],
    "tables_used": [
      "country",
      "city"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with country and city\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with country and city\n\nSQL Query:\nSELECT *\nFROM country t1\nWHERE EXISTS (\n    SELECT 1\n    FROM city t2\n    WHERE t2.country_id = t1.country_id\n)\nLIMIT 10;\n\nTables used:\n- country: Table containing country data\n- city: Table containing city data\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'country_id': 1, 'country': 'Afghanistan', 'last_update': '2020-12-23 07:12:12'}\nRow 2: {'country_id': 2, 'country': 'Algeria', 'last_update': '2020-12-23 07:12:12'}\nRow 3: {'country_id': 3, 'country': 'American Samoa', 'last_update': '2020-12-23 07:12:12'}\n"
  },
  {
    "object_type": "query",
    "id": "query_222",
    "description": "Subquery filtering records from customer",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from customer"
    ],
    "tables_used": [
      "payment",
      "customer"
    ],
    "columns_used": [
      "customer_id"
    ],
    "text_representation": "Query: Subquery filtering records from customer\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from customer\n\nSQL Query:\nSELECT *\nFROM customer\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- customer_id\n\nExecution: Successful\nRow Count: 4\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 6, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 7, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\n"
  },
  {
    "object_type": "query",
    "id": "query_223",
    "description": "EXISTS subquery with customer and payment",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with customer and payment"
    ],
    "tables_used": [
      "payment",
      "customer"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with customer and payment\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with customer and payment\n\nSQL Query:\nSELECT *\nFROM customer t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.customer_id = t1.customer_id\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'customer_id': 1, 'store_id': 1, 'first_name': 'MARY', 'last_name': 'SMITH', 'email': 'MARY.SMITH@sakilacustomer.org', 'address_id': 5, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 2: {'customer_id': 2, 'store_id': 1, 'first_name': 'PATRICIA', 'last_name': 'JOHNSON', 'email': 'PATRICIA.JOHNSON@sakilacustomer.org', 'address_id': 6, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\nRow 3: {'customer_id': 3, 'store_id': 1, 'first_name': 'LINDA', 'last_name': 'WILLIAMS', 'email': 'LINDA.WILLIAMS@sakilacustomer.org', 'address_id': 7, 'active': '1', 'create_date': '2006-02-14 22:04:36.000', 'last_update': '2020-12-23 07:15:11'}\n"
  },
  {
    "object_type": "query",
    "id": "query_224",
    "description": "Subquery filtering records from film",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from film"
    ],
    "tables_used": [
      "film_actor",
      "film"
    ],
    "columns_used": [
      "film_id"
    ],
    "text_representation": "Query: Subquery filtering records from film\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from film\n\nSQL Query:\nSELECT *\nFROM film\nWHERE film_id IN (\n    SELECT film_id\n    FROM film_actor\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- film_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_225",
    "description": "EXISTS subquery with film and film_actor",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with film and film_actor"
    ],
    "tables_used": [
      "film_actor",
      "film"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with film and film_actor\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with film and film_actor\n\nSQL Query:\nSELECT *\nFROM film t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film_actor t2\n    WHERE t2.film_id = t1.film_id\n)\nLIMIT 10;\n\nTables used:\n- film_actor: Table containing film_actor data\n- film: Movies available for rental in DVD format\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'film_id': 1, 'title': 'ACADEMY DINOSAUR', 'description': 'A Epic Drama of a Feminist And a Mad Scientist who must Battle a Teacher in The Canadian Rockies', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 6, 'rental_rate': 0.99, 'length': 86, 'replacement_cost': 20.99, 'rating': 'PG', 'special_features': 'Deleted Scenes,Behind the Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'film_id': 2, 'title': 'ACE GOLDFINGER', 'description': 'A Astounding Epistle of a Database Administrator And a Explorer who must Find a Car in Ancient China', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 3, 'rental_rate': 4.99, 'length': 48, 'replacement_cost': 12.99, 'rating': 'G', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\nRow 3: {'film_id': 3, 'title': 'ADAPTATION HOLES', 'description': 'A Astounding Reflection of a Lumberjack And a Car who must Sink a Lumberjack in A Baloon Factory', 'release_year': '2006', 'language_id': 1, 'original_language_id': None, 'rental_duration': 7, 'rental_rate': 2.99, 'length': 50, 'replacement_cost': 18.99, 'rating': 'NC-17', 'special_features': 'Trailers,Deleted Scenes', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_226",
    "description": "Subquery filtering records from inventory",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from inventory"
    ],
    "tables_used": [
      "inventory",
      "rental"
    ],
    "columns_used": [
      "inventory_id"
    ],
    "text_representation": "Query: Subquery filtering records from inventory\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from inventory\n\nSQL Query:\nSELECT *\nFROM inventory\nWHERE inventory_id IN (\n    SELECT inventory_id\n    FROM rental\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- inventory_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\n"
  },
  {
    "object_type": "query",
    "id": "query_227",
    "description": "EXISTS subquery with inventory and rental",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with inventory and rental"
    ],
    "tables_used": [
      "inventory",
      "rental"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with inventory and rental\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with inventory and rental\n\nSQL Query:\nSELECT *\nFROM inventory t1\nWHERE EXISTS (\n    SELECT 1\n    FROM rental t2\n    WHERE t2.inventory_id = t1.inventory_id\n)\nLIMIT 10;\n\nTables used:\n- inventory: Table containing inventory data\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'inventory_id': 1, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 2: {'inventory_id': 2, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\nRow 3: {'inventory_id': 3, 'film_id': 1, 'store_id': 1, 'last_update': '2020-12-23 07:12:45'}\n"
  },
  {
    "object_type": "query",
    "id": "query_228",
    "description": "Subquery filtering records from language",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from language"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [
      "language_id"
    ],
    "text_representation": "Query: Subquery filtering records from language\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from language\n\nSQL Query:\nSELECT *\nFROM language\nWHERE language_id IN (\n    SELECT original_language_id\n    FROM film\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- language_id\n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_229",
    "description": "EXISTS subquery with language and film",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with language and film"
    ],
    "tables_used": [
      "film",
      "language"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with language and film\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with language and film\n\nSQL Query:\nSELECT *\nFROM language t1\nWHERE EXISTS (\n    SELECT 1\n    FROM film t2\n    WHERE t2.original_language_id = t1.language_id\n)\nLIMIT 10;\n\nTables used:\n- film: Movies available for rental in DVD format\n- language: Table containing language data\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 0\n"
  },
  {
    "object_type": "query",
    "id": "query_230",
    "description": "Subquery filtering records from rental",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from rental"
    ],
    "tables_used": [
      "payment",
      "rental"
    ],
    "columns_used": [
      "rental_id"
    ],
    "text_representation": "Query: Subquery filtering records from rental\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from rental\n\nSQL Query:\nSELECT *\nFROM rental\nWHERE rental_id IN (\n    SELECT rental_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- rental_id\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 76, 'rental_date': '2005-05-25 11:30:37.000', 'inventory_id': 3021, 'customer_id': 1, 'return_date': '2005-06-03 12:00:37.000', 'staff_id': 2, 'last_update': '2020-12-23 07:15:21'}\nRow 2: {'rental_id': 320, 'rental_date': '2005-05-27 00:09:24.000', 'inventory_id': 1090, 'customer_id': 2, 'return_date': '2005-05-28 04:30:24.000', 'staff_id': 2, 'last_update': '2020-12-23 07:15:24'}\nRow 3: {'rental_id': 435, 'rental_date': '2005-05-27 17:17:09.000', 'inventory_id': 3328, 'customer_id': 3, 'return_date': '2005-06-02 11:20:09.000', 'staff_id': 2, 'last_update': '2020-12-23 07:15:25'}\n"
  },
  {
    "object_type": "query",
    "id": "query_231",
    "description": "EXISTS subquery with rental and payment",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with rental and payment"
    ],
    "tables_used": [
      "payment",
      "rental"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with rental and payment\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with rental and payment\n\nSQL Query:\nSELECT *\nFROM rental t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.rental_id = t1.rental_id\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'rental_id': 1, 'rental_date': '2005-05-24 22:53:30.000', 'inventory_id': 367, 'customer_id': 130, 'return_date': '2005-05-26 22:04:30.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\nRow 2: {'rental_id': 2, 'rental_date': '2005-05-24 22:54:33.000', 'inventory_id': 1525, 'customer_id': 459, 'return_date': '2005-05-28 19:40:33.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\nRow 3: {'rental_id': 3, 'rental_date': '2005-05-24 23:03:39.000', 'inventory_id': 1711, 'customer_id': 408, 'return_date': '2005-06-01 22:12:39.000', 'staff_id': 1, 'last_update': '2020-12-23 07:15:20'}\n"
  },
  {
    "object_type": "query",
    "id": "query_232",
    "description": "Subquery filtering records from staff",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from staff"
    ],
    "tables_used": [
      "payment",
      "staff"
    ],
    "columns_used": [
      "staff_id"
    ],
    "text_representation": "Query: Subquery filtering records from staff\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from staff\n\nSQL Query:\nSELECT *\nFROM staff\nWHERE staff_id IN (\n    SELECT staff_id\n    FROM payment\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- staff_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_233",
    "description": "EXISTS subquery with staff and payment",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with staff and payment"
    ],
    "tables_used": [
      "payment",
      "staff"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with staff and payment\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with staff and payment\n\nSQL Query:\nSELECT *\nFROM staff t1\nWHERE EXISTS (\n    SELECT 1\n    FROM payment t2\n    WHERE t2.staff_id = t1.staff_id\n)\nLIMIT 10;\n\nTables used:\n- payment: Financial transactions for rentals and late fees\n- staff: Employees who work at the DVD rental stores\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'staff_id': 1, 'first_name': 'Mike', 'last_name': 'Hillyer', 'address_id': 3, 'picture': None, 'email': 'Mike.Hillyer@sakilastaff.com', 'store_id': 1, 'active': 1, 'username': 'Mike', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'staff_id': 2, 'first_name': 'Jon', 'last_name': 'Stephens', 'address_id': 4, 'picture': None, 'email': 'Jon.Stephens@sakilastaff.com', 'store_id': 2, 'active': 1, 'username': 'Jon', 'password': '8cb2237d0679ca88db6464eac60da96345513964', 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_234",
    "description": "Subquery filtering records from store",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;",
    "natural_language_variations": [
      "Subquery filtering records from store"
    ],
    "tables_used": [
      "store",
      "customer"
    ],
    "columns_used": [
      "store_id"
    ],
    "text_representation": "Query: Subquery filtering records from store\n\nComplexity: advanced\n\nCan be asked as:\n- Subquery filtering records from store\n\nSQL Query:\nSELECT *\nFROM store\nWHERE store_id IN (\n    SELECT store_id\n    FROM customer\n    LIMIT 100\n)\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- store_id\n\nExecution: Successful\nRow Count: 1\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_235",
    "description": "EXISTS subquery with store and customer",
    "complexity": "advanced",
    "sql": "SELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;",
    "natural_language_variations": [
      "EXISTS subquery with store and customer"
    ],
    "tables_used": [
      "store",
      "customer"
    ],
    "columns_used": [
      "EX"
    ],
    "text_representation": "Query: EXISTS subquery with store and customer\n\nComplexity: advanced\n\nCan be asked as:\n- EXISTS subquery with store and customer\n\nSQL Query:\nSELECT *\nFROM store t1\nWHERE EXISTS (\n    SELECT 1\n    FROM customer t2\n    WHERE t2.store_id = t1.store_id\n)\nLIMIT 10;\n\nTables used:\n- store: Table containing store data\n- customer: Individuals who rent DVDs from the store\n\nColumns used:\n- EX\n\nExecution: Successful\nRow Count: 2\n\nSample Results:\nRow 1: {'store_id': 1, 'manager_staff_id': 1, 'address_id': 1, 'last_update': '2020-12-23 07:12:31'}\nRow 2: {'store_id': 2, 'manager_staff_id': 2, 'address_id': 2, 'last_update': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_236",
    "description": "Common Table Expression (CTE) on actor",
    "complexity": "advanced",
    "sql": "WITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;",
    "natural_language_variations": [
      "Common Table Expression (CTE) on actor"
    ],
    "tables_used": [
      "actor_cte",
      "actor"
    ],
    "columns_used": [
      "actor_id",
      "first_name"
    ],
    "text_representation": "Query: Common Table Expression (CTE) on actor\n\nComplexity: advanced\n\nCan be asked as:\n- Common Table Expression (CTE) on actor\n\nSQL Query:\nWITH actor_cte AS (\n    SELECT actor_id, first_name\n    FROM actor\n    WHERE actor_id IS NOT NULL\n)\nSELECT *\nFROM actor_cte\nLIMIT 10;\n\nTables used:\n- actor_cte: \n- actor: Performers who appear in films\n\nColumns used:\n- actor_id\n- first_name\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'actor_id': 1, 'first_name': 'PENELOPE'}\nRow 2: {'actor_id': 2, 'first_name': 'NICK'}\nRow 3: {'actor_id': 3, 'first_name': 'ED'}\n"
  },
  {
    "object_type": "query",
    "id": "query_237",
    "description": "UNION query combining results from actor and address",
    "complexity": "advanced",
    "sql": "SELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;",
    "natural_language_variations": [
      "UNION query combining results from actor and address"
    ],
    "tables_used": [
      "actor",
      "address"
    ],
    "columns_used": [
      "last_update",
      "actor"
    ],
    "text_representation": "Query: UNION query combining results from actor and address\n\nComplexity: advanced\n\nCan be asked as:\n- UNION query combining results from actor and address\n\nSQL Query:\nSELECT 'actor' AS source, last_update AS value\nFROM actor\nWHERE last_update IS NOT NULL\n\nUNION\n\nSELECT 'address' AS source, last_update AS value\nFROM address\nWHERE last_update IS NOT NULL\nLIMIT 10;\n\nTables used:\n- actor: Performers who appear in films\n- address: Table containing address data\n\nColumns used:\n- last_update\n- actor\n\nExecution: Successful\nRow Count: 10\n\nSample Results:\nRow 1: {'source': 'actor', 'value': '2020-12-23 07:12:29'}\nRow 2: {'source': 'actor', 'value': '2020-12-23 07:12:30'}\nRow 3: {'source': 'actor', 'value': '2020-12-23 07:12:31'}\n"
  },
  {
    "object_type": "query",
    "id": "query_238",
    "description": "Find films in a specific category",
    "complexity": "medium",
    "sql": "SELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'",
    "natural_language_variations": [
      "Show me all {category} films",
      "What movies do we have in the {category} category?",
      "List {category} titles",
      "Find DVDs in {category}"
    ],
    "tables_used": [
      "film",
      "film_category",
      "category"
    ],
    "columns_used": [
      "c.name"
    ],
    "text_representation": "Query: Find films in a specific category\n\nComplexity: medium\n\nCan be asked as:\n- Show me all {category} films\n- What movies do we have in the {category} category?\n- List {category} titles\n- Find DVDs in {category}\n\nSQL Query:\nSELECT f.* FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id WHERE c.name = 'X'\n\nTables used:\n- film: Movies available for rental in DVD format\n- film_category: Table containing film_category data\n- category: Table containing category data\n\nColumns used:\n- c.name: \n"
  },
  {
    "object_type": "query",
    "id": "query_239",
    "description": "View a customer's rental history",
    "complexity": "medium",
    "sql": "SELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'",
    "natural_language_variations": [
      "Show me what {customer_name} has rented",
      "List rental history for {customer_name}",
      "What films has {customer_name} watched?",
      "Show me {customer_name}'s rentals"
    ],
    "tables_used": [
      "film",
      "inventory",
      "customer",
      "rental"
    ],
    "columns_used": [
      "c.last_name",
      "r.rental_date",
      "f.title"
    ],
    "text_representation": "Query: View a customer's rental history\n\nComplexity: medium\n\nCan be asked as:\n- Show me what {customer_name} has rented\n- List rental history for {customer_name}\n- What films has {customer_name} watched?\n- Show me {customer_name}'s rentals\n\nSQL Query:\nSELECT f.title, r.rental_date FROM customer c JOIN rental r ON c.customer_id = r.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE c.last_name = 'X'\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- c.last_name: \n- r.rental_date: \n- f.title: \n"
  },
  {
    "object_type": "query",
    "id": "query_240",
    "description": "Find overdue rentals",
    "complexity": "medium",
    "sql": "SELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE",
    "natural_language_variations": [
      "Show me all overdue rentals",
      "Which customers have late returns?",
      "List DVDs that are past due",
      "Show rentals that haven't been returned on time"
    ],
    "tables_used": [
      "film",
      "inventory",
      "customer",
      "rental"
    ],
    "columns_used": [
      "r.return_date",
      "r.rental_date",
      "f.title",
      "c.last_name",
      "c.first_name"
    ],
    "text_representation": "Query: Find overdue rentals\n\nComplexity: medium\n\nCan be asked as:\n- Show me all overdue rentals\n- Which customers have late returns?\n- List DVDs that are past due\n- Show rentals that haven't been returned on time\n\nSQL Query:\nSELECT c.first_name, c.last_name, f.title, r.rental_date, r.return_date FROM rental r JOIN customer c ON r.customer_id = c.customer_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id WHERE r.return_date IS NULL AND r.rental_date + INTERVAL f.rental_duration DAY < CURRENT_DATE\n\nTables used:\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- customer: Individuals who rent DVDs from the store\n- rental: Records of DVDs rented by customers\n\nColumns used:\n- r.return_date: \n- r.rental_date: \n- f.title: \n- c.last_name: \n- c.first_name: \n"
  },
  {
    "object_type": "query",
    "id": "query_241",
    "description": "Calculate revenue by film category",
    "complexity": "medium",
    "sql": "SELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC",
    "natural_language_variations": [
      "How much revenue comes from each category?",
      "Which film categories generate the most money?",
      "Show sales by category",
      "What's our top earning genre?"
    ],
    "tables_used": [
      "film_category",
      "payment",
      "rental",
      "film",
      "inventory",
      "category"
    ],
    "columns_used": [
      "c.name",
      "SUM(p.amount)",
      "c.name ORDER BY revenue DESC"
    ],
    "text_representation": "Query: Calculate revenue by film category\n\nComplexity: medium\n\nCan be asked as:\n- How much revenue comes from each category?\n- Which film categories generate the most money?\n- Show sales by category\n- What's our top earning genre?\n\nSQL Query:\nSELECT c.name, SUM(p.amount) as revenue FROM payment p JOIN rental r ON p.rental_id = r.rental_id JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY revenue DESC\n\nTables used:\n- film_category: Table containing film_category data\n- payment: Financial transactions for rentals and late fees\n- rental: Records of DVDs rented by customers\n- film: Movies available for rental in DVD format\n- inventory: Table containing inventory data\n- category: Table containing category data\n\nColumns used:\n- c.name: \n- SUM(p.amount): \n- c.name ORDER BY revenue DESC: \n"
  }
]